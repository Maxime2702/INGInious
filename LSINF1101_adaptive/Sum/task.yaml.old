accessible: 2018-10-12 12:00:00/
author: Tanguy De Bels
context: |-
    The method ``sum(list)`` returns the sum of the elements contained in ``list``.

    Example: the sum of :math:`[1, 2, 3]` is :math:`6`

    Note that your algorithm should be able to compute the sum even when the list ``list`` contains malicious elements (not numbers).

    .. raw:: html

       <script defer>

       bodyHeight = 0;
       function postSize() {
           if (document.body.scrollHeight != bodyHeight) {
               bodyHeight = document.body.scrollHeight;
               window.parent.postMessage({height: document.body.scrollHeight}, "*");
           }
       };
       var target = document.querySelector('body');

       var observer = new MutationObserver(postSize);

       var config = { attributes: true, subtree: true }

       observer.observe(target, config);
       $(document).ready(function(){
           setTimeout(postSize, 0);
       });
       </script>
environment: default
evaluate: best
groups: false
input_random: '0'
limits:
    output: '2'
    memory: '100'
    time: '30'
name: 'Session 4: Q* Sum'
network_grading: false
order: 40
problems:
    q1:
        name: Implementation
        type: code
        header: |-
            Provide the body of the following method:

            .. code-block:: python

                def sum(list):
        language: python
        default: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
