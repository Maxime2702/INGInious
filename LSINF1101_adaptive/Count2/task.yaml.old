accessible: 2018-10-19 12:00:00/
author: Tanguy De Bels
context: |-
    Une liste d'événements est donnée comme dans l'exercice précédent, ainsi que deux paramètres ``m`` et ``n``. Créez une fonction ``counts(events,m,n)`` qui retourne une matrice ``matrix`` avec pour chaque nombre entier ``0<=i<n`` et ``0<=j<m`` comme valeur ``matrix[i][j]`` le nombre d'événements aux coordonnées ``(i,j)``.
    Pour l'exemple de l'exercice précédente, le résultat de  ``counts(events,2,3)`` est:

    .. code-block:: python

      [[0,3,1],
      [0,2,1]]

    Utilisez la fonction de l'exercice précédent:

    .. code-block:: python

      def count(events, i, j):
      """
      pre:  events est une liste de tuples de 2 coordonnées (entiers)
            i et j sont des entiers
      post: renvoit le nombre de fois qu'un événement aux coordonnées i et j a lieu
      """

    .. raw:: html

       <script defer>

       bodyHeight = 0;
       function postSize() {
           if (document.body.scrollHeight != bodyHeight) {
               bodyHeight = document.body.scrollHeight;
               window.parent.postMessage({height: document.body.scrollHeight}, "*");
           }
       };
       var target = document.querySelector('body');

       var observer = new MutationObserver(postSize);

       var config = { attributes: true, subtree: true }

       observer.observe(target, config);
       $(document).ready(function(){
           setTimeout(postSize, 0);
       });
       </script>
environment: default
evaluate: best
groups: false
input_random: '0'
limits:
    output: '2'
    memory: '100'
    time: '30'
name: 'Session 5: Compteur d''événements (Matrice)'
network_grading: false
order: 49
problems:
    q1:
        type: code
        name: Implémentation
        header: Implémentez la fonction ``counts(events, n, m)`` en Python.
        language: python
        default: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
