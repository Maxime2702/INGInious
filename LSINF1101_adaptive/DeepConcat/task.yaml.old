accessible: false
author: Tanguy De Bels
categories: []
context: |-
    Suppose we have a multi-level depth list of which the elements are all strings.

    *Example*: ["a",["b","6"],"e",["5",["g","h"]],"i"]

    Create a function deepconcat(l) that traverses this structure and creates a new string which is the concatenation of all the strings appearing in that structure.

    *Example*:
    deepconcat(["a",["b","6"],"e",["5",["g","h"]],"i"])
    => returns "ab6de5ghi"

    .. raw:: html

       <script defer>

       bodyHeight = 0;
       function postSize() {
           if (document.body.scrollHeight != bodyHeight) {
               bodyHeight = document.body.scrollHeight;
               window.parent.postMessage({height: document.body.scrollHeight}, "*");
           }
       };
       var target = document.querySelector('body');

       var observer = new MutationObserver(postSize);

       var config = { attributes: true, subtree: true }

       observer.observe(target, config);
       $(document).ready(function(){
           setTimeout(postSize, 0);
       });
       </script>
environment: default
evaluate: best
file: ''
groups: false
input_random: '0'
limits:
    time: '30'
    memory: '100'
    output: '2'
name: 'Session 8: Q* Deep concatenation'
network_grading: false
order: 94
problems:
    q1:
        type: code
        name: Implementation
        language: python
        header: Implement the function ``deep_concat(l)`` in Python.
        default: ''
run_cmd: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
