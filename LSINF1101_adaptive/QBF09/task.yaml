accessible: true
author: Tanguy De Bels
categories:
- Classe
contact_url: ''
context: |-
    Écrivez une classe complète ``Employe`` dont les instances représentent un employé d’entreprise. Un employé est caractérisé par son ``nom`` (un string) et son ``salaire`` (un nombre). Il doit être possible de créer un nouvel employé avec un nom et un salaire et d’effectuer les opérations suivantes sur un objet Employe :

    * obtenir un texte descriptif représentant l’employé sous la forme ``nom : salaire``
    * augmenter le salaire de l'employé d'un certain pourcentage

    Après avoir défini cette classe ``Employe``, le code suivante doit s'exécuter correctement
    et imprimer ``"Charles : 2750.0"``.

    .. code-block:: python

      charles = Employe("Charles", 2500)
      charles.augmente(10)
      print(charles)


    .. raw:: html

       <script defer>

       bodyHeight = 0;
       function postSize() {
           if (document.body.scrollHeight != bodyHeight) {
               bodyHeight = document.body.scrollHeight;
               window.parent.postMessage({height: document.body.scrollHeight}, "*");
           }
       };
       var target = document.querySelector('body');

       var observer = new MutationObserver(postSize);

       var config = { attributes: true, subtree: true }

       observer.observe(target, config);
       $(document).ready(function(){
           setTimeout(postSize, 0);
       });
       </script>
environment: default
evaluate: best
file: ''
groups: false
input_random: '0'
limits:
    time: '30'
    output: '2'
    memory: '100'
name: 'Session 8: QBF'
network_grading: false
order: 117
problems:
    q1:
        header: |-
            Implémentez la classe ``Employe`` en Python.

            Nous créerons l'objet avec l'instruction:

            *emp = Employe('nom', salaire)*
        name: Implementation
        language: python
        type: code
        default: ''
run_cmd: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
