accessible: true
author: Olivier Goletti, Siegfried Nijssen
categories:
- Méthodes
- String
contact_url: ''
context: |-
    Écrivez une fonction ``triangle(n)`` qui pour un nombre entier donné ``n``, retourne la liste de listes imbriquées.

    .. code-block:: python

          [ [ 0 ],
            [ 0, 1 ],
            [ 0, 1, 2 ],
            ...,
            [ 0, 1, 2, ..., n ] ]

    .. raw:: html

       <script defer>

       bodyHeight = 0;
       function postSize() {
           if (document.body.scrollHeight != bodyHeight) {
               bodyHeight = document.body.scrollHeight;
               window.parent.postMessage({height: document.body.scrollHeight}, "*");
           }
       };
       var target = document.querySelector('body');

       var observer = new MutationObserver(postSize);

       var config = { attributes: true, subtree: true }

       observer.observe(target, config);
       $(document).ready(function(){
           setTimeout(postSize, 0);
       });
       </script>
environment: default
evaluate: last
file: ''
groups: false
input_random: '0'
limits:
    time: '30'
    output: '2'
    memory: '100'
name: 'Session 4: Triangle'
network_grading: false
order: 34
problems:
    q1:
        language: python
        name: Implementation
        type: code
        header: Implement the function ``triangle(n)`` in Python.
        default: ''
run_cmd: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
