# French translations for PROJECT.
# Copyright (C) 2018 ORGANIZATION
# This file is distributed under the same license as the PROJECT project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
msgid ""
msgstr ""

#. name
#: course.yaml
msgid "[LSINF1101-PYTHON] Introduction à la programmation"
msgstr "[LSINF1101-PYTHON] Introduction à la programmation"

#: AmazonConstructor/run:67 AmazonPay/run:67 Average/run:67 Bath/run:67
#: DebtReminder/run:67 DeepConcat/run:67 DestroyAllEnnemies/run:67
#: DestroyAnEnnemy/run:67 DiffCount/run:67 DoubleLink/run:67 DummyScript/run:66
#: Factorial/run:67 Fibonacci/run:67 FirstSum/run:67 FizzBuzz/run:67
#: Flatten/run:67 GCD/run:67 GD/run:67 GUI/run:67 Hello/run:67 HighOrder/run:67
#: Hogwarts-I/run:67 Hogwarts-II/run:67 Hogwarts-III/run:67 Hogwarts-IV/run:67
#: Hogwarts-V/run:67 Interests/run:67 Interval/run:67 LinkedList/run:67
#: LinkedListChildren/run:67 LoadSaveGame/run:67 Max/run:67 Median/run:67
#: Memoization/run:67 MergeList/run:67 Min/run:67 Morse/run:67
#: PatternExtraction-I/run:67 PatternExtraction-II/run:67
#: PatternExtraction-III/run:67 Polynomial/run:67 Primes/run:67 Quetelet/run:67
#: RecursiveFactorial/run:67 RecursiveFibonacci/run:67 RecursiveSum/run:67
#: Remainder/run:67 Sort/run:67 SpeedingFine/run:67 StudentConstructor/run:67
#: Sum/run:67 Translator/run:67 WrongIterations/run:67 ZooGame/run:67 dummy_run:66
#: run:67
msgid ""
"Your program does not compile: \n"
" "
msgstr "Votre programme ne compile pas : "

#: DummyScript/run:79 dummy_run:79
#, python-format
msgid ""
"Your program prints:\n"
"\n"
"%s\n"
msgstr ""
"Votre programme affiche : \n"
"\n"
"%s\n"

#: AmazonConstructor/run:78 AmazonConstructor/run:90 AmazonPay/run:78
#: AmazonPay/run:90 Average/run:78 Average/run:90 Bath/run:78 Bath/run:90
#: DebtReminder/run:78 DebtReminder/run:90 DeepConcat/run:78 DeepConcat/run:90
#: DestroyAllEnnemies/run:78 DestroyAllEnnemies/run:90 DestroyAnEnnemy/run:78
#: DestroyAnEnnemy/run:90 DiffCount/run:78 DiffCount/run:90 DoubleLink/run:78
#: DoubleLink/run:90 Factorial/run:78 Factorial/run:90 Fibonacci/run:78
#: Fibonacci/run:90 FirstSum/run:78 FirstSum/run:90 FizzBuzz/run:78
#: FizzBuzz/run:90 Flatten/run:78 Flatten/run:90 GCD/run:78 GCD/run:90 GD/run:78
#: GD/run:90 GUI/run:78 GUI/run:90 Hello/run:78 Hello/run:90 HighOrder/run:78
#: HighOrder/run:90 Hogwarts-I/run:78 Hogwarts-I/run:90 Hogwarts-II/run:78
#: Hogwarts-II/run:90 Hogwarts-III/run:78 Hogwarts-III/run:90 Hogwarts-IV/run:78
#: Hogwarts-IV/run:90 Hogwarts-V/run:78 Hogwarts-V/run:90 Interests/run:78
#: Interests/run:90 Interval/run:78 Interval/run:90 LinkedList/run:78
#: LinkedList/run:90 LinkedListChildren/run:78 LinkedListChildren/run:90
#: LoadSaveGame/run:78 LoadSaveGame/run:90 Max/run:78 Max/run:90 Median/run:78
#: Median/run:90 Memoization/run:78 Memoization/run:90 MergeList/run:78
#: MergeList/run:90 Min/run:78 Min/run:90 Morse/run:78 Morse/run:90
#: PatternExtraction-I/run:78 PatternExtraction-I/run:90
#: PatternExtraction-II/run:78 PatternExtraction-II/run:90
#: PatternExtraction-III/run:78 PatternExtraction-III/run:90 Polynomial/run:78
#: Polynomial/run:90 Primes/run:78 Primes/run:90 Quetelet/run:78 Quetelet/run:90
#: RecursiveFactorial/run:78 RecursiveFactorial/run:90 RecursiveFibonacci/run:78
#: RecursiveFibonacci/run:90 RecursiveSum/run:78 RecursiveSum/run:90
#: Remainder/run:78 Remainder/run:90 Sort/run:78 Sort/run:90 SpeedingFine/run:78
#: SpeedingFine/run:90 StudentConstructor/run:78 StudentConstructor/run:90
#: Sum/run:78 Sum/run:90 Translator/run:78 Translator/run:90
#: WrongIterations/run:78 WrongIterations/run:90 ZooGame/run:78 ZooGame/run:90
#: run:78 run:90
msgid ""
"The program does not compile for external reasons,please contact an "
"administrator asap: \n"
" "
msgstr ""
"Le programme ne compile pas pour des raisons externes, merci de contacter un "
"administrateur : "

#: AmazonConstructor/run:104 AmazonPay/run:104 Average/run:104 Bath/run:104
#: DebtReminder/run:104 DeepConcat/run:104 DestroyAllEnnemies/run:104
#: DestroyAnEnnemy/run:104 DiffCount/run:104 DoubleLink/run:104 Factorial/run:104
#: Fibonacci/run:104 FirstSum/run:104 FizzBuzz/run:104 Flatten/run:104 GCD/run:104
#: GD/run:104 GUI/run:104 Hello/run:104 HighOrder/run:104 Hogwarts-I/run:104
#: Hogwarts-II/run:104 Hogwarts-III/run:104 Hogwarts-IV/run:104 Hogwarts-V/run:104
#: Interests/run:104 Interval/run:104 LinkedList/run:104
#: LinkedListChildren/run:104 LoadSaveGame/run:104 Max/run:104 Median/run:104
#: Memoization/run:104 MergeList/run:104 Min/run:104 Morse/run:104
#: PatternExtraction-I/run:104 PatternExtraction-II/run:104
#: PatternExtraction-III/run:104 Polynomial/run:104 Primes/run:104
#: Quetelet/run:104 RecursiveFactorial/run:104 RecursiveFibonacci/run:104
#: RecursiveSum/run:104 Remainder/run:104 Sort/run:104 SpeedingFine/run:104
#: StudentConstructor/run:104 Sum/run:104 Translator/run:104
#: WrongIterations/run:104 ZooGame/run:104 run:104
msgid "Failed test:\n"
msgstr "Test échoué : \n"

#: AmazonConstructor/run:143 AmazonPay/run:143 Average/run:143 Bath/run:143
#: DebtReminder/run:143 DeepConcat/run:143 DestroyAllEnnemies/run:143
#: DestroyAnEnnemy/run:143 DiffCount/run:143 DoubleLink/run:143 Factorial/run:143
#: Fibonacci/run:143 FirstSum/run:143 FizzBuzz/run:143 Flatten/run:143 GCD/run:143
#: GD/run:143 GUI/run:143 Hello/run:143 HighOrder/run:143 Hogwarts-I/run:143
#: Hogwarts-II/run:143 Hogwarts-III/run:143 Hogwarts-IV/run:143 Hogwarts-V/run:143
#: Interests/run:143 Interval/run:143 LinkedList/run:143
#: LinkedListChildren/run:143 LoadSaveGame/run:143 Max/run:143 Median/run:143
#: Memoization/run:143 MergeList/run:143 Min/run:143 Morse/run:143
#: PatternExtraction-I/run:143 PatternExtraction-II/run:143
#: PatternExtraction-III/run:143 Polynomial/run:143 Primes/run:143
#: Quetelet/run:143 RecursiveFactorial/run:143 RecursiveFibonacci/run:143
#: RecursiveSum/run:143 Remainder/run:143 Sort/run:143 SpeedingFine/run:143
#: StudentConstructor/run:143 Sum/run:143 Translator/run:143
#: WrongIterations/run:143 ZooGame/run:143 run:143
msgid ""
"It seems that you have made mistakes in your code…\n"
"\n"
msgstr ""
"Il semblerait que vous ayez fait des erreurs dans votre code...\n"
"\n"

#: AmazonConstructor/run:156 AmazonConstructor/run:160 AmazonPay/run:156
#: AmazonPay/run:160 Average/run:156 Average/run:160 Bath/run:156 Bath/run:160
#: DebtReminder/run:156 DebtReminder/run:160 DeepConcat/run:156 DeepConcat/run:160
#: DestroyAllEnnemies/run:156 DestroyAllEnnemies/run:160 DestroyAnEnnemy/run:156
#: DestroyAnEnnemy/run:160 DiffCount/run:156 DiffCount/run:160 DoubleLink/run:156
#: DoubleLink/run:160 Factorial/run:156 Factorial/run:160 Fibonacci/run:156
#: Fibonacci/run:160 FirstSum/run:156 FirstSum/run:160 FizzBuzz/run:156
#: FizzBuzz/run:160 Flatten/run:156 Flatten/run:160 GCD/run:156 GCD/run:160
#: GD/run:156 GD/run:160 GUI/run:156 GUI/run:160 Hello/run:156 Hello/run:160
#: HighOrder/run:156 HighOrder/run:160 Hogwarts-I/run:156 Hogwarts-I/run:160
#: Hogwarts-II/run:156 Hogwarts-II/run:160 Hogwarts-III/run:156
#: Hogwarts-III/run:160 Hogwarts-IV/run:156 Hogwarts-IV/run:160 Hogwarts-V/run:156
#: Hogwarts-V/run:160 Interests/run:156 Interests/run:160 Interval/run:156
#: Interval/run:160 LinkedList/run:156 LinkedList/run:160
#: LinkedListChildren/run:156 LinkedListChildren/run:160 LoadSaveGame/run:156
#: LoadSaveGame/run:160 Max/run:156 Max/run:160 Median/run:156 Median/run:160
#: Memoization/run:156 Memoization/run:160 MergeList/run:156 MergeList/run:160
#: Min/run:156 Min/run:160 Morse/run:156 Morse/run:160 PatternExtraction-I/run:156
#: PatternExtraction-I/run:160 PatternExtraction-II/run:156
#: PatternExtraction-II/run:160 PatternExtraction-III/run:156
#: PatternExtraction-III/run:160 Polynomial/run:156 Polynomial/run:160
#: Primes/run:156 Primes/run:160 Quetelet/run:156 Quetelet/run:160
#: RecursiveFactorial/run:156 RecursiveFactorial/run:160
#: RecursiveFibonacci/run:156 RecursiveFibonacci/run:160 RecursiveSum/run:156
#: RecursiveSum/run:160 Remainder/run:156 Remainder/run:160 Sort/run:156
#: Sort/run:160 SpeedingFine/run:156 SpeedingFine/run:160
#: StudentConstructor/run:156 StudentConstructor/run:160 Sum/run:156 Sum/run:160
#: Translator/run:156 Translator/run:160 WrongIterations/run:156
#: WrongIterations/run:160 ZooGame/run:156 ZooGame/run:160 run:156 run:160
msgid ""
"You have made mistakes: \n"
"\n"
msgstr ""
"Vous avez fait des erreurs : \n"
"\n"

#: AmazonConstructor/run:163 AmazonPay/run:163 Average/run:163 Bath/run:163
#: DebtReminder/run:163 DeepConcat/run:163 DestroyAllEnnemies/run:163
#: DestroyAnEnnemy/run:163 DiffCount/run:163 DoubleLink/run:163 Factorial/run:163
#: Fibonacci/run:163 FirstSum/run:163 FizzBuzz/run:163 Flatten/run:163 GCD/run:163
#: GD/run:163 GUI/run:163 Hello/run:163 HighOrder/run:163 Hogwarts-I/run:163
#: Hogwarts-II/run:163 Hogwarts-III/run:163 Hogwarts-IV/run:163 Hogwarts-V/run:163
#: Interests/run:163 Interval/run:163 LinkedList/run:163
#: LinkedListChildren/run:163 LoadSaveGame/run:163 Max/run:163 Median/run:163
#: Memoization/run:163 MergeList/run:163 Min/run:163 Morse/run:163
#: PatternExtraction-I/run:163 PatternExtraction-II/run:163
#: PatternExtraction-III/run:163 Polynomial/run:163 Primes/run:163
#: Quetelet/run:163 RecursiveFactorial/run:163 RecursiveFibonacci/run:163
#: RecursiveSum/run:163 Remainder/run:163 Sort/run:163 SpeedingFine/run:163
#: StudentConstructor/run:163 Sum/run:163 Translator/run:163
#: WrongIterations/run:163 ZooGame/run:163 run:163
msgid "You answered well this question"
msgstr "Vous avez répondu correctement à cette question"

#. author
#: AmazonConstructor/task.yaml AmazonPay/task.yaml DestroyAllEnnemies/task.yaml
#: DestroyAnEnnemy/task.yaml LinkedListChildren/task.yaml LoadSaveGame/task.yaml
msgid "Damien Gonze"
msgstr "Damien Gonze"

#. context
#: AmazonConstructor/task.yaml
msgid ""
"As the new manager of an Amazon dispatch center, you have to create a class to "
"represent the commands.\n"
"\n"
"A command have the following attributes :\n"
"\n"
"* the id of the buyer\n"
"\n"
"* the id of the item\n"
"\n"
"* the quantity of the item\n"
"\n"
"* the price of the item\n"
"\n"
"And must have the following methods :\n"
"\n"
"* ``get_price()`` : return the total price of the command\n"
"\n"
"* ``__str__()`` : return the command on the format : id_buyer, id_item : price "
"* quantity = (price*quantity)\n"
"\n"
"*Example* : \"12, 32 : 5 * 20 = 100\"\n"
"\n"
"There must also be class methods :\n"
"\n"
"* ``get_number_total_commad()`` : return the total number of commands made\n"
"\n"
"* ``get_total_price()`` : return the total price of all the commands\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"En tant que nouveau manager d'un centre d'expédition d'Amazon, vous devez créer "
"une classe pour représenter les commandes.\n"
"\n"
"Une commande a les attributs suivants : \n"
"\n"
"* l'id de l'acheteur (``id_buyer``)\n"
"\n"
"* l'id de l'objet (``id_item``)\n"
" \n"
"* la quantité (``quantity``)\n"
"\n"
"* le prix de l'objet (``price``)\n"
"\n"
"Et doit avoir les méthodes suivantes : \n"
"\n"
"* ``get_price()`` : retourne le prix total de la commande\n"
"\n"
"* ``__str__()`` : retourne la commande sous le format : id_buyer, id_item : "
"price * quantity = (price*quantity)\n"
"\n"
"*Exemple* : \"12, 32 : 5 * 20 = 100\"\n"
"\n"
"Il doit aussi y avoir des méthodes de classe :\n"
"\n"
"* ``get_number_total_commad()`` : retourne le nombre total de commandes "
"effectuées\n"
"\n"
"* ``get_total_price()`` : retourne le prix total de toutes les commandes\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: AmazonConstructor/task.yaml
msgid "Session 9: Amazon dispatch center"
msgstr "Session 9 : centre d'expédition d'Amazon"

#. name, q1, name
#: AmazonConstructor/task.yaml AmazonPay/task.yaml Average/task.yaml
#: Bath/task.yaml DebtReminder/task.yaml DeepConcat/task.yaml
#: DestroyAllEnnemies/task.yaml DestroyAnEnnemy/task.yaml DiffCount/task.yaml
#: Factorial/task.yaml Fibonacci/task.yaml FirstSum/task.yaml FizzBuzz/task.yaml
#: Flatten/task.yaml GCD/task.yaml GD/task.yaml GUI/task.yaml Hello/task.yaml
#: HighOrder/task.yaml Hogwarts-I/task.yaml Hogwarts-II/task.yaml
#: Hogwarts-III/task.yaml Hogwarts-IV/task.yaml Hogwarts-V/task.yaml
#: Interests/task.yaml Interval/task.yaml LinkedList/task.yaml Max/task.yaml
#: Median/task.yaml MergeList/task.yaml Min/task.yaml Morse/task.yaml
#: PatternExtraction-I/task.yaml PatternExtraction-II/task.yaml
#: PatternExtraction-III/task.yaml Polynomial/task.yaml Primes/task.yaml
#: Quetelet/task.yaml RecursiveFactorial/task.yaml RecursiveFibonacci/task.yaml
#: RecursiveSum/task.yaml Remainder/task.yaml Sort/task.yaml
#: SpeedingFine/task.yaml StudentConstructor/task.yaml Sum/task.yaml
#: Translator/task.yaml WrongIterations/task.yaml ZooGame/task.yaml
msgid "Implementation"
msgstr "Implémentation"

#. name, q1, header
#: AmazonConstructor/task.yaml
msgid ""
"Implement the class ``Command`` and the two methods in Python.\n"
"\n"
"We will create the object with:\n"
"\n"
"``command = Command(id_buyer, id_item, quantity_item, price_item)``\n"
"\n"
"and call the class method with:\n"
"\n"
"``command.get_number_total_command()``"
msgstr ""
"Implémentez la classe ``Command`` et les deux méthodes en Python.\n"
"\n"
"Nous allons créer l'objet avec :\n"
"\n"
"``command = Command(id_buyer, id_item, quantity_item, price_item)``\n"
"\n"
"et appeler la méthode de classe avec :\n"
"\n"
"``command.get_number_total_command()``"

#: AmazonConstructor/src/TestAmazon.py:17 StudentConstructor/src/TestStudent.py:21
msgid "You did not provide the init or str methods."
msgstr "Vous n'avez pas fourni les méthodes init ou str."

#: AmazonConstructor/src/TestAmazon.py:24
msgid ""
"With the following data: {}, {}, {}, {} for the command created, you returned "
"{} instead of {}"
msgstr ""
"Avec les données suivantes: {}, {}, {}, {} pour la commande créée, vous avez "
"retourné {} à la place de {}"

#: AmazonConstructor/src/TestAmazon.py:40
msgid "you do not get the correct number of Command"
msgstr "Vous n'obtenez pas le bon nombre de commandes"

#: AmazonConstructor/src/TestAmazon.py:42
msgid "you do not get the correct total price of all Command"
msgstr "Vous n'obtenez pas le prix total pour l'ensemble des commandes correct"

#. context
#: AmazonPay/task.yaml
msgid ""
"\n"
"As the manager of the Amazon Dispatch center, you also have to pay your -"
"slaves- employees.\n"
"\n"
"To do so, you have to create a function ``pay_employee``, that take an "
"``employee`` in parameter and the ``number of hours`` it has worked.\n"
"\n"
"you then have to call the function ``receive_salary`` of the object "
"``employee`` with the argument ``hours_worked`` multiplied by the ``pay`` of "
"the employee (an attribute of the object)\n"
"\n"
"\n"
"\n"
"The problem is that you know the data could have some problems. So you decide "
"to create custom exception to take in account all possible problems.\n"
"\n"
"You have to create (and raise them if necessary) the following "
"**exceptions** :\n"
"\n"
"* ``EmployeeDidntWorked`` : if the employee has worked 0 hours\n"
"* ``EmployeeWorkedNegatively`` : if the employee worked less than 0 hours (Yes, "
"the data can have weird problems)\n"
"* ``EmployeeWorkedTooMuch`` : if the employee worked more than possible (24*31 "
"= 744 hours)\n"
"* ``PayIsNegative`` : if the pay of the employee is negative\n"
"* ``PayIsTooBig`` : if an employee has a pay per hour bigger than 100$\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"\n"
"En tant que manager du centre d'expédition d'Amazon, vous devez aussi payer vos "
"-esclaves- employés.\n"
"\n"
"Pour cela, vous devez créer une fonction ``pay_employee``, qui prend un  "
"``employee`` comme paramètre et le ``number of hours`` qu'il a travaillé.\n"
"\n"
"Vous devez ensuite appeler la fonction ``receive_salary`` de l'objet "
"``employee``avec l'argument ``hours_worked`` multiplié par ``pay`` de l'employé "
"(un attribut de l'objet).\n"
"\n"
"\n"
"\n"
"Certaines informations peuvent cependant être erronées, ce qui est un problème. "
"Vous décidez donc de créer des exceptions sur mesure pour prendre en compte "
"toutes les erreurs possibles.\n"
"\n"
"Vous devez créer (et lever si nécessaire) les **exceptions** suivantes : \n"
"\n"
"* ``EmployeeDidntWorked`` : si l'employé a travaillé 0 heure\n"
"* ``EmployeeWorkedNegatively`` : si l'employé a travaillé moins de 0 heure "
"(Oui, les informations peuvent avoir des problèmes bizarres)\n"
"* ``EmployeeWorkedTooMuch`` : si l'employé a travaillé plus que ce qui est "
"possible (24*31 = 744 heures)\n"
"* ``PayIsNegative`` : si le salaire de l'employé est négatif\n"
"* ``PayIsTooBig`` : si un employé a un salaire par heure plus élevé que 100$\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: AmazonPay/task.yaml
msgid "Session 9: Amazon dispatch center must pay"
msgstr "Session 9 : centre d'expédition d'Amazon à payer"

#. name, q1, header
#: AmazonPay/task.yaml
msgid ""
"Implement the 5 custom error and the function ``pay_employee(employee, "
"hours_worked)``\n"
"\n"
"The class ``employee`` is already implemented, and look like this :\n"
"\n"
".. code-block:: python\n"
"\n"
"  # attributes\n"
"  pay # the salary per hour\n"
"\n"
"  # functions\n"
"  receive_salary(much) # receive salary of the month"
msgstr ""
"Implémenter les 5 erreurs spéciales et la fonction ``pay_employee(employee, "
"hours_worked)``\n"
"\n"
"La classe``employee`` est déjà implémentée et ressemble à ceci :\n"
"\n"
".. code-block:: python\n"
"\n"
"  # attributs\n"
"  pay # le salaire par heure\n"
"\n"
"  # fonctions\n"
"  receive_salary(much) # le salaire reçu pour le mois"

#: AmazonPay/src/TestAmazonPay.py:16
msgid "The function `pay_employee` does not exist."
msgstr "la fonction `pay_employee` n'existe pas."

#: AmazonPay/src/TestAmazonPay.py:25
msgid ""
"your function pay_employees does not give the good salary to the employee, "
"should be {} and you give {}"
msgstr ""
"Votre fonction pay_employees ne donne pas le bon salaire à l'employé.  Ça "
"devrait être {} mais vous donnez {}"

#: AmazonPay/src/TestAmazonPay.py:33
msgid "the employee did not work, you should raise an exception"
msgstr "L'employé n'a pas travaillé, vous devriez lever une exception"

#: AmazonPay/src/TestAmazonPay.py:36
msgid "the employee worked negatively, you should raise an exception"
msgstr ""
"L'employé a travaillé un nombre d'heures négatif, vous devriez lever une "
"exception"

#: AmazonPay/src/TestAmazonPay.py:39
msgid "the employee worked too much, you should raise an exception"
msgstr "L'employé a trop travaillé, vous devriez lever une exception"

#: AmazonPay/src/TestAmazonPay.py:42 AmazonPay/src/TestAmazonPay.py:45
msgid "the employee is payed negatively, you should raise an exception"
msgstr "L'employé a un salaire négatif, vous devriez lever une exception"

#. author
#: Average/task.yaml DeepConcat/task.yaml DiffCount/task.yaml
#: DummyScript/task.yaml Factorial/task.yaml Fibonacci/task.yaml
#: FirstSum/task.yaml FizzBuzz/task.yaml Flatten/task.yaml GCD/task.yaml
#: GD/task.yaml Hogwarts-I/task.yaml Hogwarts-II/task.yaml Hogwarts-III/task.yaml
#: Hogwarts-IV/task.yaml Hogwarts-V/task.yaml Interests/task.yaml
#: Interval/task.yaml Max/task.yaml Median/task.yaml Memoization/task.yaml
#: Min/task.yaml Morse/task.yaml PatternExtraction-I/task.yaml
#: PatternExtraction-II/task.yaml PatternExtraction-III/task.yaml Primes/task.yaml
#: Quetelet/task.yaml RecursiveFactorial/task.yaml RecursiveFibonacci/task.yaml
#: RecursiveSum/task.yaml Remainder/task.yaml SessTest_QCM/task.yaml
#: Sort/task.yaml SpeedingFine/task.yaml StudentConstructor/task.yaml
#: Sum/task.yaml Translator/task.yaml
msgid "Tanguy De Bels"
msgstr "Tanguy De Bels"

#. context
#: Average/task.yaml
msgid ""
"The method ``average(list)`` returns the arithmetic mean of the elements "
"contained in list, except if ``list`` is empty in which case it should return "
"``None``.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"La méthode ``average(list)`` retourne la moyenne arithmétique des éléments "
"contenu dans list, sauf si ``list`` est vide auquel cas, elle devrait retourner "
"``None``.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Average/task.yaml
msgid "Session 4: Average"
msgstr "Session 4 : Moyenne"

#. name, q1, header
#: Average/task.yaml
msgid ""
"Provide the body of the following method:\n"
"\n"
".. code-block:: python\n"
"\n"
"    def average(list):"
msgstr ""
"Donnez le corps de la méthode suivante : \n"
"\n"
".. code-block:: python\n"
"\n"
"    def average(list):"

#: Average/src/TestAverage.py:14
msgid "The average of {} is {} and you returned {}."
msgstr "La moyenne de {} est {} et vous avez retourné {}."

#: Average/src/TestAverage.py:22 Max/src/TestMax.py:25
msgid "When the list is empty you should return None."
msgstr "Quand la liste est vide vous devriez retourner None."

#. author
#: Bath/task.yaml DebtReminder/task.yaml GUI/task.yaml Hello/task.yaml
#: Polynomial/task.yaml WrongIterations/task.yaml ZooGame/task.yaml
msgid "Simon Gustin"
msgstr "Simon Gustin"

#. context
#: Bath/task.yaml
msgid ""
"Lucie wants to take a bath, but her bathtub has a hole in it.\n"
"When she opens the tap, **12L** water flows in the bathtub **every minute**, and "
"**1L** flows out of the hole **every minute**.\n"
"\n"
"You would like to know **how many minutes** she would have to wait until the bathtub is "
"filled with at least **80L** of water,\n"
"and would also like to **simulate the growth of volume of water** in Python.\n"
"\n"
"First, compute the number of minutes needed to have **exactly 80L** in the "
"bathtub (as a floating point number)\n"
"and store it in a variable called ``filled_time``.\n"
"Then, store the current volume of water in a variable called ``water_vol`` "
"(starting at 0) and use a ``for`` loop\n"
"in which, at each iteration (representing each minute), the volume of water "
"would be added/removed the volume of water flowing out the tap/hole.\n"
"In other word, on each iteration, ``water_vol`` should **increase by 12L and "
"decrease by 1L**.\n"
"\n"
"The ``for`` loop should stop on the first iteration where the volume of water "
"is larger than 80L.\n"
"This can be computed from ``filled_time``.\n"
"\n"
"*Note: you can round a floating point number to the first larger integer using "
"the following code:*\n"
"\n"
".. code-block:: python\n"
"\n"
"    import math\n"
"    float_nb = 3.14\n"
"    int_nb = math.ceil(float_nb)  # `int_nb` is equal to 4\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Lucie veut prendre un bain, mais sa baignoire est trouée.\n"
"Si elle ouvre le robinet, **12L** coulent dans la baignoire  **chaque minute**, "
"et **1L** s'écoule par le trou **chaque minute**.\n"
"\n"
"Vous aimeriez savoir **combien de minutes** elle devra attendre pour que la "
"baignoire contienne au moins **80L** d'eau,\n"
"et aussi **simuler la croissance du volume de l'eau** en Python.\n"
"\n"
"D'abord, calculez le nombre de minutes nécessaires pour avoir **exactement "
"80L** dans la baignoire (exprimé en nombre à virgule flottante)\n"
"et enregistrez-le dans une variable nommée ``filled_time``.\n"
"Ensuite, enregistrez le volume d'eau actuel dans une variable nommée "
"``water_vol`` (qui commence à 0) et utilisez une boucle ``for``\n"
"dans laquelle, à chaque itération (représentant chaque minute), les volumes "
"d'eau s'écoulant du robinet ou par le trou sont ajoutés/retirés du volume d'eau "
"total.\n"
"En d'autres termes, à chaque itération, ``water_vol`` devrait **augmenter de "
"12L et diminuer d'1L**.\n"
"\n"
"La boucle ``for`` devrait s'arrêter à la première itération où le volume d'eau "
"dépasse les 80L.\n"
"Ceci peut être calculé à partir de ``filled_time``.\n"
"\n"
"*Note: vous pouvez arrondir un nombre à virgule flottante au premier integer "
"plus grand en utilisant le code suivant :*\n"
"\n"
".. code-block:: python\n"
"\n"
"    import math\n"
"    float_nb = 3.14\n"
"    int_nb = math.ceil(float_nb)  # `int_nb` est égal à 4\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Bath/task.yaml
msgid "Session 1: Bathtub with a hole"
msgstr "Session 1 : Beignoire avec un trou"

#: Bath/src/TestBath.py:14
msgid ""
"You don't have the good answer when computing the time to fill the bathtub ({}"
"min)."
msgstr ""
"Vous n'avez pas la bonne réponse quand vous calculez le temps nécessaire pour "
"remplir la baignoire ({}min)."

#: Bath/src/TestBath.py:16
msgid ""
"You did not name the variable `filled_time` correctly (is it out of the `for` "
"loop?)"
msgstr ""
"Vous n'avez pas nommé la variable `filled_time` correctement. Est-elle hors de "
"la boucle `for`?"

#: Bath/src/TestBath.py:21
msgid ""
"You did not compute the right value for the volume of water ({}L). Did you do "
"the right number of iterations?"
msgstr ""
"Vous n'avez pas calculé la bonne valeur pour le volume d'eau ({}L).  Avez-vous "
"fait le bon nombre d'itérations?"

#: Bath/src/TestBath.py:23
msgid "You did not name the variable `water_vol` correctly."
msgstr "Vous n'avez pas nommé la variable `water_vol` correctement."

#. context
#: DebtReminder/task.yaml
msgid ""
"You and your friends often **lend each other money**.\n"
"Rather than using convenient applications to remember who owes how much money "
"to who,\n"
"you decide to make your own Python program for this task.\n"
"\n"
"Specifically, you would like to have a way to\n"
"\n"
"* tell **who owes money to whom**;\n"
"\n"
"* **change the money counts** when someone pays someone else back or when "
"someone lends money to someone else;\n"
"\n"
"* **add a person** that borrows and/or lends money;\n"
"\n"
"* compute the **sum of all the money currently borrowed**.\n"
"\n"
"Note that at all times, any money lent to someone should be borrowed by the "
"lender.\n"
"In other words, if *Woody* has lent *3€* to *Buzz*, your program should say "
"that *Buzz owes 3€ to Woody* and that *Woody owes -3€ to Buzz*.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Vous et vos amis **vous prêtez souvent de l'argent**.\n"
"Plutôt que d'utiliser une application spéciale pour se rappeler qui doit "
"combien d'argent et à qui,\n"
"vous décidez de faire votre propre programme python pour réaliser cette tâche.\n"
"\n"
"Spécifiquement, vous aimeriez pouvoir\n"
"\n"
"* dire **qui doit combien d'argent à qui**;\n"
"\n"
"* **changer les comptes**  quand quelqu'un rembourse ou prête de l'argent à un "
"autre;\n"
"\n"
"* **ajouter une personne** qui emprunte et/ou rembourse de l'argent;\n"
"\n"
"* calcule la **somme de tout l'argent emprunté à ce moment précis**.\n"
"\n"
"Notez que de l'argent prêté à quelqu'un doit être emprunté.\n"
"En d'autres termes, si *Woody* a prêté *3€* à *Buzz*, votre programme devrait "
"dire que *Buzz doit 3€ à Woody* et que *Woody doit -3€ à Buzz*.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: DebtReminder/task.yaml
msgid "Session 7: Debt reminder"
msgstr "Session 7 : Rappel de dette"

#. name, q1, header
#: DebtReminder/task.yaml
msgid ""
"To do this, you will use a **dictionary of dictionaries** called "
"``borrowed_money``, indexed by the **names of the people** (as strings).\n"
"The first index will be the name of the \"borrower\"; the second the name of "
"the \"lender\".\n"
"\n"
"For example, if *Woody* has lent *3€* to *Buzz*, your dictionary should be as "
"follows:\n"
"\n"
".. code-block:: python\n"
"\n"
"    borrowed_money[\"Buzz\"][\"Woody\"] == 3  # Read \"Buzz owes Woody 3€\"\n"
"    borrowed_money[\"Woody\"][\"Buzz\"] == -3\n"
"\n"
"Consequently, you can get a dictionary which contains all the money Buzz "
"borrows anyone:\n"
"\n"
".. code-block:: python\n"
"\n"
"   borrowed_money[\"Buzz\"] == {\"Woody\": 3, \"Hamm\": 60, \"Rex\": -5}\n"
"\n"
"**Make a function** ``give_money(borrowed_money, from_person, to_person, "
"amount)``\n"
"which would be called when ``from_person`` gives ``amount`` € to ``to_person``\n"
"(either because ``from_person`` lends money to ``to_person`` or because they "
"pay back the money they borrowed).\n"
"If any of the 2 people aren't already keys in the dictionary, they should be "
"added to it.\n"
"You should raise a ``ValueError`` in case someone tries to give money to "
"themself.\n"
"\n"
"**Make another function** ``total_money_borrowed(borrowed_money)``\n"
"which will return the total amount of money borrowed at that time in the group\n"
"(that is, the sum of the positive amounts of money in the dictionaries).\n"
"\n"
"*Note: you should raise a* ``ValueError`` *if any of the arguments fed to those "
"functions\n"
"are invalid (i.e. if names are not strings, if* ``borrowed_money`` *is not a "
"dictionary or if the amount of money is not an integer or a float).\n"
"You can test if a variable is of the right type in the following way:*\n"
"\n"
".. code-block:: python\n"
"\n"
"   variable = 5\n"
"   type(variable) == int  # returns True\n"
"   # OR\n"
"   isinstance(variable, int)  # returns True\n"
"\n"
"Finally, **implement the example** that Mark lends Bill and Steve 2 000 000€,\n"
"Serguei lends Bill 5 000 000€, Bill lends Larry 6 000 000€ and Larry lends "
"Linus 5.5€.\n"
"Then, Steve pays Mark back. This should be using the variable "
"``borrowed_money``."
msgstr ""
"Pour faire cela, vous allez utiliser un **dictionnaire de dictionnaires** "
"appelé ``borrowed_money``, indexé par le **nom des personnes** (comme des "
"strings).\n"
"Le premier index sera le nom de \"l'emprunteur\"; le deuxième, celui du "
"\"prêteur\".\n"
"\n"
"Par exemple, si *Woody* a prêté *3€* à *Buzz*, votre dictionnaire devrait être "
"comme suit:\n"
"\n"
".. code-block:: python\n"
"\n"
"    borrowed_money[\"Buzz\"][\"Woody\"] == 3  # Lisez \"Buzz doit 3€ à Woody\"\n"
"    borrowed_money[\"Woody\"][\"Buzz\"] == -3\n"
"\n"
"Par conséquent, vous pouvez obtenir un dictionnaire qui contient tout l'argent "
"que Buzz emprunte : \n"
"\n"
".. code-block:: python\n"
"\n"
"   borrowed_money[\"Buzz\"] == {\"Woody\": 3, \"Hamm\": 60, \"Rex\": -5}\n"
"\n"
"**Faites une fonction** ``give_money(borrowed_money, from_person, to_person, "
"amount)``\n"
"qui sera appelée quand ``from_person`` donne ``amount`` € à ``to_person``\n"
"(soit parce que ``from_person`` prête de l'argent ``to_person``, ou bien parce "
"qu'il rembourse de l'argent qu'il a emprunter).\n"
"Si une des deux personnes n'est pas déjà une clé dans le dictionnaire, elle "
"doit y être ajoutée.\n"
"Vous devez lever une ``ValueError`` dans le cas où quelqu'un essaye de se "
"donner de l'argent à lui-même.\n"
"\n"
"**Faites une autre fonction** ``total_money_borrowed(borrowed_money)``\n"
"qui retourne le montant total d'argent emprunté en ce moment\n"
"(c'est-à-dire, la somme des montants positifs se trouvant dans le "
"dictionnaire).\n"
"\n"
"*Note: vous devez lever une* ``ValueError`` *si l'un des arguments passé à ces "
"fonctions est invalide (c'est-à-dire si les noms ne sont pas de strings, si* "
"``borrowed_money`` *n'est pas un dictionnaire ou si le montant d'argent n'est "
"pas un integer ou un float)."
"Vous pouvez tester si une variable est du bon type des manières suivantes :* \n"
"\n"
".. code-block:: python\n"
"\n"
"   variable = 5\n"
"   type(variable) == int  # retourne True\n"
"   # OR\n"
"   isinstance(variable, int)  # retourne True\n"
"\n"
"Enfin, **implémentez l'exemple** où Mark prête 2 000 000 € à Bill et Steve,\n"
"Serguei prête 5 000 000 € à Bill, Bill prête 6 000 000 € à Larry et enfin, "
"Larry prête 5,5 € à Linus.\n"
"Ensuite, Steve rembourse Mark. Utilisez la variable ``borrowed_money``."

#: DebtReminder/src/TestDebtReminder.py:14
msgid "`borrowed_money` must be of type `dict`."
msgstr "`borrowed_money` doit être de type `dict`."

#: DebtReminder/src/TestDebtReminder.py:16
msgid "The variable `borrowed_money` doesn't exist."
msgstr "La variable `borrowed_money` n'existe pas."

#: DebtReminder/src/TestDebtReminder.py:17
msgid "The function `give_money` does not exist."
msgstr "La fonction `give_money` n'existe pas."

#: DebtReminder/src/TestDebtReminder.py:18
msgid "The function `total_money_borrowed` does not exist."
msgstr "La fonction `total_money_borrowed` n'existe pas. "

#: DebtReminder/src/TestDebtReminder.py:37
msgid "After 5 transactions between 4 people, you got {} instead of {}."
msgstr "Après 5 transactions entre 4 personnes , vous avez {} àà la place de {}."

#: DebtReminder/src/TestDebtReminder.py:40
msgid ""
"With {}, you computed a total amount of money borrowed of {} instead of {}."
msgstr ""
"Avec {}, vous avez calculé un montant total emprunté de {} à la place de {}."

#: DebtReminder/src/TestDebtReminder.py:42
msgid ""
"You wrongly raised an exception while using `give_money()` or "
"`total_money_borrowed()` with valid arguments: {}('{}')"
msgstr ""
"Vous avez levé une exception lorsqu'elle n'était pas nécessaire en utilisant  "
"`give_money()` ou `total_money_borrowed()` avec les arguments valides : {}('{}')"

#: DebtReminder/src/TestDebtReminder.py:62
msgid ""
"You wrongly raised an exception while using `give_money()` with invalid "
"arguments: {}('{}')"
msgstr ""
"Vous avez levé une exception lorsqu'elle n'était pas nécessaire en utilisant  "
"`give_money()` avec les arguments invalides : {}('{}')"

#: DebtReminder/src/TestDebtReminder.py:72
msgid ""
"You wrongly raised an exception while using `total_money_borrowed()` with "
"invalid arguments: {}('{}')"
msgstr ""
"Vous avez levé une exception lorsqu'elle n'était pas nécessaire en utilisant "
"`total_money_borrowed()` avec les arguments invalides : {}('{}')"

#: DebtReminder/src/TestDebtReminder.py:77
msgid "For the example asked, you got an incorrect answer: {}"
msgstr "Pour l'exemple demandé, vous avez eu un réponse incorrecte : {}"

#. context
#: DeepConcat/task.yaml
msgid ""
"Suppose we have a multi-level depth list of which the elements are all "
"strings.\n"
"\n"
"*Example*: [\"a\",[\"b\",\"6\"],\"e\",[\"5\",[\"g\",\"h\"]],\"i\"]\n"
"\n"
"Create a function deepconcat(l) that traverses this structure and creates a new "
"string which is the concatenation of all the strings appearing in that "
"structure.\n"
"\n"
"*Example*:\n"
"deepconcat([\"a\",[\"b\",\"6\"],\"e\",[\"5\",[\"g\",\"h\"]],\"i\"])\n"
"=> returns \"ab6de5ghi\"\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Supposons que nous ayons une liste avec plusieurs niveaux dans laquelle tous "
"les éléments sont des strings.\n"
"\n"
"*Example*: [\"a\",[\"b\",\"6\"],\"e\",[\"5\",[\"g\",\"h\"]],\"i\"]\n"
"\n"
"Create a function deepconcat(l) that traverses this structure and creates a new "
"string which is the concatenation of all the strings appearing in that "
"structure.\n"
"\n"
"*Example*:\n"
"deepconcat([\"a\",[\"b\",\"6\"],\"e\",[\"5\",[\"g\",\"h\"]],\"i\"])\n"
"=> returns \"ab6de5ghi\"\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: DeepConcat/task.yaml
msgid "Session 8: Deep concatenation"
msgstr "Session 8 : Concaténation"

#. name, q1, header
#: DeepConcat/task.yaml
msgid "Implement the function ``deep_concat(l)`` in Python."
msgstr "Implémentez la fonction ``deep_concat(l)`` en Python."

#: DeepConcat/src/TestConcat.py:29 Fibonacci/src/TestFibonacci.py:14
#: Flatten/src/TestFlatten.py:28 GCD/src/TestGcd.py:13
#: Hogwarts-I/src/TestChecker.py:15 Hogwarts-II/src/TestSort.py:14
#: Hogwarts-III/src/TestAdmission.py:32 Hogwarts-IV/src/TestQuidditch.py:29
#: Hogwarts-V/src/TestHouseCup.py:32 Max/src/TestMax.py:13
#: Memoization/src/TestMemoization.py:15 Memoization/src/TestMemoization.py:18
#: Memoization/src/TestMemoization.py:21 Morse/src/TestMorse.py:20
#: PatternExtraction-I/src/TestExtractor.py:29
#: PatternExtraction-II/src/TestTreatment.py:34
#: PatternExtraction-III/src/TestCollection.py:26 Primes/src/TestPrimes.py:13
#: Quetelet/src/TestQuetelet.py:18 SpeedingFine/src/TestFine.py:14
#: Translator/src/TestTranslator.py:20
msgid "You did not name the method as expected."
msgstr "Vous n'avez pas nommé la méthode comme attendu."

#: DeepConcat/src/TestConcat.py:33
msgid ""
"The flatten version of {} is supposed to be an empty string and you returned "
"{}. \n"
" You should watch you behaviour in case of empty lists."
msgstr ""
"La version aplatie de {} doit être une string vide  et vous avez retourné {}. \n"
"Vous devriez regarder le comportement de votre programme dans le cas de listes "
"vides."

#: DeepConcat/src/TestConcat.py:41 Flatten/src/TestFlatten.py:40
msgid "The flatten version of {} is {} and you returned {}."
msgstr "La version aplatie de {} est {} et vous avez retourné {}."

#. context
#: DestroyAllEnnemies/task.yaml
msgid ""
"You are still working on your next big game, *God of massive destruction Game "
"Of The Century edition*, and now you need to implement a better combat system.\n"
"\n"
"For this exercice, you will need to implement three classes : ``Character``, "
"``Cratos`` and ``Drauf``.\n"
"\n"
"Your manager thought it was too easy with a weapon, so *Cratos* will fight with "
"is bare fists for this exercice. So no weapons.\n"
"\n"
"``Cratos`` and ``Drauf`` will inherit from ``Character``.\n"
"\n"
"* The ``Cratos`` class represent the player, and the ``Drauf`` is a basic "
"ennemy.\n"
"\n"
"* The ``Character`` class will have to have the attributes ``life`` and "
"``attack_point``, and the functions ``attack`` and ``get_hit``.\n"
"\n"
"* The ``Cratos`` class also have an attribute ``experience`` and a ``function "
"gain_XP``.\n"
"\n"
"* *Cratos* starts with 100 life, 10 damage and 0 experience. The *Drauf* will "
"have its variables set with the constructor.\n"
"\n"
"* The function ``attack`` will get a ``Character`` to attack as parameter.\n"
"\n"
"* The function ``get_hit`` will reduce the ``life`` of the object by the "
"``damage`` indicated as parameter.\n"
"\n"
"* The function ``gain_XP`` will increase the XP of the player by the ``amount`` "
"in parameters. Every 10 point of experience, the damage of *Cratos* will "
"increase by 1 (the amount of XP gain can be higher than 10; be careful to take "
"that in account)\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Vous travaillez toujours sur votre prochain gros jeu, *Dieu de la Destruction "
"Massive : Edition Jeu du Siècle*, et vous devez maintenant implémenter un "
"meilleur système de combat.\n"
"\n"
"Pour cet exercice, vous aurez besoin de  trois classes :  ``Character``, "
"``Cratos`` and ``Drauf``.\n"
"\n"
"Votre manager pensait que c'était trop facile avec une arme, donc *Cratos* va "
"se battre à mains nues pour cet exercice. Donc pas d'armes.\n"
"\n"
"``Cratos`` et  ``Drauf`` héritent de  ``Character``.\n"
"\n"
"* La classe ``Cratos`` représente le joueur, et la classe ``Drauf`` représente "
"un ennemi basique.\n"
"\n"
"* La classe ``Character``devra posséder les attributs ``life`` et "
"``attack_point``, et les fonctions ``attack`` et ``get_hit``.\n"
"\n"
"* La classe ``Cratos`` a aussi un attribut ``experience`` et une fonction "
"``gain_XP``.\n"
"\n"
"* *Cratos* commence avec 100 vies, 10 dommages et 0 experience. Les variables "
"de  *Drauf* seront définies dans le constructeur .\n"
"\n"
"* La fonction ``attack`` reçoit en paramètre un ``Character`` à attaquer.\n"
"\n"
"* La fonction ``get_hit`` réduit l'attribut ``life`` de l'objet par le nombre "
"de  ``damage``indiqué en paramètre.\n"
"\n"
"* La fonction ``gain_XP`` augmente l'expérience par la valeur de ``amount``dans "
"les paramètres. Tous les 10 points d'expérience, les dommages de *Cratos* "
"augmentent de 1 (la quantité d'expérience gagnée peut-être supérieure à 10; "
"n'oubliez pas de prendre cela en compte)\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: DestroyAllEnnemies/task.yaml
msgid "Session 10: Kill them all"
msgstr "Session 10 :  Tuez les tous"

#. name, q1, header
#: DestroyAllEnnemies/task.yaml
msgid ""
"You have to implement the following :\n"
"\n"
"The class ``Character``\n"
"\n"
".. code-block:: python\n"
"\n"
"  #attributes\n"
"  life\n"
"  attack_point\n"
"\n"
"  #functions\n"
"  attack(target)\n"
"  get_hit(damage)\n"
"\n"
"The class ``Cratos``\n"
"\n"
".. code-block:: python\n"
"\n"
"  #attributes\n"
"  experience\n"
"\n"
"  #functions\n"
"  __init__()\n"
"  gain_XP(amount)\n"
"\n"
"The class ``Drauf``\n"
"\n"
".. code-block:: python\n"
"\n"
"  #functions\n"
"  __init__(life, damage)"
msgstr ""
"Vous devez implémenter les choses suivantes :\n"
"\n"
"La classe ``Character``\n"
"\n"
".. code-block:: python\n"
"\n"
"  #attributs\n"
"  life\n"
"  attack_point\n"
"\n"
"  #fonctions\n"
"  attack(target)\n"
"  get_hit(damage)\n"
"\n"
"La classe``Cratos``\n"
"\n"
".. code-block:: python\n"
"\n"
"  #attributs\n"
"  experience\n"
"\n"
"  #fonctions\n"
"  __init__()\n"
"  gain_XP(amount)\n"
"\n"
"La classe ``Drauf``\n"
"\n"
".. code-block:: python\n"
"\n"
"  #fonction\n"
"  __init__(life, damage)"

#: DestroyAllEnnemies/src/TestDestroy.py:16
msgid "Does the class `Character` exist?"
msgstr "Est-ce que la classe `Character` existe?"

#: DestroyAllEnnemies/src/TestDestroy.py:20 DestroyAnEnnemy/src/TestDestroy.py:16
msgid "Does the class `Cratos` exist?"
msgstr "Est-ce que la classe  `Cratos` existe?"

#: DestroyAllEnnemies/src/TestDestroy.py:24 DestroyAnEnnemy/src/TestDestroy.py:20
msgid "Does the class `Drauf` exist?"
msgstr " Est-ce que la classe `Drauf`existe?"

#: DestroyAllEnnemies/src/TestDestroy.py:27
msgid "Your class `Character` does not have an attribute `life`."
msgstr "Votre classe  `Character` n'a pas d'attribut  `life`."

#: DestroyAllEnnemies/src/TestDestroy.py:28
msgid "Your class `Character` does not have a method `attack`."
msgstr "Votre classe  `Character` n'a pas de méthode  `attack`."

#: DestroyAllEnnemies/src/TestDestroy.py:29
msgid "Your class `Character` does not have a method `get_hit`."
msgstr "Votre classe  `Character` n'a pas de méthode  `get_hit`."

#: DestroyAllEnnemies/src/TestDestroy.py:30
msgid "Your class `Character` does not have an attribute `attack_point`."
msgstr "Votre classe  `Character` n'a pas d'attribut  `attack_point`."

#: DestroyAllEnnemies/src/TestDestroy.py:34
msgid "Your class `Cratos` does not have a method `gain_XP`."
msgstr "Votre classe  `Cratos` n'a pas de méthode  `gain_XP`."

#: DestroyAllEnnemies/src/TestDestroy.py:37
msgid "Your class `Drauf` have a method `gain_XP` which it shouldn't have."
msgstr ""
"Votre classe  `Drauf` a une méthode  `gain_XP` qu'elle ne devrait pas avoir."

#: DestroyAllEnnemies/src/TestDestroy.py:39
msgid "Your class `Drauf` have an attribute `experience` which it shouldn't have."
msgstr ""
"Votre classe  `Drauf`a un attribut  `experience` qu'elle ne devrait pas avoir."

#: DestroyAllEnnemies/src/TestDestroy.py:45
msgid "The Cratos constructed has not the good life, it has {} instead of {}"
msgstr ""
"Le Cratos construit n'a pas la bonne quantité de vie (life), il a {} à la place "
"de {}."

#: DestroyAllEnnemies/src/TestDestroy.py:48
msgid ""
"The Cratos constructed has not the good attack_point, it has {} instead of {}"
msgstr ""
"Le Cratos construit n'a pas la bonne quantité de points d'attaque "
"(attack_point), il a {} à la place de {}."

#: DestroyAllEnnemies/src/TestDestroy.py:51
msgid ""
"The Cratos constructed has not the good experience, it has {} instead of {}"
msgstr ""
"Le Cratos construit n'a pas la bonne quantité d'expérience, il a {} à la place "
"de {}."

#: DestroyAllEnnemies/src/TestDestroy.py:59 DestroyAnEnnemy/src/TestDestroy.py:56
msgid "The Drauf constructed has not the good life, it has {} instead of {}"
msgstr ""
"Le Drauf construit n'a pas la bonne quantité de vie (life), il a {} à la place "
"de {}."

#: DestroyAllEnnemies/src/TestDestroy.py:62
msgid ""
"The Drauf constructed has not the good attack_point, it has {} instead of {}"
msgstr ""
"Le Drauf construit n'a pas la bonne quantité de points d'attaque "
"(attack_point), il a {} à la place de {}."

#: DestroyAllEnnemies/src/TestDestroy.py:69
#: DestroyAllEnnemies/src/TestDestroy.py:90
msgid "The Cratos has not the good attack_point, it has {} instead of {}"
msgstr ""
"Le Cratos n'a pas la bonne quantité de points d'attaque (attack_point), il a {} "
"à la place de {}."

#: DestroyAllEnnemies/src/TestDestroy.py:70
#: DestroyAllEnnemies/src/TestDestroy.py:92
msgid "The Cratos has not the good experience, it has {} instead of {}"
msgstr ""
"Le Cratos n'a pas la bonne quantité d'expérience, il a {} à la place de {}."

#: DestroyAllEnnemies/src/TestDestroy.py:91
msgid "The Cratos has not the good life, it has {} instead of {}"
msgstr ""
"Le Cratos n'a pas la bonne quantité de vie (life), il a {} à la place de {}."

#: DestroyAllEnnemies/src/TestDestroy.py:93
msgid "The Drauf has not the good attack_point, it has {} instead of {}"
msgstr ""
"Le Drauf n'a pas le bon nombre de points d'attaque (attack_point), il a {} à la "
"place de {}."

#: DestroyAllEnnemies/src/TestDestroy.py:94 DestroyAnEnnemy/src/TestDestroy.py:86
msgid "The Drauf has not the good life, it has {} instead of {}"
msgstr ""
"Le Drauf n'a pas la bonne quantité de vie (life), il a {} à la place de {}."

#. context
#: DestroyAnEnnemy/task.yaml
msgid ""
"You are still working on your next big game, *God of massive destruction Game "
"Of The Century edition*, and now you need to implement a basic combat system.\n"
"\n"
"For this exercise, you will need to implement three classes : ``Cratos``, "
"``Drauf`` and ``Weapon``.\n"
"\n"
"The ``Cratos`` class represent the player, the ``Drauf`` is a basic ennemy, and "
"the ``Weapon`` is a weapon usable by *Cratos*.\n"
"\n"
"* For the moment, only *Cratos* can attack.\n"
"\n"
"* *Cratos* can equip a *Weapon*, and hit a *Drauf*.\n"
"\n"
"* The *Weapon* has a certain attack, and the *Drauf* has life.\n"
"\n"
"* The Drauf has the ``method get_hit(damage)`` and Cratos has the function "
"``hit(ennemy)``.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Vous travaillez toujours sur votre prochain gros jeu, *Dieu de la Destruction "
"Massive : Edition Jeu du Siècle*, et vous devez maintenant implémenter un "
"système de combat basique.\n"
"\n"
"Pour cet exercice vous allez devoir implémenter trois classes: ``Cratos``, "
"``Drauf`` and ``Weapon``.\n"
"\n"
"La classe ``Cratos`` représente le joueur, et la classe ``Drauf`` représente un "
"ennemi basique, et la classe ``Weapon`` est une arme qui peut-être utilisée par "
"*Cratos*.\n"
"\n"
"* Pour le moment, seul *Cratos* peut attaquer.\n"
"\n"
"* *Cratos* peut s'équiper d'une *Weapon*, et frapper *Drauf*.\n"
"\n"
"* La *Weapon* a une certaine attaque (attack), et le *Drauf* a de la vie "
"(life).\n"
"\n"
"* Le Drauf a la méthode ``get_hit(damage)`` et Cratos a la fontion "
"``hit(ennemy)``.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: DestroyAnEnnemy/task.yaml
msgid "Session 9: Kill an ennemy"
msgstr "Session 9 :  Tuez un ennemi"

#. name, q1, header
#: DestroyAnEnnemy/task.yaml
msgid ""
"You have to implement the following :\n"
"\n"
"The class ``Weapon``\n"
"\n"
".. code-block:: python\n"
"\n"
"  #attributes\n"
"  attack\n"
"\n"
"  #methods\n"
"  __init__(attack)\n"
"\n"
"The class ``Cratos``\n"
"\n"
".. code-block:: python\n"
"\n"
"  #attributes\n"
"  weapon\n"
"\n"
"  #methods\n"
"  __init__(weapon)\n"
"  set_weapon(weapon) # change the weapon\n"
"  hit(enemy) # hit the ennemy with the weapon attack and reduce its hp\n"
"\n"
"The class ``Drauf``\n"
"\n"
".. code-block:: python\n"
"\n"
"  #attributes\n"
"  life\n"
"\n"
"  #methods\n"
"  __init__(life)\n"
"  get_hit(damage) # reduce the life by the damage taken"
msgstr ""
"Vous devez implémenter les choses suivantes :\n"
"\n"
"La classe ``Weapon``\n"
"\n"
".. code-block:: python\n"
"\n"
"  #attributs\n"
"  attack\n"
"\n"
"  #méthodes\n"
"  __init__(attack)\n"
"\n"
"La classe ``Cratos``\n"
"\n"
".. code-block:: python\n"
"\n"
"  #attributs\n"
"  weapon\n"
"\n"
"  #methods\n"
"  __init__(weapon)\n"
"  set_weapon(weapon) # change l'arme (weapon)\n"
"  hit(enemy) # frappe l'ennemi avec l'attaque de l'arme (weapon) et réduit son "
"hp\n"
"\n"
"La classe ``Drauf``\n"
"\n"
".. code-block:: python\n"
"\n"
"  #attributs\n"
"  life\n"
"\n"
"  #méthodes\n"
"  __init__(life)\n"
"  get_hit(damage) # réduit la vie (life) par le nombre de dommages infligés "
"(damage)"

#: DestroyAnEnnemy/src/TestDestroy.py:24
msgid "Does the class `Weapon` exist?"
msgstr "Est-ce que la classe `Weapon` existe?"

#: DestroyAnEnnemy/src/TestDestroy.py:27
msgid "Your class `Cratos` does not have a method `__init__`."
msgstr "Votre classe `Cratos` n'a pas de méthode `__init__`."

#: DestroyAnEnnemy/src/TestDestroy.py:28
msgid "Your class `Cratos` does not have an attribute `weapon`."
msgstr "Votre classe  `Cratos` n'a pas d'attribut `weapon`."

#: DestroyAnEnnemy/src/TestDestroy.py:29
msgid "Your class `Cratos` does not have a method `set_weapon`."
msgstr "Votre classe `Cratos` n'a pas de méthode `set_weapon`"

#: DestroyAnEnnemy/src/TestDestroy.py:30
msgid "Your class `Cratos` does not have a method `hit`."
msgstr "Votre classe `Cratos`n'a pas de méthode `hit`."

#: DestroyAnEnnemy/src/TestDestroy.py:33
msgid "Your class `Weapon` does not have a method `__init__`."
msgstr "Votre classe `Weapon` n'a pas de méthode `__init__`."

#: DestroyAnEnnemy/src/TestDestroy.py:34
msgid "Your class `Weapon` does not have an attribute `attack`."
msgstr "Votre classe `Weapon` n'a pas d'attribut `attack`."

#: DestroyAnEnnemy/src/TestDestroy.py:37
msgid "Your class `Drauf` does not have a method `__init__`."
msgstr "Votre classe `Drauf` n'a pas de méthode `__init__`."

#: DestroyAnEnnemy/src/TestDestroy.py:38
msgid "Your class `Drauf` does not have an attribute `life`."
msgstr "Votre classe `Drauf` n'a pas d'attribut `life`."

#: DestroyAnEnnemy/src/TestDestroy.py:39
msgid "Your class `Drauf` does not have a method `get_hit`."
msgstr "Votre classe `Drauf`n'a pas de méthode `get_hit`."

#: DestroyAnEnnemy/src/TestDestroy.py:45
msgid "The Weapon constructed has not the good attack, it has {} instead of {}"
msgstr ""
"La Weapon construite n'a pas la bonne quantité d'attaque (attack), elle a {} à "
"la place de {}."

#: DestroyAnEnnemy/src/TestDestroy.py:50
msgid ""
"The Cratos constructed has not the good weapon, make sure you set it in the "
"constructor"
msgstr ""
"Le Cratos construit n'a pas la bonne arme (weapon), assurez-vous de l'avoir "
"bien définie dans le constructeur."

#: DestroyAnEnnemy/src/TestDestroy.py:82
msgid "The Weapon has not the good attack, it has {} instead of {}"
msgstr "La Weapon n'a pas la bonne quantité d'attaque, il a {} à la place de {}."

#: DestroyAnEnnemy/src/TestDestroy.py:84
msgid "The Cratos has not the good weapon, make sure set_weapon is correct"
msgstr ""
"Le Cratos n'a pas la bonne arme (weapon), assurez-vous que set_weapon est "
"correct."

#. context
#: DiffCount/task.yaml
msgid ""
"The method ``diff_count(lst)`` returns the number of different elements "
"contained in the list ``lst``.\n"
"\n"
"\n"
"*For example:*\n"
"\n"
"- If ``lst`` equals ``[3, 5, 3]`` then the method should return 2.\n"
"\n"
"- If all the elements are the same, it should return 1.\n"
"\n"
"- If the list ``lst`` is empty, it should return 0.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"La méthode ``diff_count(lst)`` retourne le nombre d'éléments différents "
"contenus dans la liste ``lst``.\n"
"\n"
"\n"
"*Par exemple:*\n"
"\n"
"- Si ``lst`` est égal à  ``[3, 5, 3]`` alors la méthode devrait retourner 2.\n"
"\n"
"- Si tous les éléments sont les mêmes, la méthode devrait retourner 1.\n"
"\n"
"- Si la liste ``lst`` est vide, elle devrait retourner 0.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: DiffCount/task.yaml
msgid "Session 4: Difference counter"
msgstr "Session 4 : Compteur de différence"

#. name, q1, header
#: DiffCount/task.yaml
msgid ""
"Provide the body of the following method:\n"
"\n"
".. code-block:: python\n"
"\n"
"    def diff_count(lst):"
msgstr ""
"Fournissez le corps de la méthode :\n"
"\n"
".. code-block:: python\n"
"\n"
"    def diff_count(lst):"

#: DiffCount/src/TestCount.py:15
msgid "The number of different elements of {} is {} and you returned {}."
msgstr "Le nombre d'éléments différents de {} est {} et vous avez retourné {}."

#. author
#: DoubleLink/task.yaml HighOrder/task.yaml MergeList/task.yaml
msgid "Luis Tascon Gutierrez"
msgstr "Luis Tascon Gutierrez"

#. context
#: DoubleLink/task.yaml
msgid ""
"A student in the 3rd year Bachelor told you, he learned about the *Turing "
"Machine* in his course of *Calculability*.\n"
"\n"
"The *Turing Machine* works with a memory tape. It's an infinitly long tape with "
"character in it. He told you, that it's really complicated but he tends to "
"exaggerate all the time.\n"
"\n"
"You want to prove him that it's not so complicated and you'll implement a tape "
"like the *Turing Machine*.\n"
"\n"
"You have to create a LinkedList where each ``Node`` has a link with the "
"previous and the next ``Node``.\n"
"\n"
"You have in all time a pointer to a ``Node`` and you can move the pointer to "
"the left and to the right. This pointer allow you to read the string in the "
"node you're looking at.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Un étudiant de 3ème BAC vous a dit qu'il avait entendu parlé des *machines de "
"Turing* dans son cours de *Calculabilité*.\n"
"\n"
"La *Machine de Turing* fonctionne avec une bande de mémoire. C'est un ruban "
"infini avec des caractères dedans. Il vous a dit que c'était vraiment compliqué "
"mais il a une forte tendance à l'exagération.\n"
"\n"
"Vous voulez lui prouver que ce n'est pas si difficile et que vous allez "
"implémenter un ruban comme une *Machine de Turing*.\n"
"\n"
"Vous devez créer une liste chainée (LinkedList) où chaque noeud (``Node``) a un "
"lien avec le noeud qui le précède et celui qui lui succède.\n"
"\n"
"A tout moment, vous avez un pointeur vers un ``Node`` et vous pouvez déplacer "
"le pointeur vers la gauche ou la droite. Ce pointeur vous permet de lire la "
"chaine de caractère dans le noeud qu'on est en train de regarder.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: DoubleLink/task.yaml
msgid "Session 11 : Double Link"
msgstr "Session 11 : Double liens"

#. name, q1, name
#: DoubleLink/task.yaml
msgid "Node"
msgstr "Noeud"

#. name, q1, header
#: DoubleLink/task.yaml
msgid ""
"Create the class ``Node`` with at least the following methods:\n"
"\n"
".. code-block:: python\n"
"\n"
"    def __init__(s)\n"
"    def get_text()\n"
"    def set_text(s)\n"
"\n"
"The ``Node`` has a link with the previous and the next ``Node``.\n"
"Each ``Node`` contains its own ``value``, a string.\n"
"\n"
"The methods ``get_text`` return the string in the ``Node``.\n"
"And ``set_text`` change the string by ``s``."
msgstr ""
"Créez une classe ``Node`` avec au moins les méthodes suivantes : \n"
"\n"
".. code-block:: python\n"
"\n"
"    def __init__(s)\n"
"    def get_text()\n"
"    def set_text(s)\n"
"\n"
"Le ``Node`` a un lien avec le précédent et avec le suivant.\n"
"Chaque ``Node`` contient sa propre valeur (``value``), une chaine de "
"caractère.\n"
"\n"
"La méthode ``get_text`` retourne la chaine de caratère présente dans le "
"``Node``.\n"
"Et  ``set_text`` change la chaine de caractère par ``s``."

#. name, q2, name
#: DoubleLink/task.yaml
msgid "Double LinkedList"
msgstr "Liste doublement chainée"

#. name, q2, header
#: DoubleLink/task.yaml
msgid ""
"Create the class ``Tape`` with at least the following methods:\n"
"\n"
".. code-block:: python\n"
"\n"
"    def __init__()\n"
"    def next()\n"
"    def previous()\n"
"    def get_length()\n"
"    def add(s)\n"
"    def write(s)\n"
"    def read()\n"
"\n"
"* The ``next()`` method advance of one node and after give the value of the "
"``Node`` reached.\n"
"\n"
"* The ``previous()`` method step back of one node and give the value of the "
"``Node`` reached.\n"
"\n"
"* The ``next()`` and ``previous()`` methods return ``None`` and doesn't move if "
"there is no ``Node`` to reach.\n"
"\n"
"* The ``get_length()`` method return the *number of Nodes* in the ``Tape``.\n"
"\n"
"* The ``add(s)`` method add a new ``Node`` with the string ``s`` in last place. "
"To call this method with no *Node* put the pointer on the *first Node*. To call "
"this method when there is already a *Node* doesn't change the position of the "
"pointer.\n"
"\n"
"* The ``write(s)`` method change the string of the actual node with ``s``. If "
"There is no node, it does nothing.\n"
"\n"
"* The ``read()`` method return the string of the actual node. If There is no "
"node, it return ``None``."
msgstr ""
"Créez la classe ``Tape`` avec au moins les méthodes suivantes:\n"
"\n"
".. code-block:: python\n"
"\n"
"    def __init__()\n"
"    def next()\n"
"    def previous()\n"
"    def get_length()\n"
"    def add(s)\n"
"    def write(s)\n"
"    def read()\n"
"\n"
"* ``next()`` avance d'un noeud et ensuite donne la valeur du "
"``Node`` atteint.\n"
"\n"
"* ``previous()`` recule d'un noeud et renvoit la valeur du "
"``Node`` atteint.\n"
"\n"
"* les méthodes ``next()`` et ``previous()`` renvoient ``None`` et ne déplacenet pas le pointeur "
"s'il n'y a pas de ``Node`` à atteindre.\n"
"\n"
"* La méthode ``get_length()`` renvoit le *nombre de Nodes* dans ``Tape``.\n"
"\n"
"* ``add(s)`` ajoute un nouveau ``Node`` avec le string ``s`` en dernière position. "
"Appeler cette méthode dans un ``Tape`` sans *Node* met le pointeur sur le  *premier Node*. Appeler "
"cette méthode sur un ``Tape`` ayant déjà un *Node* ne change pas la position du "
"pointeur.\n"
"\n"
"* ``write(s)`` change le string actuel du ``Node`` pointé par ``s``. S'il "
"n'y a pas de node, il ne se passe rien.\n"
"\n"
"* ``read()`` renvoit le string du node actuel. S'il n'y a pas de "
"node, cela renvoit ``None``."

#: DoubleLink/src/TestDoubleLink.py:17
msgid "@1@: The Node class does not have the method {}"
msgstr "@1@: La classe Node n'a pas la méthode {}"

#: DoubleLink/src/TestDoubleLink.py:24
msgid "@2@: The Tape class does not have the method {}"
msgstr "@2@: La classe Tape n'a pas la méthode {}"

#: DoubleLink/src/TestDoubleLink.py:35
msgid "@1@: node.get_text() give {} and it should give {}"
msgstr "@1@: node.get_text() donne {} et ça devrait donner {}"

#: DoubleLink/src/TestDoubleLink.py:44
msgid "Be sure you don't have any infinite loop."
msgstr "Assurez-vous de ne pas avoir de boucle infinie."

#: DoubleLink/src/TestDoubleLink.py:46
msgid ""
"@2@: Method init or read doesn't work. read() has given {} and it should have "
"returned {}"
msgstr ""
"@2@: La méthode init ou read ne fonctionne pas. read() a donné {} et aurait du "
"retourner {}"

#: DoubleLink/src/TestDoubleLink.py:53
msgid "@2@: Method next doesn't work."
msgstr "@2@: La méthode next ne fonctionne pas."

#: DoubleLink/src/TestDoubleLink.py:66
msgid "@2@: Method previous doesn't work."
msgstr "@2@: La méthode previous ne fonctionne pas."

#: DoubleLink/src/TestDoubleLink.py:80
msgid ""
"@2@: Method length doesn't give the good answer. It gives {} and it should give "
"{}"
msgstr ""
"@2@: La méthode length ne donne pas la bonne réponse. Elle donne {} et devrait "
"donner {}"

#: DoubleLink/src/TestDoubleLink.py:89
msgid "@2@: Method write/read doesn't work. read() gives {} and it should give {}"
msgstr ""
"@2@: La méthode write/read ne fonctionne pas. read() donne {} et devrait donner "
"{}"

#. context
#: DummyScript/task.yaml SessTest_QCM/task.yaml
msgid ""
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: DummyScript/task.yaml
msgid "Dummy Script"
msgstr "Dummy Script"

#. name, q1, name
#: DummyScript/task.yaml
msgid "Sandbox"
msgstr "Sandbox"

#. context
#: Factorial/task.yaml
msgid ""
"In mathematics, the factorial of a strictly positive integer ``x``, denoted as :"
"math:`x!` is the product of all strictly positive integers less than or equal "
"to ``x``. The factorial of 0 is defined as 1. Calculate the factorial of an "
"integer ``x`` and store the computed value in the variable ``result``.\n"
"\n"
"*Examples*:\n"
"\n"
"* :math:`5! = 5 × 4 × 3 × 2 × 1 = 120`\n"
"\n"
"* :math:`0! = 1`\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"En mathématiques,  la factorielle d'un entier strictement positif ``x``,  noté :"
"math:`x!`est le produit de tous les entiers strictement positifs plus petits ou "
"égaux à ``x``. La factorielle de 0 est 1. Calculez la factorielle d'un entier "
"``x`` et enregistrez la valeur calculée dans la variable ``result``.\n"
"\n"
"*Exemples*:\n"
"\n"
"* :math:`5! = 5 × 4 × 3 × 2 × 1 = 120`\n"
"\n"
"* :math:`0! = 1`\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Factorial/task.yaml
msgid "Session 1: Factorial"
msgstr "Session 1 : Factorielle"

#. name, q1, header
#: Factorial/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    x = ... #the number\n"
"    result = ... #store in this variable the factorial of x"
msgstr ""
".. code-block:: python\n"
"\n"
"    x = ... #le nombre\n"
"    result = ... #enregistre dans cette variable la factorielle de x"

#: Factorial/src/TestFactorial.py:15 RecursiveFactorial/src/TestFactorial.py:32
msgid "The factorial of the integer {} is {} and you returned {}."
msgstr "La factorielle de l'entier {} est {} et vous avez retourné {}."

#: Factorial/src/TestFactorial.py:22 RecursiveFactorial/src/TestFactorial.py:39
msgid "The factorial of 0 is 1 and you returned {}."
msgstr "La factorielle de 0 est 1 est vous avez retourné."

#. context
#: Fibonacci/task.yaml
msgid ""
"In mathematics, the `Fibonacci series <https://en.wikipedia.org/wiki/"
"Fibonacci_number>`_ are the numbers in the following sequence of integers, "
"which is characterized by the fact that every number after the first two is the "
"sum of the two preceding ones:\n"
"\n"
"/*Example*: :math:`0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...`\n"
"\n"
"A very simple algorithm would be:\n"
"$$\\\\text{F}_0 = 0$$\n"
"$$\\\\text{F}_1 = 1$$\n"
"$$\\\\text{F}_n = \\\\text{F}_{n-1} + \\\\text{F}_{n-2}$$\n"
"\n"
"Create a function ``fibonacci(n)`` that returns the nth element of the Fibonacci "
"sequence.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"En mathématiques, la `suite de Fibonacci  <https://fr.wikipedia.org/wiki/"
"Suite_de_Fibonacci>`_ sont les nombres dans la séquence suivante d'entiers, qui "
"est caractérisée par le fait que chaque nombre après les deux premiers est égal "
"à la somme des deux précédents :\n"
"\n"
"/*Exemple*: :math:`0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...`\n"
"\n"
"Un algorithme très simple serait :\n"
"$$\\\\text{F}_0 = 0$$\n"
"$$\\\\text{F}_1 = 1$$\n"
"$$\\\\text{F}_n = \\\\text{F}_{n-1} + \\\\text{F}_{n-2}$$\n"
"\n"
"Créez une fonction ``fibonacci(n)`` qui retourne le Nième élément de la suite de "
"Fibonacci.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Fibonacci/task.yaml
msgid "Session 3: Fibonacci"
msgstr "Session 3 : Fibonacci"

#. name, q1, header
#: Fibonacci/task.yaml
msgid "Implement the function ``fibonacci(n)`` in Python."
msgstr "Implémentez la fonction ``fibonacci(n)`` en Python."

#: Fibonacci/src/TestFibonacci.py:18 Memoization/src/TestMemoization.py:34
#: Memoization/src/TestMemoization.py:52
#: RecursiveFibonacci/src/TestFibonacci.py:33
msgid "The {}th fibonacci number is {} and you returned {}."
msgstr "Le {}ème nombre de Fibonacci est {} et vous avez retourné {}."

#: Fibonacci/src/TestFibonacci.py:25 RecursiveFibonacci/src/TestFibonacci.py:40
msgid "For 0 the fibonacci number is 0 and you returned {}."
msgstr "Pour 0 le nombre de Fibonacci est 0 et vous avez retourné {}."

#: Fibonacci/src/TestFibonacci.py:30 RecursiveFibonacci/src/TestFibonacci.py:45
msgid "For 1 the fibonacci number is 1 and you returned {}."
msgstr "Pour 1 le nombre de Fibonacci est 1 et vous avez retourné {}."

#. context
#: FirstSum/task.yaml
msgid ""
"In programming, one of the first exercise asked for practice is to calculate "
"the sum of the ``n`` first positive integers. It is to illustrate the capacity "
"to repeat a process easily and with a few lines of computers.\n"
"\n"
"To do so, use a ``for`` loop with a range.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"En programmation, l'un des premiers exercices demander en pratique est de "
"calculer la somme des ``n`` premiers entiers positifs. C'est pour illustrer la "
"capacité de répétition d'un processus facilement avec quelques lignes de code.\n"
"\n"
"Pour cela, utilisez une boucle ``for``.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: FirstSum/task.yaml
msgid "Session 1: Sum"
msgstr "Session 1 : Somme"

#. name, q1, header
#: FirstSum/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    x = ... #the number\n"
"    result = ... #store in this variable the sum of the x first positive "
"integers"
msgstr ""
".. code-block:: python\n"
"\n"
"    x = ... #le nombre\n"
"    result = ... #enregistre dans la variable la somme des c premiers entiers "
"positifs"

#: FirstSum/src/TestSum.py:15
msgid "The sum of the {} first integers is {} and you returned {}."
msgstr ""
"La somme des {} premiers entiers positifs est {} et vous avez retourné {}."

#. context
#: FizzBuzz/task.yaml
msgid ""
"Write a program allowing to play the game `fizzbuzz <https://en.wikipedia.org/"
"wiki/Fizz_buzz>`_.\n"
"You receive a number (stored in variable ``i``).\n"
"We will implement a simplified version of the game. For a given integer ``i``, "
"the game will :\n"
"\n"
"- Store the string \"``fizz``\" in the variable ``temp`` if the number is "
"divisible by  3.\n"
"- Store the string \"``buzz``\" in the variable ``temp`` if the number is "
"divisible by 5.\n"
"- Store the string \"``fizzbuzz``\" in the variable ``temp`` if the number is "
"divisible by 3 and by 5.\n"
"- Store the string \"``no``\" in the variable ``temp`` if the number is not "
"divisible by 3 nor by 5.\n"
"\n"
".. code-block:: python\n"
"\n"
"    i = ...    # the number to check (i >= 1)\n"
"    temp = ... # \"fizz\", \"buzz\", \"fizzbuzz\" or \"no\" depending on i's "
"value\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Ecrivez un programme qui permet de jouer au jeu `fizzbuzz <https://en.wikipedia."
"org/wiki/Fizz_buzz>`_.\n"
"Vous recevez un nombre (stocké dans la variable ``i``).\n"
"Nous allons implémenter une version simplifiée du jeu. Pour un entier "
"``i`` donné, le jeu va :\n"
"\n"
"- enregistre la string \"``fizz``\" dans la variable ``temp`` si le nombre est "
"divisible par 3.\n"
"- enregistre la string  \"``buzz``\" dans la variable  ``temp`` si le nombre "
"est divisible par 5.\n"
"- enregistre la string  \"``fizzbuzz``\" dans la variable  ``temp`` si le "
"nombre est divisible par 3 et par 5.\n"
"- enregistre la string  \"``no``\" dans la variable  ``temp`` si le nombre "
"n'est divisible ni par 3, ni par 5.\n"
"\n"
".. code-block:: python\n"
"\n"
"    i = ...    # le nombre à tester (i >= 1)\n"
"    temp = ... # \"fizz\", \"buzz\", \"fizzbuzz\" ou \"no\" en fonction de la "
"valeur de i\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: FizzBuzz/task.yaml
msgid "Session 2: FizzBuzz"
msgstr "Session 2 : FizzBuzz"

#. name, q1, header
#: FizzBuzz/task.yaml
msgid ""
"``i`` is provided and you need to store the adequate return value in ``temp``"
msgstr ""
"``i`` est donné et vous devez enregistrer la valeur de retour adéquate dans "
"``temp``"

#: FizzBuzz/src/TestFizzBuzz.py:15 FizzBuzz/src/TestFizzBuzz.py:23
msgid "With {} as input the program should return {} and you returned {}."
msgstr ""
"Avec {} comme entrée, le programme devrait retourner {} et vous avez retourné "
"{}."

#. context
#: Flatten/task.yaml
msgid ""
"In Python, we can store many kinds of elements in a list, including lists "
"themselves.\n"
"\n"
"*Example*: :math:`[1,[2, 3], 4,[5, [6, 7]], 8]`\n"
"\n"
"Such structures are hard to read for a program, however, and often need to be "
"flattened to a simple one-level depth list before. The flattened version of the "
"list above would be: :math:`[1, 2, 3, 4, 5, 6, 7, 8]`\n"
"\n"
"Create a function ``flatten(l)`` that returns a one-level depth list from a "
"multi-level depth list.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"En Python, on peut enregistrer beaucoup de sortes d'éléments dans une liste, y "
"compris des listes elle-mêmes.\n"
"\n"
"*Exemple*: :math:`[1,[2, 3], 4,[5, [6, 7]], 8]`\n"
"\n"
"De telles structures sont cependant difficiles à lire pour un programme, et "
"souvent, elles ont besoin d'être aplatie en une simple liste à un seul niveau "
"pour ce faire. La version aplatie de la liste ci-dessus serait : :math:`[1, 2, "
"3, 4, 5, 6, 7, 8]`\n"
"\n"
"Créez une fonction ``flatten(l)`` qui retourne une liste d'un niveau de "
"profondeur à partir d'une liste à plusieurs niveaux.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Flatten/task.yaml
msgid "Session 8: Flatten"
msgstr "Session 8 : Listes Aplaties"

#. name, q1, header
#: Flatten/task.yaml
msgid "Implement the function ``flatten(l)`` in Python."
msgstr "Implémentez la fonction ``flatten(l)`` en Python."

#: Flatten/src/TestFlatten.py:32
msgid ""
"The flatten version of {} is {} and you returned {}. \n"
" You should watch you behaviour in case of empty lists."
msgstr ""
"La version aplatie de {} est {} et vous avez retourné {}. \n"
"Vous devriez vérifier le comportement de votre code dans le cas des listes "
"vides."

#. context
#: GCD/task.yaml
msgid ""
"The Greatest Common Divisor of two natural numbers ``a`` and ``b`` is the "
"biggest natural number ``k`` such that the division of ``a`` and ``b`` by this "
"natural ``k`` is an entire division.\n"
"\n"
"Euclid found a very simple recursive algorithm to find the GCD of two numbers:\n"
"$$\\\\text{gcd}(a,0) = a$$\n"
"$$\\\\text{gcd}(a,b) = \\\\text{gcd}(b,a\\\\%b)$$\n"
"\n"
"Recall that the operator ``%`` returns the remainder of the euclidian "
"division.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Le Plus Grand Commun Diviseur (Greatest Common Divisor en anglais) de deux "
"nombres naturels  ``a`` et ``b`` est le plus grand nombre naturel ``k`` tel que "
"la division de ``a`` et ``b`` par ce naturel ``k`` est une division entière.\n"
"\n"
"Euclide a trouvé un algorithme récursif très simple pour trouver le PGCD de "
"deux nombres :\n"
"$$\\\\text{gcd}(a,0) = a$$\n"
"$$\\\\text{gcd}(a,b) = \\\\text{gcd}(b,a\\\\%b)$$\n"
"\n"
"Rappelez-vous que l'opérateur ``%`` retourne le reste de la division "
"euclidienne.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: GCD/task.yaml
msgid "Session 3: Greatest common divisor"
msgstr "Session 3 : Plus Grand Commun Diviseur"

#. name, q1, header
#: GCD/task.yaml
msgid "Implement the function ``gcd(a,b)`` in Python."
msgstr "Implémentez la fonction ``gcd(a,b)`` en Python."

#: GCD/src/TestGcd.py:18
msgid ""
"Test zero - The greatest common divisor between {} and {} is {} and you "
"returned {}."
msgstr ""
"Test zero - Le plus grand commun diviseur entre {} et {} est {} et vous avez "
"retourné {}."

#: GCD/src/TestGcd.py:26
msgid "The greatest common divisor between {} and {} is {} and you returned {}."
msgstr ""
"Le plus grand commun diviseur entre {} et {} est et vous avez retourné {}."

#. context
#: GD/task.yaml
msgid ""
"The Greatest Divisor of a number ``a`` is the biggest number ( except ``a`` "
"itself) such that the division of ``a`` by this natural is an entire division.\n"
"\n"
"Since \\\\(0\\\\) is divisible by any natural this may cause some problems if "
"you will look for the bigger one, so we expect you to return ``None``.\n"
"\n"
"\\\\(1\\\\) shall also return ``None``.\n"
"\n"
"Recall that the operator ``%`` returns the remainder of the Euclidian "
"division.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Le Plus Grand Diviseur d'un nombre ``a`` est le plus grand nombre (excepté "
"``a`` lui-même) tel que la division de ``a`` parce ce nombre naturel est une "
"division entière.\n"
"\n"
"Etant donné que  \\\\(0\\\\) est divisible par n'importe quel nombre naturel, "
"cela risque de poser problème pour retourner le plus grand, nous attendons donc "
"que vous retourniez ``None`` dans ce cas. \\\\(1\\\\) devrait également renvoyer ``None``.\n"
"\n"
"Rappelez-vous que l'opérateur ``%`` retourne le reste de la division "
"euclidienne.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: GD/task.yaml
msgid "Session 3: Greatest divisor"
msgstr "Session 3 : Plus Grand Diviseur"

#. name, q1, header
#: GD/task.yaml
msgid ""
"Provide the body of the following method:\n"
"\n"
".. code-block:: python\n"
"\n"
"    def greatest_divisor(a):"
msgstr ""
"Donnez le corps de la méthode suivante :\n"
"\n"
".. code-block:: python\n"
"\n"
"    def greatest_divisor(a):"

#: GD/src/TestGd.py:14
msgid "The greatest divisor of {} is {} and you returned {}."
msgstr "Le plus grand diviseur de {} est {} et vous avez retourné {}."

#: GD/src/TestGd.py:21
msgid ""
"The expected answer for the greatest divisor of 0 should be None and you "
"returned {}."
msgstr ""
"La réponse attendue pour le plus grand diviseur de 0 devrait être None et vous "
"avez retourné {}."

#. context
#: GUI/task.yaml
msgid ""
"As a good student of this course, you want to level up a little bit your skills "
"in programming\n"
"and decided to try and create a *Graphical User Interface* (*GUI*).\n"
"\n"
"Specifically, you will create a class that represents a **clickable button** "
"that can be added on a screen.\n"
"Buttons should have:\n"
"\n"
"* a **width** (in pixel)\n"
"\n"
"* a **height** (in pixel)\n"
"\n"
"* a **label** (what is written on the button)\n"
"\n"
"* a **callback function** (the function called when the button is clicked)\n"
"\n"
"They should also have a method to \"*stringify*\" the instance of the button,\n"
"that is, return a **description of the button as a string**. For example,\n"
"a button 200px wide, 50px high, with the label \"Click me!\" and a callback "
"called \"explode_kittens\"\n"
"would stringify to `\"Button { size:(200,50), label:'Click me!', "
"callback:'explode_kittens' }\"`.\n"
"\n"
"*Note: the canonical way to call a function that returns a string description "
"of an object in Python\n"
"is the following:*\n"
"\n"
".. code-block:: python\n"
"\n"
"    class Example:\n"
"        def __str__():  # Stringify method\n"
"            return \"description\"\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"En tant que bon étudiant de ce cours, vous voulez améliorer vos compétences en "
"programmation\n"
"et vous décidez d'essayer de créer une *interface graphique* (Graphical User "
"Interface en anglais, *GUI* pour faire court).\n"
"\n"
"Plus précisément, vous créerez une classe qui représente un  **bouton** qui "
"peut être ajouté à l'écran.\n"
"Les boutons devraient avoir :\n"
"\n"
"* une largeur (**width**) exprimée en pixels\n"
"\n"
"* une hauteur(**height** ) exprimée en pixels\n"
"\n"
"* un **label** représentant ce qui est écrit sur le bouton\n"
"\n"
"* une  fonction de rappel (**callback**) représentant la fonction appelée quand "
"le bouton est cliqué\n"
"\n"
"Ils devraient aussi avoir une méthode pour convertir l'instance bouton en une "
"chaine de caractères,\n"
"c'est-à-dire, retourner une **descriptiondu bouton comme une chaine de "
"caractère**. Par exemple, \n"
"un bouton de 200px de large, 50px de haut et ayant le label \"Click me!\"  et "
"une fonction de rappel nommée \"explode_kittens\"\n"
"serait convertie en `\"Bouton { size:(200,50), label:'Click me!', "
"callback:'explode_kittens' }\"`.\n"
"\n"
"*Note : par convention, en Python, on nomme les fonction retournant une string "
"pour décrire un objet comme suit :*\n"
"\n"
".. code-block:: python\n"
"\n"
"    class Example:\n"
"        def __str__():  # méthode de conversion\n"
"            return \"description\"\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: GUI/task.yaml
msgid "Session 9: GUI button"
msgstr "Session 9 : Bouton GUI"

#. name, q1, header
#: GUI/task.yaml
msgid ""
"Provide the implementation of the class ``Button`` with the following "
"**attributes**:\n"
"\n"
"* ``size``: a tuple *(<width>, <height>)*\n"
"\n"
"* ``label``: a string\n"
"\n"
"* ``callback``: a function\n"
"\n"
"and with the following **methods**:\n"
"\n"
"* a constructor which takes as arguments a tuple with 2 positive integers as "
"the size, a string as the label and a function as the callback\n"
"\n"
"* ``__str__()``: returns a string description of the current instance\n"
"\n"
"* ``set_size(new_size)``: changes the size to a new tuple with two positive "
"integers\n"
"\n"
"* ``set_label(new_label)``: changes the label to a new string\n"
"\n"
"* ``on_click(new_callback)``: changes the callback to a new function (you don't "
"need to check the number of parameters of the function)\n"
"\n"
"* ``clicked()``: calls the callback function\n"
"\n"
"You should raise an ``ValueError`` if you get an **invalid argument** to a "
"method.\n"
"\n"
"*Note (1): you can test whether a variable contains a function,\n"
"you can use the function ``callable(var)`` which returns ``True`` if ``var`` "
"contains a function.*\n"
"\n"
"*Note (2): you can get the name of a function (stored in a variable or not) "
"using their attribute ``__name__``.\n"
"For example:*\n"
"\n"
".. code-block:: python\n"
"\n"
"    def fn():\n"
"        pass\n"
"    var = fn\n"
"    print(fn.__name__)  # prints \"fn\"\n"
"    print(var.__name__)  # prints \"fn\""
msgstr ""
"Donnez l'implémentation de la classe ``Button`` avec les **attributs** "
"suivants :\n"
"\n"
"* ``size``: un tuple *(<width>, <height>)*\n"
"\n"
"* ``label``: une chaine de caractère\n"
"\n"
"* ``callback``: une fonction\n"
"\n"
"et avec les  **méthodes** suivantes :\n"
"\n"
"* un constructeur prenant en argumets un tuple avec deux entiers positifs comme "
"size, une string comme label et une fonction comme callback.\n"
"\n"
"* ``__str__()``: retourne une chaine de caractère décrivant l'instance "
"courante\n"
"\n"
"* ``set_size(new_size)``: change la taille par un nouveau tuple constitué de "
"deux entiers positifs\n"
"\n"
"* ``set_label(new_label)``: change le label par une nouvelle chaine de "
"caractère\n"
"\n"
"* ``on_click(new_callback)``: change le callback par une nouvelle fonction "
"(vous ne devez pas vérifier le nombre de paramètres de la fonction)\n"
"\n"
"* ``clicked()``: appelle la fonction callback\n"
"\n"
"Vous devez lever une ``ValueError`` si vous recevez un **argument invalide** "
"pour une méthode.\n"
"\n"
"*Note (1) : vous pouvez tester si une variable contient une fonction,\n"
"vous pouvez utiliser la fonction ``callable(var)`` qui retourne ``True`` si "
"``var``contient une fonction.*\n"
"\n"
"*Note (2) : vous pouvez obtenir le nom d'une fonction (enregistré dans une "
"variable ou non) en utilisant leur attribut ``__name__``.\n"
"Par exemple :*\n"
"\n"
".. code-block:: python\n"
"\n"
"    def fn():\n"
"        pass\n"
"    var = fn\n"
"    print(fn.__name__)  # affiche \"fn\"\n"
"    print(var.__name__)  # affiche \"fn\""

#: GUI/src/TestGUI.py:21
msgid "Does the class `Button` exist?"
msgstr "Est-ce que la classe `Button` existe?"

#: GUI/src/TestGUI.py:23
msgid "You wrongly raised an exception when creating a button: {}('{}')"
msgstr ""
"Vous avez levé une exception alors qu'il ne fallait pas en créant le bouton : {}"
"('{}')"

#: GUI/src/TestGUI.py:24
msgid "Your button does not have an attribute called 'size'."
msgstr "Votre bouton n'a pas d'attribut appelé 'size'."

#: GUI/src/TestGUI.py:25
msgid "Your button does not have an attribute called 'label'."
msgstr "Votre bouton n'a pas d'attribut appelé 'label'."

#: GUI/src/TestGUI.py:26
msgid "Your button does not have an attribute called 'callback'."
msgstr "Votre bouton n'a pas d'attribut appelé 'callback'."

#: GUI/src/TestGUI.py:37 GUI/src/TestGUI.py:45 GUI/src/TestGUI.py:56
msgid ""
"You wrongly raise an exception when creating a button with size {}, label '{}' "
"and a valid callback: {}('{}')."
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant un "
"bouton de taille {}, label '{}' et un callback valide : {}('{}'). "

#: GUI/src/TestGUI.py:71
msgid ""
"You raise an unexpected exception when creating a button with invalid size {} "
"and valid label and callback: {}('{}')."
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant un "
"bouton avec une taille (size) invalide {} et un label et un callback valides : "
"{} ('{}')"

#: GUI/src/TestGUI.py:79
msgid ""
"You raise an unexpected exception when creating a button with invalid label "
"'{}' and valid size and callback: {}('{}')."
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant un "
"bouton avec un label invalide '{}' et une taille et callback valides: {} ('{}')."

#: GUI/src/TestGUI.py:88
msgid ""
"You raise an unexpected exception when creating a button with invalid callback "
"{} and valid size and label: {}('{}')."
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant un "
"bouton avec un callback invalide {} et une taille et un label valides : {} "
"('{}')"

#: GUI/src/TestGUI.py:101
msgid ""
"Changing the size of the button doesn't change the value of `size` correctly: "
"{} instead of {}."
msgstr ""
"Changer la taille du bouton ne change pas la valeur de `size` correctement: {} "
"à la place de {}."

#: GUI/src/TestGUI.py:107
msgid ""
"You wrongly raised an exception while creating a button with valid size {}, "
"label '{}' and a valid callback, and changing the size to the valid size {}: {}"
"('{}')"
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant un "
"bouton avec une taille {}, un label '{}' et un callback valides, et changeant "
"la taille par une taille (size) valide {} : {} ('{}')"

#: GUI/src/TestGUI.py:129
msgid ""
"You wrongly raised an exception while creating a button with valid size {}, "
"label {} and a valid callback, and changing the size to the invalid size {} : {}"
"('{}')."
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant un "
"bouton avec une taille {}, un label {} et un callback valides, et changeant la "
"taille par une taille (size) invalide {} : {} ('{}')"

#: GUI/src/TestGUI.py:142
msgid ""
"Changing the label of the button doesn't change the value of `label` correctly: "
"{} instead of {}."
msgstr ""
"Changer le label du bouton ne change pas la valeur de `label` correctement : {} "
"à la place de {}."

#: GUI/src/TestGUI.py:148
msgid ""
"You wrongly raised an exception while creating a button with valid size {}, "
"label '{}' and a valid callback, and changing the label to the valid label {}: "
"{}('{}')"
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant un "
"bouton avec une taille {}, un label '{}' et un callback valides, et changeant "
"le label par le label valide {} : {} ('{}')"

#: GUI/src/TestGUI.py:163
msgid ""
"You wrongly raised an exception while creating a button with valid size {}, "
"label {} and a valid callback, and changing the label to the invalid label {} : "
"{}('{}')."
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant un "
"bouton avec une taille {}, un label '{}' et un callback valides, et changeant "
"le label par le label invalide {} : {} ('{}')"

#: GUI/src/TestGUI.py:183
msgid ""
"Changing the callback of the button doesn't change the value of `callback` "
"correctly: {} instead of {}."
msgstr ""
"Changer le callback du bouton ne change pas la valeur de `callback` "
"correctement : {} à la place de {}."

#: GUI/src/TestGUI.py:190
msgid ""
"You wrongly raised an exception while creating a button with valid size {}, "
"label '{}' and a valid callback, and changing the callback to a valid callback: "
"{}('{}')"
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant un "
"bouton avec une taille {}, un label '{}' et un callback valides, et changeant "
"le callback par un callback valide  : {} ('{}')"

#: GUI/src/TestGUI.py:206
msgid ""
"You wrongly raised an exception while creating a button with valid size {}, "
"label {} and a valid callback, and changing the callback to an invalid "
"callback: {}('{}')."
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant un "
"bouton avec une taille {}, un label '{}' et un callback valides, et changeant "
"le callback par un callback invalide : {} ('{}')"

#: GUI/src/TestGUI.py:221
msgid ""
"Calling the method `clicked()` on your button doesn't call the callback method."
msgstr ""
"Appeler la méthode `clicked()` de votre bouton n'appelle pas la méthode "
"callback."

#: GUI/src/TestGUI.py:225
msgid ""
"You wrongly raised an exception while creating a button with valid size {}, "
"label {} and a valid callback, and calling the callback: {}('{}')."
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant un "
"bouton avec une taille {}, un label '{}' et un callback valides, et appelant le "
"callback : {} ('{}')"

#. context
#: Hello/task.yaml
msgid ""
"You are a programmer and want to **say hello** to the user of your program. The "
"user's name is stored in a **variable** called ``name``\n"
"and you want to store your greeting in a **variable** called ``hello``.\n"
"This string will have the **following form**: \"Hello, ``name``!\"\n"
"\n"
"For example, if ``name`` is assigned \"Charles\", your code would put \"Hello, "
"Charles!\" in the variable ``hello``.\n"
"\n"
"Use the ``format`` function.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Vous êtes un programmeur et vous voulez **dire bonjour** à l'utilisateur de "
"votre programme. Le nom de l'utilisateur est enregistré dans une **variable** "
"appelée ``name``\n"
"et vous voulez enregistrer vos salutations dans une **variable** nommée "
"``hello``.\n"
"Cette chaine de caractère aura la **forme suivante** : \"Hello, ``name``!\"\n"
"\n"
"Par exemple, si \"Charles\" est assigné à ``name``, votre code écrirait "
"\"Hello, Charles!\" dans la variable ``hello``.\n"
"\n"
"Utilisez la fonction ``format``.\n" 
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Hello/task.yaml
msgid "Session 4: Hello"
msgstr "Session 4 : Hello"

#. name, q1, header
#: Hello/task.yaml
msgid "Store your greeting string in ``hello`` (with ``name`` the user's name)"
msgstr ""
"Enregistrez vos salutations dans ``hello`` (avec ``name`` le nom de "
"l'utilisateur)"

#: Hello/src/TestHello.py:14
msgid ""
"When \"Charles\" is the user's name, ``hello`` contains \"{}\" instead of "
"\"Hello, Charles!\""
msgstr ""
"Quand \"Charles\" est le nom d'utilisateur, ``hello`` contient \"{}\" à la "
"place de \"Hello, Charles!\""

#: Hello/src/TestHello.py:20 Hello/src/TestHello.py:27
msgid ""
"When \"{0}\" is the user's name, ``hello`` contains \"{1}\" instead of \"Hello, "
"{0}!\""
msgstr ""
"Quand \"{0}\" est le nom de l'utilisateur, ``hello`` contient \"{1}\" à la "
"place de \"Hello, {0}!\""

#. context
#: HighOrder/task.yaml
msgid ""
"Your roommate is studying in high school to become a primary school teacher. "
"She has to teach the multiplication tables to her children in her internship.\n"
"\n"
"You're kind and you decided to help her. So you decided to create a list that "
"return all the multiplication tables that she want.\n"
"\n"
"You have to implement a function ``mult_table(n)`` wich gives you a list of "
"functions from 0 to n (included) that compute the multiplication table of the "
"index.\n"
"\n"
"For exemple, you execute ``l = mult_table(5)`` and you receive a list of 5 "
"functions (it has to be lambdas) where ``l[3]`` is a function that compute the "
"multiplication table of 3 (``x = l[3](6)`` gives you 3*6).\n"
"\n"
"*Note: if you want to capture an outside variable for your lambda you can "
"define a parameter that does not change. exemple: ``lambda x,y=i:x+y``*\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Votre coloc étudie en Haute-Ecole pour devenir instituteur primaire. Il doit "
"enseigner les tables de multiplication à ses élèves pendant son stage. \n"
"\n"
"Vous êtes sympa et vous décidez de l'aider. Vous créez donc une liste qui "
"retourne toutes les tables de multiplication qu'il désire.\n"
"\n"
"Vous devez implémenter une fonction ``mult_table(n)`` qui vous donne une liste "
"de fonctions allant de 0 à n (inclus) qui calculent la table de multiplication "
"de l'index.\n"
"\n"
"Par exemple, vous exécutez ``l = mult_table(5)`` et vous recevez une liste de 5 "
"fonctions (ce doivent être des lambdas) où ``l[3]`` est une fonction qui "
"calcule la table de multiplication de 3 (``x = l[3](6)`` donne 3*6).\n"
"\n"
"*Note : si vous voulez capturer une variable externe pour votre lambda, vous "
"pouvez définir un paramètre qui ne change pas. Exemple:* ``lambda x,y=i:x+y`` \n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: HighOrder/task.yaml
msgid "Session 8: High Order - Lambda"
msgstr "Session 8 : High Order - Lambda"

#. name, q1, header
#: HighOrder/task.yaml
msgid ""
"Provide the body of the following method\n"
"\n"
".. code-block:: python\n"
"\n"
"    def mult_table(n):"
msgstr ""
"Fournissez le corps de la méthode suivante : \n"
"\n"
".. code-block:: python\n"
"\n"
"    def mult_table(n):"

#: HighOrder/src/TestHighOrder.py:20
msgid ""
"The function {} with the argument {} of the list\n"
" gives {} when the answer should be {}.\n"
" You may have not captured the variable in the lambda. (see in the instructions)"
msgstr ""
"La fonction {} avec l'argument {} de la liste\n"
" donne {} quand la réponse devrait être {}.\n"
" Vous n'avez peut-être pas capturé la variable dans la lambda. (Regardez dans "
"les instructions)"

#: HighOrder/src/TestHighOrder.py:32
msgid "The length of the list is {} and it should be {}."
msgstr "La taille de la liste est {} et devrait être {}."

#. context
#: Hogwarts-I/task.yaml
msgid ""
"Once again, the **Fat Lady** drank all the wine of the *drunken monks* painting "
"and **Sir Cadogan** isn't available to replace her. The access to the "
"*Gryffindor Common Room* isn't guarded and the **Slytherins** are up to no "
"good.\n"
"\n"
"We need you to quickly design a password checker to fill in the big void left "
"by the *Fat Lady's departure*.\n"
"\n"
"Create a function ``portrait(right_password, entered_password)`` that will "
"return ``True`` if the two passwords are identical and ``False`` otherwise.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Une fois de plus, la **Grosse Dame** a bu tout le vin de la peinture des "
"*moines ivres* et le **Chevalier du Catogan** n'est pas disponible pour la "
"remplacer. L'accès à la *salle commune des Gryffondor* n'est pas gardée et les "
"intentions des **Serpentards** sont mauvaises.\n"
"\n"
"Nous avons besoin que vous conceviez un vérificateur de mot de passe pour "
"combler le vide laisser par le *départ de la Grosse Dame*.\n"
"\n"
"Créez une fonction ``portrait(right_password, entered_password)`` qui retourne "
"``True`` si les deux mots de passe sont identiques et ``False`` sinon.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Hogwarts-I/task.yaml
msgid "Session 4: Hogwarts - Fat Lady"
msgstr "Session 4 : Poudlard - Grosse Dame"

#. name, q1, header
#: Hogwarts-I/task.yaml
msgid ""
"Implement the function ``portrait(right_password, entered_password)`` in Python."
msgstr ""
"Implémentez la fonction ``portrait(right_password, entered_password)`` en "
"Python."

#: Hogwarts-I/src/TestChecker.py:20
msgid ""
"Are you really belonging to this house? \n"
" Watch if you're really checking the equality there."
msgstr ""
"Appartenez-vous vraiment à cette maison?\n"
"Regardez si vous avez vraiment vérifié l'égalité."

#: Hogwarts-I/src/TestChecker.py:29
msgid ""
"Are you really belonging to this house? \n"
" With the right and entered password being {} and {}  you compared  them as {}"
"ly identical."
msgstr ""
"Appartenez-vous vraiment à cette maison?\n"
"Le vrai mot de passe est {} et celui que vous avez entré {}, vous avez testé "
"leur égalité comme étant {}."

#. context
#: Hogwarts-II/task.yaml
msgid ""
"Once again, it is time for the *sorting ceremony*. The first years are waiting "
"in line, in front of an old hat, both anxious and excited. The director makes a "
"great speech to welcome them and gives the floor to a mysterious intervenant.\n"
"\n"
"Every first year is amazed when the **Sorting Hat** emerges from its silent and "
"starts to sings one of its famous `song <http://fr.harrypotter.wikia.com/wiki/"
"Chansons_du_Choixpeau_magique>`_.\n"
"\n"
"However, the old hat got a bit too far and meets now some performance issues. "
"It is voiceless and won't be up to the task for the next part of the ceremony. "
"Luckily enough we still have access to the founders' knowledge and we will be "
"able to sort the students with your help.\n"
"\n"
"Create a function ``house_designation(student_qualities)`` that will return a "
"list with the names of the houses from the one a student should be attributed "
"to to the last one he sould go to. To decide his attribution, you should move "
"him in the house in which he has the most affinities. If two houses shall be "
"equals, return the first one in the given knowledge.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Une fois de plus, c'est l'heure de la *cérémonie de la répartition* . Les "
"premières années attendent en rangs devant un vieux chapeau, à la fois anxieux "
"et excités. Le directeur fait un long discours pour les accueillir et laisse la "
"place à un mystérieux intervenant.\n"
"\n"
"Tous les premières années sont ébahis lorsque le **Choixpeau Magique** brise le "
"silence en chantant l'une de ses célèbres `chansons <http://fr.harrypotter."
"wikia.com/wiki/Chansons_du_Choixpeau_magique>`_.\n"
"\n"
"Cependant, le choixpeau en fait un peu trop et rencontre quelques problèmes. Il "
"perd sa voix et ne sera pas en état d'assurer la suite de la cérémonie. "
"Heureusement, nous avons toujours accès aux connaissances des fondateurs et "
"nous pourrons répartir les élèves avec votre aide.\n"
"\n"
"Créez une fonction ``house_designation(student_qualities)`` qui va retourner "
"une liste avec les noms des quatres maisons, la première étant celle où "
"l'étudiant devrait aller et la dernière, celle qui convient le moins à "
"l'étudiant. Pour décider de cette répartition, l'étudiant devrait être placé "
"dans la maison où il a le plus d'affinités, c'est-à-dire, la maison avec "
"laquelle il partage le plus de qualités. Si deux maisons sont à égalité, on les "
"retourne dans l'ordre dans lequel elles sont placées dans les connaissances des "
"fondateurs.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Hogwarts-II/task.yaml
msgid "Session 5: Hogwarts - Sorting Hat"
msgstr "Session 5 : Poudlard - Choixpeau Magique"

#. name, q1, header
#: Hogwarts-II/task.yaml
msgid ""
"Implement the function ``house_designation(student_qualities)`` in Python.\n"
"\n"
"You already have the ancestral knowledge of the **Hat** at your disposal:\n"
"\n"
".. code-block:: python\n"
"\n"
"    knowledge = [['Gryffindor', ['brave', 'strong', 'bold']],\n"
"                 ['Ravenclaw', ['smart', 'wise', 'curious']],\n"
"                 ['Hufflepuff', ['loyal', 'patient', 'hard-working']],\n"
"                 ['Slytherin', ['cunning', 'wily', 'malignant']]]"
msgstr ""
"Implémentez la fonction ``house_designation(student_qualities)`` en Python.\n"
"\n"
"Vous avez déjà la connaissance ancestrale du **Choixpeau** à votre "
"disposition : \n"
"\n"
".. code-block:: python\n"
"\n"
"    knowledge = [['Gryffindor', ['brave', 'strong', 'bold']],\n"
"                 ['Ravenclaw', ['smart', 'wise', 'curious']],\n"
"                 ['Hufflepuff', ['loyal', 'patient', 'hard-working']],\n"
"                 ['Slytherin', ['cunning', 'wily', 'malignant']]]"

#: Hogwarts-II/src/TestSort.py:18
msgid ""
"Should you really belong to this house? \n"
" Wasn't there any equals houses for the qualities {}?"
msgstr ""
"Devriez-vous vraiment faire partie de cette maison? \n"
" N'y avait-il pas une autre maison à égalité pour les qualités {} ?"

#: Hogwarts-II/src/TestSort.py:27
msgid ""
"Should you really belong to this house? \n"
"Your returned {}, wasn't there an order more suited for the qualities {}?"
msgstr ""
"Devriez-vous vraiment faire partie de cette maison? \n"
" Vous avez retourné{}, n'y avait-il pas un ordre plus adéquat pour les qualités "
"{} ?"

#. context
#: Hogwarts-III/task.yaml
msgid ""
"All your life you wondered *\"Where did this stupid owl misplace my letter?\"*, "
"*\"When will I finally go to Hogwarts?\"* or even on the end *\"Am I actually a "
"squib?\"*. Do not worry!\n"
"\n"
"**Hogwarts** finally contacted you for an important task. Even if you're too "
"old to learn **witchcraft**, they're lucky because you learned a different kind "
"of magic: **programming**.\n"
"\n"
"They decided to modernize a bit their admission services and want you to create "
"a program that will be able to fill a file (template of the admission letter) "
"with the name of a student. This way, they will be able to save on the feathers "
"and reduce the workload of the elves!\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Toute votre vie vous vous êtes demandé *\"Où cette stupide chouette a-t-elle "
"égaré ma lettre ?\"*, *\"Quand irais-je enfin à Poudlard ?\"* ou même à la fin *"
"\"Suis-je un Cracmol ?\"*. Ne vous inquiétez pas!\n"
"\n"
"**Poudlard** vous a enfin contacté pour une tâche importante. Même si vous êtes "
"trop vieux pour apprendre la **sorcellerie**, ils ont de la chance parce que "
"vous avez appris une différente sorte de magie : **la programmation**.\n"
"\n"
"Ils ont décidé de moderniser un peu leurs services d'admission et veulent que "
"vous créiez un programme qui sera capable de remplir un fichier (template d'un "
"lettre d'admission) avec le nom de l'étudiant. De cette manière, ils pourront "
"réduire le coût en plumes et réduire la charge de travail des elfes!\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Hogwarts-III/task.yaml
msgid "Session 6: Hogwarts - Admission letter"
msgstr "Session 6 : Poudlard - Lettre d'admission"

#. name, q1, header
#: Hogwarts-III/task.yaml
msgid ""
"Implement the function ``write(letter_template, name)`` in Python.\n"
"\n"
"Don't forget to raise an exception if any should occur."
msgstr ""
"Implémentez la fonction ``write(letter_template, name)`` en Python.\n"
"\n"
"N'oubliez pas de lever une exception si elle se produit."

#: Hogwarts-III/src/TestAdmission.py:14
msgid ""
"HOGWARTS SCHOOL of WITCHCRAFT and WIZARDRY \n"
" Headmaster : Albus Dumbledore \n"
" (Order of Merlin, First Class, Grand Sorc., Chf. Warlock, Supreme Mugwump, "
"International Confed. of Wizards) \n"
"\n"
" Dear Mr/Ms. #, \n"
"\n"
" We are pleased to inform you that you have been accepted at Hogwarts School of "
"Witchcraft and Wizardry. Please find enclosed a list of all necessary books and "
"equipment. \n"
"\n"
" Term begins on 1 September. We await your owl by no later than 31 July. \n"
"\n"
" Yours sincerely, \n"
"\n"
" Minerva McGonagall \n"
" Deputy Headmistress \n"
msgstr ""
"ECOLE de MAGIE et de SORCELLERIE de POUDLARD\n"
"Directeur : Albus Dumbledore\n"
"(Ordre de Merlin, Première classe, Grand Sorc., Chf. Démoniste, Suprême "
"Mugwump, Confédéré international. des sorciers)\n"
"\n"
"Cher M./Mme #,\n"
"\n"
"Nous avons le plaisir de vous informer que vous avez été accepté à l'Ecole de "
"Magie et de Sorcellerie de Poudlard. Veuillez trouver ci-joint une liste de "
"tous les livres et équipements nécessaires.\n"
"\n"
"Les cours débutent le 1er septembre. Nous attendons votre chouette pour le 31 "
"juillet au plus tard.\n"
"\n"
"Cordialement,\n"
"\n"
"Minerva McGonagall\n"
"Directrice Adjointe\n"

#: Hogwarts-III/src/TestAdmission.py:37
msgid "The letter expected of the given file was {} and you returned {}."
msgstr "La lettre attendue pour le fichier donné est {} et vous avez retourné {}."

#. context
#: Hogwarts-IV/task.yaml
msgid ""
"The rules of *Quidditch* were established in 1750 by the **Department of Magic "
"Games and Sports**. And it is nowhere said that the referee can't use a bit of "
"help.\n"
"\n"
"**Madam Hooch** is quite busy already looking for *blatching*, *blurting*, "
"*blagging* and many other nasty quidditch faults. So she thought you could "
"design a program that would decide the winner of a match based on the list of "
"the points.\n"
"\n"
"The scores list would be provided as a file. The content of this file would "
"follow this format:\n"
"\n"
"- Two first lines: **Names of the teams**\n"
"- Lines after: **Team_scoring** *points*\n"
"\n"
"In case of error, just raise it.\n"
"\n"
"Remember that the catch of the *golden snitch* (150 points) means the end of "
"the match.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Les règles du *Quidditch* ont été établie en 1750 par le **Département des jeux "
"et sports magiques**. Et il n'est dit nul part que l'arbitre ne peut recevoir "
"un petit coup de main.\n"
"\n"
"**Madame Bibine** est plutôt occupée à regarder pour le *boutenchoc*,  le *croc-"
"en-manche*, le *hochequeue* et tout un tas d'autres vilaines fautes de "
"Quidditch. Donc elle a pensé que vous pourriez écrire une programme qui "
"déciderait le vainqueur d'un match en se basant sur la liste des points.\n"
"\n"
"La liste des scores serait fournie dans un fichier. Le contenu de ce fichier "
"suivrait le format suivant : \n"
"\n"
"- Les deux premières lignes : **Noms des équipes**\n"
"- Les lignes qui suivent : **Team_scoring** *points*\n"
"\n"
"S'il y a une erreur, pensez à lever une exception.\n"
"\n"
"Rappelez-vous qu'attraper le *vif d'or* en plus de rapporter 150 points marque "
"la fin du match.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Hogwarts-IV/task.yaml
msgid "Session 6: Hogwarts - Quidditch"
msgstr "Session 6 : Poudlard - Quidditch"

#. name, q1, header
#: Hogwarts-IV/task.yaml
msgid "Implement the function ``referee(score_file)`` in Python."
msgstr "Implémentez la fonction ``referee(score_file)`` en Python."

#: Hogwarts-IV/src/TestQuidditch.py:33
msgid ""
"Did the bludger hit you too hard? For the given score {} you decided {} won."
msgstr ""
"Est-ce que le cognard vous a frappé trop fort? Pour le score donné {} vous avez "
"décidé que {} a gagné."

#: Hogwarts-IV/src/TestQuidditch.py:42
msgid ""
"Did the bludger hit you too hard? The match is supposed to end after the caught "
"of the golden snitch."
msgstr ""
"Est-ce que le cognard vous a frappé trop fort? Le match est censé se terminer "
"une fois que le vif d'or a été attrapé."

#. context
#: Hogwarts-V/task.yaml
msgid ""
"During the last session of the **duelling club**, the hourglasses keeping the "
"points of each house were destroyed beyond any *reparo* and the celebration of "
"the *house cup* is upon us!\n"
"\n"
"Luckily **Filch**, who doesn't trust magic, kept the account of each "
"achievement perpetrated (his words, not mine) by the students. He provided you "
"with a dictionnary containing the belonging of each student to their house and "
"the scroll with their winnings.\n"
"\n"
"The scores list would be provided as a file. The content of this file would "
"follow this format:\n"
"\n"
"- Lines: **student_name** *points*\n"
"\n"
"Please return the name of the winning house, in the case of an ex-aequo: return "
"the list of the best houses.\n"
"\n"
"In case of error, just raise it.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Lors de la dernière session du **club de duel**, les sabliers comptant les "
"points de chaque maison ont été détruits même un *reparo* n'a rien pu faire et "
"la célébration de la *Coupe des Quatre Maisons* arrive à grands pas!\n"
"\n"
"Heureusement, **Rusard**, qui ne fait pas confiance à la magie, a gardé les "
"comptes de tous les accomplissements perpétrés par les étudiants. Il vous a "
"fourni un dictionnaire associant chaque élève à sa maison et un parchemin avec "
"tous leurs gains.\n"
"\n"
"La liste des scores est donnée dans un fichier. Le contenu de ce fichier suit "
"le format suivant :\n"
"\n"
"- Lignes: **student_name** *points*\n"
"\n"
"Merci de retourner le nom de la maison gagnante, dans le cas d'un ex-aequo : "
"retournez une liste des meilleures maisons.\n"
"\n"
"S'il y a une erreur, levez une exception.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Hogwarts-V/task.yaml
msgid "Session 7: Hogwarts - House cup"
msgstr "Session 7 : Poudlard - Coupe des Quatre Maisons"

#. name, q1, header
#: Hogwarts-V/task.yaml
msgid ""
"Implement the function ``winning_house(scroll)`` in Python.\n"
"\n"
"You already have the list of student sorted by house at your disposal:\n"
"\n"
".. code-block:: python\n"
"\n"
"    students = {'gryffindor': ['Harry', 'Hermione', 'Ron', 'Ginny', 'Fred', ' "
"Georges', 'Neville'],\n"
"                'ravenclaw': ['Cho', 'Luna', 'Sybill', 'Marcus', 'Marietta', "
"'Terry', 'Penelope'],\n"
"                'hufflepuff': ['Pomona', 'Zacharias', 'Teddy', 'Cedric', "
"'Nymphadora', 'Newton', 'Justin'],\n"
"                'slytherin': ['Malfoy', 'Severus', 'Dolores', 'Horace', "
"'Blaise', 'Pansy', 'Bellatrix']}"
msgstr ""
"Implémentez la fonction ``winning_house(scroll)`` en Python.\n"
"\n"
"Vous avez déjà la liste des étudiants triés par maison à votre disposition :\n"
"\n"
".. code-block:: python\n"
"\n"
"    students = {'gryffindor': ['Harry', 'Hermione', 'Ron', 'Ginny', 'Fred', ' "
"Georges', 'Neville'],\n"
"                'ravenclaw': ['Cho', 'Luna', 'Sybill', 'Marcus', 'Marietta', "
"'Terry', 'Penelope'],\n"
"                'hufflepuff': ['Pomona', 'Zacharias', 'Teddy', 'Cedric', "
"'Nymphadora', 'Newton', 'Justin'],\n"
"                'slytherin': ['Malfoy', 'Severus', 'Dolores', 'Horace', "
"'Blaise', 'Pansy', 'Bellatrix']}"

#: Hogwarts-V/src/TestHouseCup.py:36 Hogwarts-V/src/TestHouseCup.py:45
msgid ""
"For the given students' achievements {} you decided {} won but {} clearly did."
msgstr ""
"Pour les réussites d'un étudiant donné {} vous avez décidé que {} a gagné alors "
"que c'est {} qui devait."

#. context
#: Interests/task.yaml
msgid ""
"Suppose you now have ``base`` € on your savings account.\n"
"\n"
"If you leave it ``x`` years on that account at a fixed cummulative interest "
"rate of ``y`` %, what will be the balance on your account after these ``x`` "
"years?\n"
"\n"
"Return that amount.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Supposez que vous avez  ``base`` € en ce moment sur votre compte épargne.\n"
"\n"
"Si vous le laissez ``x`` années sur ce compte avec un taux d'intérêt cumulés  "
"de ``y`` %, quel sera le solde de votre compte après ces ``x`` années?\n"
"\n"
"Retournez ce montant.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Interests/task.yaml
msgid "Session 3: Interest calculation"
msgstr "Session 3 : Calcul d'intérêts"

#. name, q1, header
#: Interests/task.yaml
msgid ""
"Provide the body of the following method:\n"
"\n"
".. code-block:: python\n"
"\n"
"    def interests(base, y, x):"
msgstr ""
"Fournissez le corps de la méthode suivante :\n"
"\n"
".. code-block:: python\n"
"\n"
"    def interests(base, y, x):"

#: Interests/src/TestInterests.py:16
msgid ""
"When calling interests(base, y, x) with base = {}€ , y = {}% and x = {} years "
"you returned {} but the expected value was {}."
msgstr ""
"Quand vous appelez la méthode interests(base, y, x) avec base = {}€ , y = {}% "
"et x = {} années vous avez retourné {}mais la valeur attendue était {}."

#. context
#: Interval/task.yaml
msgid ""
"Suppose the variables ``a``, ``b`` and ``x`` contain a natural number. Write a "
"code fragment that would assign the boolean value ``True`` to the variable "
"named ``interval`` if ``x`` belongs to ``[a, b]``. Assign it the value "
"``False`` otherwise.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Supposez que les variables ``a``, ``b`` et ``x`` contiennent un nombre naturel. "
"Ecrivez un fragment de code qui assignerait la valeur booléenne ``True`` à une "
"variable nommée ``interval`` si ``x`` appartient à ``[a, b]``. Assignez la "
"valeur ``False`` sinon.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Interval/task.yaml
msgid "Session 2: Interval"
msgstr "Session 2 : Intervalle"

#. name, q1, header
#: Interval/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    a = ... #lower bound of the interval\n"
"    b = ... #upper bound of the interval\n"
"    x = ... #variable to evaluate\n"
"    interval = ... #store in this variable the belonging of x in the interval\n"
msgstr ""
".. code-block:: python\n"
"\n"
"    a = ... #limite inférieure de l'intervalle\n"
"    b = ... #limite supérieure de l'intervalle\n"
"    x = ... #variable à évaluer\n"
"    interval = ... #enregistrez dans cette variable l'appartenance de x à "
"l'intervalle\n"

#: Interval/src/TestInterval.py:17 Interval/src/TestInterval.py:25
msgid "The belonging of {} to [{}, {}] is {} and you returned {}."
msgstr "L'appartenance de {} à [{}, {}] est  {} et vous avez retourné {}."

#. author
#: LinkedList/task.yaml
msgid "Jacob Eliat-Eliat"
msgstr "Jacob Eliat-Eliat"

#. context
#: LinkedList/task.yaml
msgid ""
"Create a class LinkedList that has an ``add`` method which takes a value as "
"parameter, and a ``get_reverse`` method which returns the values of the linked "
"list in reverse order.\n"
"\n"
"If the ``add`` method is called like this:\n"
"\n"
".. code-block:: python\n"
"\n"
"  add(\"first\")\n"
"  add(\"second\")\n"
"  add(\"third\")\n"
"\n"
"Then ``get_reverse()`` should return *\"thirdsecondfirst\"*\n"
"\n"
"Use another class ``Node`` with at least the methods ``get_value`` and "
"``get_next``\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Créez une classe LinkedList qui a une méthode ``add`` prenant une valeur en "
"paramètre et une méthode ``get_reverse`` retournant les valeurs de la liste "
"chaînée dans l'ordre inverse.\n"
"\n"
"Si la méthode ``add`` est appelée comme ceci :\n"
"\n"
".. code-block:: python\n"
"\n"
"  add(\"first\")\n"
"  add(\"second\")\n"
"  add(\"third\")\n"
"\n"
"Alors ``get_reverse()`` devrait retourner *\"thirdsecondfirst\"*\n"
"\n"
"Utilisez une autre classe ``Node`` avec au moins les méthodes ``get_value`` et "
"``get_next``\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: LinkedList/task.yaml
msgid "Session 11: LinkedList"
msgstr "Session 11 : Liste Chainée (LinkedList)"

#. name, q1, header
#: LinkedList/task.yaml
msgid ""
"Implement the class ``LinkedList`` with ``add`` and ``get_reverse`` functions, "
"use a ``Node`` class with ``get_next`` and ``get_value``"
msgstr ""
"Implémentez la classe ``LinkedList`` avec les fonctions``add`` et "
"``get_reverse``, utilisez une classe ``Node`` avec ``get_next`` et ``get_value``"

#: LinkedList/src/TestLinkedList.py:15
msgid "You did not provide the LinkedList class"
msgstr "Vous n'avez pas fourni la classe LinkedList"

#: LinkedList/src/TestLinkedList.py:17
msgid "You did not provide the required methods"
msgstr "Vous n'avez pas fourni les méthodes requises"

#: LinkedList/src/TestLinkedList.py:18
msgid "You did not provide the Node class"
msgstr "Vous n'avez pas fourni la classe Node"

#: LinkedList/src/TestLinkedList.py:20
msgid "You did not provide the required methods in the Node class"
msgstr "Vous n'avez pas fourni les méthodes requises pour la classe Node"

#: LinkedList/src/TestLinkedList.py:24
msgid ""
"When adding nothing get_reverse is supposed to return an empty string and you "
"returned {}. \n"
" You should watch you behaviour in case of empty lists."
msgstr ""
"Quand on n'ajoute rien, get_reverse doit retourner une string vide et vous avez "
"retourné {}.\n"
"Vous devriez regarder le comportement de votre programme dans le cas des listes "
"vides."

#: LinkedList/src/TestLinkedList.py:36
msgid "The answer should be {} and you returned {}."
msgstr "La réponse devrait être {} et vous avez retourné {}."

#. context
#: LinkedListChildren/task.yaml
msgid ""
"You are the manager of a vacation camp. To make sure you don't lose any "
"children in your visit of a local forest, every children must look to a buddy, "
"which will look to another buddy, etc. Until every children has a buddy and is "
"the buddy of someone.\n"
"\n"
"You are sure that if you take a children, and follow the trail of buddies, you "
"will visit all children.\n"
"To check if every child is here, you just need to check that every children has "
"his buddy, and check that for all children.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Vous êtes le manager d'un camp de vacances. Pour vous assurer de ne perdre "
"aucun enfant lors de votre visite d'une forêt locale, chaque enfant doit "
"regarder un camarade qui lui-même regardera un camarade, etc. Jusqu'à ce que "
"chaque enfant ait un camarade et qu'il soit le camarade de quelqu'un.\n"
"\n"
"Vous êtes sûrs que si vous choisissez un enfant et suivez le chemin de "
"camarades, vous allez voir tous les enfants.\n"
"Pour vérifier si chaque enfant est là, vous devez juste vérifier que chaque "
"enfant à son camarade,  et le vérifier pour tous.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: LinkedListChildren/task.yaml
msgid "Session 11 : Lost Children"
msgstr "Session 11 : Enfants perdus"

#. name, q1, name
#: LinkedListChildren/task.yaml
msgid "Check the children"
msgstr "Vérifiez les enfants"

#. name, q1, header
#: LinkedListChildren/task.yaml
msgid ""
"You have to check if every children is here. To do so, you have acces to the "
"first child with the variable ``first_child`` (instance of the class Child). "
"The class Child has the function is_next_valid to check if it has his buddy, "
"and the function next_child to get his buddy.\n"
"\n"
".. code-block:: python\n"
"\n"
"    class Child:\n"
"        def is_next_valid()  #return a boolean\n"
"        def next_child()     #return a Child\n"
"\n"
"\n"
"Don't forget to stop checking once you have checked every children.\n"
"You have to complete the body of the function, and return true if all the "
"children are here, and false if not.\n"
"\n"
".. code-block:: python\n"
"\n"
"    def is_every_child_here(first_child):"
msgstr ""
"Vous devez vérifier si chaque enfant est là. Pour cela, vous avez accès au "
"premier enfant avec la variable ``first_child`` (instance de la classe Child). "
"La classe Child a la fonction is_next_valid pour vérifier si il a son camarade, "
"et la fonction next_child pour avoir son camarade.\n"
"\n"
".. code-block:: python\n"
"\n"
"    class Child:\n"
"        def is_next_valid()  #retourne un booléen\n"
"        def next_child()     #retourne un Child\n"
"\n"
"\n"
"N'oubliez pas d'arrêter de regarder une fois que vous avez regardé tous les "
"enfants.\n"
"Vous devez compléter le corps de la fonction, et retourner `true` si tous les "
"enfants sont là, et `false` sinon.\n"
"\n"
".. code-block:: python\n"
"\n"
"    def is_every_child_here(first_child):"

#: LinkedListChildren/src/TestChildren.py:13
#: LinkedListChildren/src/TestChildren.py:25
msgid ""
"Be sure you stop once you are back to the first children.\n"
"You don't want to have more than you already have..."
msgstr ""
"Assurez-vous d'arrêter de regarder dans vous arrivez de nouveau au premier "
"enfant.\n"
"Vous ne voulez pas en avoir plus que ceux que vous avez déjà..."

#: LinkedListChildren/src/TestChildren.py:22
msgid ""
"Well... You got it wrong, so try again.\n"
"Are you blind? Everyone's there!"
msgstr ""
"Eh bien... Vous vous êtes trompés, essayez encore!\n"
"Etes-vous aveugle?  Tout le monde est là!"

#: LinkedListChildren/src/TestChildren.py:33
msgid ""
"Well... You got it wrong, so try again.\n"
"You actually lost a child"
msgstr ""
"Eh bien... Vous vous êtes trompés, essayez encore!\n"
"Vous avez perdu un enfant..."

#. context
#: LoadSaveGame/task.yaml
msgid ""
"For your next big game, *God of massive destruction Game Of The Century "
"edition*, you have to create a function to load and to save the data of the "
"player.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Pour votre prochain gros jeu, *Dieu de la Destruction Massive : Edition Jeu du "
"Siècle*, vous devez créer une fonction pour charger et sauvegarder les données "
"du joueur.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: LoadSaveGame/task.yaml
msgid "Session 6 : Save your game"
msgstr "Session 6 : Sauvegarder le jeu"

#. name, q1, name
#: LoadSaveGame/task.yaml
msgid "Save and Load"
msgstr "Sauvegarder et Charger"

#. name, q1, header
#: LoadSaveGame/task.yaml
msgid ""
"You have to create two function, one to save the data and one to load the data "
"previously saved.\n"
"You are free to store the data like you want in the file, but putting one "
"integer per line is probably the easiest.\n"
"If there is no file to load when using the function load_data (for exemple, the "
"player starts a new game), you must raise a ``FileNotFoundError``.\n"
"\n"
"The two function will have these definition :\n"
"\n"
".. code-block:: python\n"
"\n"
"    #save the 4 integer to the file named filename\n"
"    def save_data(filename, life, mana, position_x, position_y)\n"
"\n"
"    #return a tuple containing (life, mana, position_x, position_y) previously "
"saved\n"
"    def load_data(filename)"
msgstr ""
"Vous devez créer deux fonctions : une pour sauvegarder les données et une pour "
"les charger.\n"
"Vous êtes libres d'enregistrer les données comme vous le souhaitez dans le "
"fichier, mais placer un entier par ligne est probablement la méthode la plus "
"simple.\n"
"S'il n'y a pas de fichier à charger quand vous voulez utiliser le fontion "
"load_data (par exemple, le joueur commence un nouveau jeu), vous devez lever "
"une ``FileNotFoundError``.\n"
"\n"
"Les deux fonctions auront ces définitions :\n"
"\n"
".. code-block:: python\n"
"\n"
"    #sauvegarder les 4 entiers dans le fichier nommé filename\n"
"    def save_data(filename, life, mana, position_x, position_y)\n"
"\n"
"    #retourne un tuple contenant les valeurs (life, mana, position_x et "
"position_y précédemment sauvegardées\n"
"    def load_data(filename)"

#: LoadSaveGame/src/TestLoadSave.py:17 LoadSaveGame/src/TestLoadSave.py:29
#: LoadSaveGame/src/TestLoadSave.py:38
msgid ""
"You don't even create a file... This is a bit annoying for a saving function"
msgstr ""
"Vous ne créez même pas de fichier... C'est un peu embêtant pour enregistrer des "
"informations."

#: LoadSaveGame/src/TestLoadSave.py:22
msgid ""
"the player can't start a new game, and is very sad... Check that the file exist"
msgstr ""
"Le joueur ne peut pas commencer de nouvelle partie et il est très déçu... "
"Vérifiez que ce fichier existe"

#: LoadSaveGame/src/TestLoadSave.py:31 LoadSaveGame/src/TestLoadSave.py:40
msgid "The player loaded the wrong value."
msgstr "Le joueur a chargé la mauvaise valeur"

#. context
#: Max/task.yaml
msgid ""
"The method ``maximum(lst)`` returns the maximum of the elements contained in "
"the list ``lst``.\n"
"\n"
"The value ``None`` is returned if the list ``lst`` is empty.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"La méthode ``maximum(lst)`` retourne le maximum  des éléments contenus dans la "
"liste ``lst``.\n"
"\n"
"La valeur ``None`` est retournée si la liste ``lst`` est vide.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Max/task.yaml
msgid "Session 4: Maximum"
msgstr "Session 4 : Maximum"

#. name, q1, header
#: Max/task.yaml
msgid "Implement the function ``maximum(lst)`` in Python."
msgstr "Implémentez la fonction ``maximum(lst)`` en Python."

#: Max/src/TestMax.py:17
msgid "The maximum of {} is {} and you returned {}."
msgstr "Le maximum de {} est {} et vous avez retourné {}."

#. context
#: Median/task.yaml
msgid ""
"Suppose the variables ``a``, ``b`` and ``c`` contain a natural number.\n"
"\n"
"Write a code fragment that assigns to the variable ``median`` the median value "
"of these numbers.\n"
"\n"
"As a reminder, the median of three values is the value such that there is "
"exactly one value lower than (or equal to) it and one value higher than (or "
"equal to) it.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Supposez que les variables ``a``, ``b`` et ``c`` contiennent un nombre "
"naturel.\n"
"\n"
"Écrivez un fragment de code qui assigne à la variable ``median`` la valeur "
"médiane de ces nombres.\n"
"\n"
"Pour rappel, la médiane de trois valeurs est la valeur telle qu'il y a "
"exactement une valeur inférieure (ou égale) et une valeur supérieure (ou égale) "
"à cette valeur.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Median/task.yaml
msgid "Session 2: Median"
msgstr "Session 2 : Médiane"

#. name, q1, header
#: Median/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    a = ... #variable to evaluate\n"
"    b = ... #variable to evaluate\n"
"    c = ... #variable to evaluate\n"
"    median = ... #store in this variable the median of the three variables"
msgstr ""
".. code-block:: python\n"
"\n"
"    a = ... #variable à évaluer\n"
"    b = ... #variable à évaluer\n"
"    c = ... #variable à évaluer\n"
"    median = ... #enregistrez dans cette variable la médiane des trois variables"

#: Median/src/TestMedian.py:17
msgid "The median of {} is {} and you returned {}."
msgstr "La médiane de {} est {} et vous avez retourné {}."

#. context
#: Memoization/task.yaml
msgid ""
"Memoization refers to remembering results of method calls based on the method "
"inputs and then returning the remembered result rather than computing the "
"result again. You can think of it as a cache for method results.\n"
"\n"
"The use of this practice will enable you to boost the speed of yout programs "
"when you need to call a function with the same parameters multiple times.\n"
"\n"
"You will now implement a function that will store the calls of a function in a "
"dedicated dictionnary and use it in later calls.\n"
"\n"
"Note that besides the ``memoization`` function, you should also implement the "
"methods ``factorial`` and ``fibonacci`` able to make use of the memoization "
"principle.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"La memoization désigne le rappel de résultats d'appels de méthode basé sur les "
"entrées de la méthode et en retournant le résultat remémoré plutôt que de le "
"calculer à nouveau. Vous pouvez voir ça comme un cache pour les résultats d'une "
"méthode.\n"
"\n"
"L'utilisation de cette pratique vous permettra de booster la vitesse de vos "
"programmes quand vous aurez besoin d'appeler une fonction avec les mêmes "
"paramètres plusieurs fois.\n"
"\n"
"Vous allez implémenter une fonction qui enregistrera les appels d'une fonction "
"dans un dictionnaire dédié à ça et vous l'utiliserez plus tard.\n"
"\n"
"Notez qu'en plus de la fonction ``memoization``, vous devrez aussi implémenter "
"les méthodes ``factorial`` et ``fibonacci`` capables d'utiliser le principe de "
"memoization.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Memoization/task.yaml
msgid "Session 8: Memoization"
msgstr "Session 8 : Memoization"

#. name, q1, name
#: Memoization/task.yaml
msgid "Memoization implementation"
msgstr "Implémentation de memoization"

#. name, q1, header
#: Memoization/task.yaml
msgid ""
"Implement the function ``memoization(fun, n)`` in Python.\n"
"\n"
"With ``fun`` as the function on which the memoization will be used and ``n`` "
"the argument of the function.\n"
"\n"
"A dictionnary ``mapping`` is provided and should be used to map each function "
"to its corresponding dictionnary.\n"
"\n"
"Note that the dictionaries have not yet enough entries to pass the tests.\n"
"\n"
".. code-block:: python\n"
"\n"
"    mapping = {fibonacci: fibo, factorial: fact, ...}"
msgstr ""
"Implémentez la fonction ``memoization(fun, n)`` en Python.\n"
"\n"
"Avec ``fun`` comme fonction sur laquelle la memoization sera utilisée et ``n`` "
"l'argument de la fonction.\n"
"\n"
"Un dictionnaire ``mapping`` est fourni et devrait être utilisé pour associer "
"chaque fonction avec le dictionnaire correspondant.\n"
"\n"
"Notez que les dictionnaires n'ont pas encore assez d'entrées pour passer les "
"tests.\n"
"\n"
".. code-block:: python\n"
"\n"
"    mapping = {fibonacci: fibo, factorial: fact, ...}"

#. name, q2, name
#: Memoization/task.yaml
msgid "Fibonacci implementation"
msgstr "Implémentation de Fibonacci"

#. name, q2, header
#: Memoization/task.yaml
msgid ""
"Implement a function ``fibonacci(n)`` in Python which will be used by and use  "
"``memoization``."
msgstr ""
"Implémentez une fonction``fibonacci(n)`` en Python qui va être utilisée par et "
"pour la ``memoization``."

#. name, q3, name
#: Memoization/task.yaml
msgid "Factorial implementation"
msgstr "Implémentation de la factorielle"

#. name, q3, header
#: Memoization/task.yaml
msgid ""
"Implement a function ``factorial(n)`` in Python which will be used by and use "
"``memoization``."
msgstr ""
"Implémentez une fonction ``factorial(n)`` en Python qui utilisera et sera "
"utilisé par la ``memoization``."

#: Memoization/src/TestMemoization.py:25
msgid ""
"The sum of the {}th first numbers is {} and you returned {}. Your memoization "
"algorithm seem to not support other functions."
msgstr ""
"La somme de {} premiers nombres est {} et vous avez retourné {}. Votre "
"algorithme de memoization semble ne pas supporter les autres fonctions."

#: Memoization/src/TestMemoization.py:42
msgid "The factorial of {} is {} and you returned {}."
msgstr "La factorielle de {} est {} et vous avez retourné {}."

#: Memoization/src/TestMemoization.py:48
msgid "It seems that you didn't use the memoization properly."
msgstr "Il semblerait que vous n'ayez pas utilisé la memoization comme il faut."

#. context
#: MergeList/task.yaml
msgid ""
"You are part of the organisation of the **5 and 10 miles** in Louvain-la-Neuve. "
"But the system went down just before the start.\n"
"\n"
"There were two student to take note of the arrival of the runners. Happily, "
"there were two lines to count, your job is to get one list of the two, to have "
"a general ranking.\n"
"\n"
"The lists you'll receive are a succession of ``['name', time]`` with the time "
"in increasing order. Create a fonction ``merge(first_list, second_list)`` that "
"will return one list wich has the elements of the 2 lists in order.\n"
"\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Vous faites partie de l'organisation des **5 et 10 miles** de Louvain-la-Neuve. "
"Mais le système est tombé en panne juste avant le départ.\n"
"\n"
"Il y avait deux étudiants pour prendre note des arrivées des coureurs. "
"Heureusement, il n'y avait que deux lignes à compter. Votre job consiste à "
"faire une liste de ces deux listes pour avoir un classement général.\n"
"\n"
"Les listes que vous recevez sont une succession de ``['name', time]`` avec le "
"temps dans un ordre croissant. Créez une fonction ``merge(first_list, "
"second_list)`` qui retournera une liste qui a les éléments des deux listes dans "
"l'ordre.\n"
"\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: MergeList/task.yaml
msgid "Session 5: Lists merging"
msgstr "Session 5 : Fusion de listes"

#. name, q1, header
#: MergeList/task.yaml
msgid ""
"Provide the body of the following method\n"
"\n"
".. code-block:: python\n"
"\n"
"    def merge(first_list, second_list):"
msgstr ""
"Donnez le corps de la méthode suivante :\n"
"\n"
".. code-block:: python\n"
"\n"
"    def merge(first_list, second_list):"

#: MergeList/src/TestMergeList.py:13
msgid "The lists may be empty."
msgstr "Les listes peuvent être vides."

#: MergeList/src/TestMergeList.py:18
msgid "One list may be empty."
msgstr "Une liste peut être vide."

#: MergeList/src/TestMergeList.py:26
msgid "The two lists are {} and {} and you returned {}."
msgstr "Les deux listes sont {} et {} et vous avez retourné {}."

#. context
#: Min/task.yaml
msgid ""
"Suppose the variables ``a``, ``b`` and ``c`` contain a natural number.\n"
"\n"
"Write a code fragment that assigns to the variable ``min`` the smallest of "
"these numbers.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Supposez que les variables ``a``, ``b`` et ``c`` contiennent un nombre "
"naturel.\n"
"\n"
"Ecrire un fragment de  code qui assigne à la variable ``min`` le plus petit de "
"ces nombres.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Min/task.yaml
msgid "Session 2: Minimum"
msgstr "Session 2 : Minimum"

#. name, q1, header
#: Min/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    a = ... #variable to evaluate\n"
"    b = ... #variable to evaluate\n"
"    c = ... #variable to evaluate\n"
"    minima = ... #store in this variable the smallest of the three variables"
msgstr ""
".. code-block:: python\n"
"\n"
"    a = ... #variable à évaluer\n"
"    b = ... #variable à évaluer\n"
"    c = ... #variable à évaluer\n"
"    minima = ... #enregistrea dans cette variable la valeur la plus petite des "
"trois"

#: Min/src/TestMin.py:17
msgid "The minimum of {} is {} and you returned {}."
msgstr "Le minimum de {} est {} et vous avez retourné {}."

#. context
#: Morse/task.yaml
msgid ""
"After the third world war, the planet is now in a post-apocalyptic state. "
"You're one of the only survivors and are looking for a bit of fellowship. But "
"you can't exactly swipe tinder since most of the network is down.\n"
"\n"
"Fortunately your best friend is with you... Your computer (Yes, that's lame)! "
"With its help you'll be able to reach the rest of the world. Since you've got a "
"`Morse <https://en.wikipedia.org/wiki/Morse_code>`_ dictionnay stored on your "
"computer (Matt Damon did have an ASCII table in \"Alone on Mars\" it's not so "
"incongruous) you'll use it to translate your text and emit it through an old "
"citizen band radio.\n"
"\n"
"Note that if you should try to translate any unregistered character, you should "
"raise a ``TypeError`` exception.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Après la troisième guerre mondiale, la planète est laissée dans un état post-"
"apocalyptique. Vous êtes l'un des seuls survivants et vous cherchez un peu de "
"compagnie. Mais vous ne pouvez pas trop swiper sur Tinder vu que le réseau est "
"mort..\n"
"\n"
"Heureusement votre meilleur ami est avec vous... Votre ordinateur (oui, ça "
"craint!) Avec son aide, aide vous allez pouvoir entrer en contact avec le reste "
"du monde. Puisque vous avez un dictionnaire `Morse <https://fr.wikipedia.org/"
"wiki/Code_Morse_international>`_  enregistré sur votre machine (Matt Damon "
"avait bien une table ASCII avec lui dans \"Seul sur Mars\" , donc c'est pas si "
"absurde), vous allez l'utiliser pour traduire votre texte et l'émettre grâce à "
"une vieille radio.\n"
"\n"
"Notez que si vous devez essayer de traduire un caractère non-enregistré, vous "
"devez lever une exception ``TypeError``.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Morse/task.yaml
msgid "Session 7: Apocalypse - Morse translation"
msgstr "Session 7 : Apocalypse - Traduction en Morse"

#. name, q1, header
#: Morse/task.yaml
msgid ""
"Implement the function ``translate(data)`` in Python.\n"
"\n"
"With ``data`` as the string you wish to encode in Morse and a dictionnary "
"``morse`` usable to do the translations.\n"
"\n"
".. code-block:: python\n"
"\n"
"  morse = {\n"
"  \"A\" : \".-\",\n"
"  \"B\" : \"-...\",\n"
"  \"C\" : \"-.-.\",\n"
"  \"D\" : \"-..\",\n"
"  \"E\" : \".\",\n"
"  ...\n"
"  }"
msgstr ""
"Implémentez la fonction ``translate(data)`` en Python.\n"
"\n"
"Avec ``data`` comme chaine de caractère que vous voulez encoder en Morse et un "
"dictionnaire ``morse`` utile pour faire les traductions.\n"
"\n"
".. code-block:: python\n"
"\n"
"  morse = {\n"
"  \"A\" : \".-\",\n"
"  \"B\" : \"-...\",\n"
"  \"C\" : \"-.-.\",\n"
"  \"D\" : \"-..\",\n"
"  \"E\" : \".\",\n"
"  ...\n"
"  }"

#: Morse/src/TestMorse.py:24
msgid ""
"The representation of {} in Morse is {} and you returned {}. You did not use "
"the given dictionary."
msgstr ""
"La représentationde {} en Morse est {} et vous avez retourné {}. Vous n'avez "
"pas utilisé le dictionnaire donné."

#: Morse/src/TestMorse.py:31
msgid "The representation of {} in Morse is {} and you returned {}."
msgstr "La représentation de {} en Morse est {} et vous avez retourné {}."

#: Morse/src/TestMorse.py:39
msgid "{} should have raised an error due to lowercase elements but did not."
msgstr ""
"{} aurait du lever une exception à cause des lettres minuscules mais ne l'a pas "
"fait."

#. context
#: PatternExtraction-I/task.yaml
msgid ""
"`Anonymous <https://en.wikipedia.org/wiki/Anonymous_(group)>`_ just hired you "
"on the dark web for a dangerous task. They've been trying to crack a code for a "
"few days but didn't achieve anything... yet!\n"
"\n"
"They want you to build a function that will analyze each character in a given "
"code and determine its nature. The goal is simple, they intend to use the "
"information you will provide to look for a pattern in the code.\n"
"\n"
"Create a function ``extract(code)`` to provide information regarding the nature "
"of each element of the code:\n"
"\n"
"For example, when given the code ``'AeB7'`` as input the function should "
"produce ``'vowel-up vowel-low consonant-up number'`` as output. In general :\n"
"\n"
"* Add ``number`` to the answer if the element of the code is a digit.\n"
"* Add ``vowel`` to the answer if the element of the code is a vowel.\n"
"* Add ``consonant`` to the answer if the element of the code is a consonant.\n"
"* Follow it by ``-up`` if the vowel or consonant is in upper case.\n"
"* Follow it by ``-low`` if the vowel or consonant is in lower case.\n"
"\n"
"*Example*:\n"
"\n"
"With the code ``'65AeBc7'`` the function would output ``number number vowel-up "
"vowel-low consonant-up consonant-up number``.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"`Anonymous <https://fr.wikipedia.org/wiki/Anonymous_(collectif)>`_ vient de "
"vous engager sur le dark web pour une tâche dangereuse. Ils essayent de craquer "
"un code depuis quelques jours mais ne sont arrivés à rien... pour le moment!\n"
"\n"
"Ils veulent que vous construisiez une fonction qui analysera chaque caractère "
"dans un code donné et que vous déterminiez sa nature. Le but est simple : ils "
"ont l'intention d'utiliser les informations que vous leur fournirez pour "
"trouver un pattern dans le code.\n"
"\n"
"Créez une fonction ``extract(code)`` pour fournir des infos concernant la "
"nature de chaque élément du code :\n"
"\n"
"Par exemple, si le code ``'AeB7'`` est donné en entrée, la fonction devrait "
"produire ``'vowel-up vowel-low consonant-up number'`` comme sortie. En "
"général :\n"
"\n"
"* Ajoutez un ``number`` à la réponse si l'élément du code est un chiffre.\n"
"* Ajoutez un  ``vowel`` à la réponse si l'élément du code est une voyelle.\n"
"* Ajoutez un ``consonant`` à la réponse si l'élément du code est une consonne.\n"
"* Suivez cela par ``-up`` si la voyelle/consonne est en majuscule.\n"
"* Suivez cela par ``-low`` si la voyelle/consonne est en minuscule.\n"
"\n"
"*Exemple* :\n"
"\n"
"Avec le code ``'65AeBc7'`` la fonction devrait sortir ``number number vowel-up "
"vowel-low consonant-up consonant-up number``\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: PatternExtraction-I/task.yaml
msgid "Session 4: Anonymous - Information extraction"
msgstr "Session 4 - Anonymous - Extraction d'informations"

#. name, q1, header
#: PatternExtraction-I/task.yaml
msgid "Implement the function ``extract(code)`` in Python."
msgstr "Implémentez la fonction ``extract(code)`` en Python."

#: PatternExtraction-I/src/TestExtractor.py:33
msgid "The natures of {} is {} and you returned {}."
msgstr "La nature de {} est {} et vous avez retourné {}."

#. context
#: PatternExtraction-II/task.yaml
msgid ""
"Since your work was quite remarkable, `Anonymous <https://en.wikipedia.org/wiki/"
"Anonymous_(group)>`_ contacted you again with another dangerous task. They're "
"short-handed and would like you to treat the data you've been providing them.\n"
"\n"
"They want you to build a a function that will transform your precedent ouput "
"into something easier and quickier to process. It is up to you to transform the "
"data into an usable pattern!\n"
"\n"
"Create a function ``treatment(data)`` to transform the data you previously "
"returned into a pattern:\n"
"\n"
"Each suite of common elements should be indicated by the nature of the element "
"followed by '*' and its occurence without other elements in between.\n"
"\n"
"*Example*:\n"
"\n"
"With the code ``'66AeB7'`` your precedent function would output 'number number "
"vowel-up vowel-low consonant-up number'.\n"
"\n"
"With this output as input ``treatment`` would output the string 'number*2 vowel-"
"up*1 vowel-low*1 consonant-up*1 number*1'\n"
"\n"
"Do not hesitate to use as many submethods as you judge necessary.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Etant donné que votre travail était remarquable, `Anonymous <https://fr."
"wikipedia.org/wiki/Anonymous_(collectif)>`_ vous a à nouveau contacté avec une "
"autre tâches risquée. Ils manquent de main d'oeuvre et aimeraient que traitiez "
"les données que vous leur avez donné.\n"
"\n"
"Ils veulent que vous construisiez une fonction qui transformera votre "
"précédente sortie en quelque chose de plus simple et plus rapide à traiter. "
"C'est à vous de voir comment transformer l'information en un pattern "
"utilisable!\n"
"\n"
"Créez une fonction ``treatment(data)`` pour transformer l'information que vous "
"avez précédemment retourné en un pattern :\n"
"\n"
"Chaque suite d'éléments communs  devrait être indiqué par la nature de "
"l'élément suivi de '*' et le nombre d’occurrence sans autre éléments entre.\n"
"\n"
"*Exemple*:\n"
"\n"
"Avec le code ``'66AeB7'`` votre précédente fonction sortirait 'number number "
"vowel-up vowel-low consonant-up number'.\n"
"\n"
"Avec cette sortie en entrée votre nouvelle fonction ``treatment`` sortirait la "
"string suivante 'number*2 vowel-up*1 vowel-low*1 consonant-up*1 number*1'\n"
"\n"
"N'hésitez pas à utiliser autant de sous-méthodes que vous jugez nécessaires.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: PatternExtraction-II/task.yaml
msgid "Session 4: Anonymous - Information treatment"
msgstr "Session 4 : Anonymous - Traitement de l'information"

#. name, q1, header
#: PatternExtraction-II/task.yaml
msgid "Implement the function ``treatment(data)`` in Python."
msgstr "Implémentez la fonction ``treatment(data)`` en Python."

#: PatternExtraction-II/src/TestTreatment.py:38
msgid "The pattern of {} is {} and you returned {}."
msgstr "Le pattern de {} est {} et vous avez retourné {}."

#: PatternExtraction-II/src/TestTreatment.py:46
msgid "You should pay attention to the ending space of your answer."
msgstr "Vous devriez faire attention à l'espace de fin de votre réponse."

#. context
#: PatternExtraction-III/task.yaml
msgid ""
"`Anonymous <https://en.wikipedia.org/wiki/Anonymous_(group)>`_ was dazzled by "
"your work and decided to entrust you with the analysis of the whole bunch of "
"data they intercepted.\n"
"\n"
"With the help of the  two functions you already designed, you will transform "
"each line of the data into a pattern and extract the number of occurence it can "
"be found in the file.\n"
"\n"
"Create a function ``collect(data)`` to read the file extract the patterns and "
"store them in a dictionary with their occurrences.\n"
"\n"
"In case of error, just raise it.\n"
"\n"
"*Reminder*:\n"
"\n"
"- ``extract(code)``: gives the nature of each element of a string.\n"
"\n"
"- ``treatment(code)``: transform a suite of elements into a pattern.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"`Anonymous <https://fr.wikipedia.org/wiki/Anonymous_(collectif)>`_ a été épaté "
"par votre travail et a décidé de vous faire confiance pour l'analyse de toutes "
"les données qu'ils ont intercepté.\n"
"\n"
"Avec l'aide des deux fonctions que vous avez déjà créées, vous allez "
"transformer chaque ligne de données en un pattern et extraire le nombre "
"d’occurrences présentes dans le fichier.\n"
"\n"
"Créez une fonction ``collect(data)`` pour lire le fichier, extraire les "
"patterns et les enregistrer dans un dictionnaire avec leurs occurrences.\n"
"\n"
"S'il y a une erreur, levez une exception.\n"
"\n"
"*Rappel*:\n"
"\n"
"- ``extract(code)``: donne la nature de chaque élément d'une string.\n"
"\n"
"- ``treatment(code)``: transforme une suite d'éléments en un pattern.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: PatternExtraction-III/task.yaml
msgid "Session 7: Anonymous - Information collection"
msgstr "Session 7 : Anonymous -  Recolte d'informations"

#. name, q1, header
#: PatternExtraction-III/task.yaml
msgid "Implement the function ``collect(file)`` in Python."
msgstr "Implémentez la fonction ``collect(file)`` en Python."

#: PatternExtraction-III/src/TestCollection.py:30
msgid "The dictionary expected of the given file is {} and you returned {}."
msgstr ""
"Le dictionnaire attendu pour le fichier donné est {} et vous avez retourné {}."

#. context
#: Polynomial/task.yaml
msgid ""
"You want to use your computer to easily compute a polynomial with the following "
"form:\n"
":math:`y = a x^6 + b x^2 + c`. We give you the coefficients (stored in ``a``, "
"``b`` and ``c``)\n"
"and the variable ``x`` and ask you to put the value of the polynomial at "
"abscissa :math:`x` inside a variable named ``y``.\n"
"\n"
"*Note: there is a way to make this shortly in only one line of code.*\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Vous voulez utiliser votre ordinateur pour facilement calculer un polynôme de "
"la forme suivante : \n"
":math:`y = a x^6 + b x^2 + c`. Nous vous donnons les coefficients (enregistrer "
"dans ``a``, ``b`` et ``c``)\n"
"et la variable ``x`` et vous demandons de donner la valeur du polynôme en "
"abscisse :math:`x` dans une variable nommée ``y``.\n"
"\n"
"*Note: il est possible de faire ceci en une seule ligne de code.*\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Polynomial/task.yaml
msgid "Session 1: Polynomial"
msgstr "Session 1 : Polynôme"

#. name, q1, header
#: Polynomial/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"   y = ...  # Value of the polynomial at abscissa `x`"
msgstr ""
".. code-block:: python\n"
"\n"
"   y = ...  # valeur du polynôme en abscisse `x`"

#: Polynomial/src/TestPolynomial.py:22
msgid "With a={}, b={}, c={} and x={}, your code computes {} instead of {}."
msgstr "Avec a={}, b={}, c={} et x={}, votre code calcule {} à la place de {}."

#. context
#: Primes/task.yaml
msgid ""
"`The prime numbers <https://en.wikipedia.org/wiki/Prime_number>`_ , used by "
"mathematicians, are a set of numbers sharing a same property.\n"
"\n"
"A prime is a natural number greater than 1 that has no positive divisors other "
"than 1 and itself. A natural number greater than 1 that is not a prime number "
"is called a composite number.\n"
"\n"
"To calculate prime numbers you can use the principle of *Eratosthene's sieve*: "
"for each successive number, check if it is divisible by the lower prime numbers "
"already found. If it is not divisible by any, it is prime and can be added to "
"the list.\n"
"\n"
"Implement the function ``primes(max)`` that returns the list of all prime "
"numbers until ``max``.\n"
"If ``max`` is negative or zero, the empty list should be returned.\n"
"\n"
"To limit the complexity of your solution, decompose into auxiliary functions as "
"needed.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"`Les nombres premiers <https://fr.wikipedia.org/wiki/Nombre_premier>`_ , "
"utilisés par les mathématiciens, sont un ensemble de nombres partageant une "
"même propriété.\n"
"\n"
"Un nombre premier est un nombre naturel plus grand que 1 qui n'a aucun diviseur "
"positif en dehors de 1 et lui-même. Un nombre naturel plus grand que 1 qui "
"n'est pas premier est appelé un nombre composé.\n"
"\n"
"Pour calculer les nombres premiers, vous pouvez utiliser le principe de *Crible "
"d'Erathosthène* : pour chaque nombre successif, regardez s'il est divisible par "
"l'un des nombres premiers que vous avez déjà trouvé. S'il n'est divisible par "
"aucun, il est premier et peut être ajouté à la liste.\n"
"\n"
"Implémentez la fonction ``primes(max)`` qui retourne la liste de tous les "
"nombres premiers jusqu'à ``max``.\n"
"Si ``max`` est négatif ou zéro, une liste vide doit être retournée.\n"
"\n"
"Pour limiter la complexité de votre solution, décomposez la en plusieurs "
"fonctions auxiliaires.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Primes/task.yaml
msgid "Session 4: Prime numbers"
msgstr "Session 4 : Nombres premiers"

#. name, q1, header
#: Primes/task.yaml
msgid "Implement the function ``primes(max)`` in Python."
msgstr "Implémentez la fonction  ``primes(max)`` en Python."

#: Primes/src/TestPrimes.py:17
msgid "The prime numbers with a maximum value of {} is {} and you returned {}."
msgstr ""
"La liste des  nombres premiers avec une valeur maximale de {} est {} et vous "
"avez retourné {}."

#: Primes/src/TestPrimes.py:25 Primes/src/TestPrimes.py:33
msgid ""
"The prime numbers with a maximum value of {} is {} and you returned {}. \n"
" You should check the conditions to be a prime number."
msgstr ""
"La liste des nombres premiers avec une valeur maximale de {} est {} et vous "
"avez retourné {}.\n"
"Vous devriez vérifier les conditions pour être un nombre premier."

#. context
#: Quetelet/task.yaml
msgid ""
"The `Body mass index (BMI) <https://en.wikipedia.org/wiki/Body_mass_index>`_ or "
"Quetelet index, used by dieticians, is indicative of the condition of a "
"person.\n"
"\n"
"A normal person should have an index between 20 and 25. Below 20, she is "
"considered thin, above 25 overweight.\n"
"Beyond 30, the person is obese!\n"
"\n"
"This index is calculated as the ratio between a person's weight, expressed in "
"kg, and the square of the person's height, expressed in meters.\n"
"\n"
"Create a function ``quetelet(height, weight)`` to calculate a person's Quetelet "
"index and return ``thin`` string for a person with an index strictly less than "
"20, ``normal`` for a person whose index is between 20 and 25, ``overweight`` if "
"the index is strictly greater than 25 and less than or equal to 30 and "
"``obese`` when it is strictly greater than 30.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"`L'indice de masse corporelle (BMI) <https://fr.wikipedia.org/wiki/"
"Indice_de_masse_corporelle>`_ ou indice de Quételet, utilisé par les "
"diététiciens, est révélateur de la condition d'une personne.\n"
"\n"
"Un personne normale devrait avoir un indice se trouvant entre 20 et 25. En "
"dessous de 20, elle est considérée mince et au dessus de 25, elle est en "
"surpoids.\n"
"Au delà de  30, la personne est obèse!\n"
"\n"
"Cet indice est calculé comme le ratio entre le poids de la personne, exprimée "
"en kg, et le carré de la taille de la personne, exprimée en mètres.\n"
"\n"
"Créez une fonction ``quetelet(height, weight)`` qui calcule l'indice de "
"Quételet d'une personne et retourne ``thin`` pour les personnes avec un indice "
"strictement plus petits que 20, ``normal`` pour une personne dont l'indice est "
"entre 20 et 25, ``overweight`` si l'index est strictement plus grand que 25 et "
"moins que ou égal à 30 et ``obese`` quand l'indice est plus grand que 30.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Quetelet/task.yaml
msgid "Session 3: BMI index"
msgstr "Session 3 : Indice BMI"

#. name, q1, header
#: Quetelet/task.yaml
msgid "Implement the function ``quetelet(height, weight)`` in Python."
msgstr "Implémentez la fonction ``quetelet(height, weight)`` en Python."

#: Quetelet/src/TestQuetelet.py:23
msgid ""
"The quetelet index with a height of {} and a weight of {} is {} and you "
"returned {}. \n"
" You should watch the bounds of your conditions."
msgstr ""
"L'indice de Quételet avec une taille de {} et un poids de {} est {} et vous "
"avez retourné {}.\n"
"Vérifiez les bornes de vos conditions."

#: Quetelet/src/TestQuetelet.py:32
msgid ""
"The quetelet index with a height of {} and a weight of {} is {} and you "
"returned {}."
msgstr ""
"L'indice de Quételet avec une taille de {} et un poids de {} est {} et vous avez "
"retourné {}."

#. context
#: RecursiveFactorial/task.yaml
msgid ""
"In mathematics, the factorial of a strictly positive integer ``x``, noted :math:"
"`x!` is defined as the product of all strictly positive integers less than or "
"equal to ``x``. The factorial of 0 is defined as 1. Write a function that "
"computes the factorial of a given integer x.\n"
"\n"
"*Examples*:\n"
"\n"
"* :math:`5! = 5 × 4 × 3 × 2 × 1 = 120`\n"
"\n"
"* :math:`0! = 1`\n"
"\n"
"Note that is essentially the same question as one that was asked in the first "
"session, except that we now expect you to solve it differently. The use of "
"``while`` and ``for`` loops will be prohibited and you are expected to solve it "
"by writing a recursive function.\n"
"We also want you to return ``None`` whenever the factorial cannot be computed.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"En mathématiques, la factorielle d'un entier strictement positif ``x``, noté :"
"math:`x!` est défini comme le produit de tous les entiers strictement positifs "
"plus petits ou égaux à  ``x``. La factorielle de 0 est définie comme 1. Ecrivez "
"une fonction qui calcule la factorielle d'un entier donné x.\n"
"\n"
"*Exemples*:\n"
"\n"
"* :math:`5! = 5 × 4 × 3 × 2 × 1 = 120`\n"
"\n"
"* :math:`0! = 1`\n"
"\n"
"Notez que cette question est la même qu'une question de la première session "
"sauf qu'on s'attend à ce que vous la résolviez différemment maintenant. "
"L'utilisation de boucles ``while`` et ``for`` est interdite et  vous devez "
"utiliser une fonction récursive.\n"
"Nous voulons que vous retourniez  ``None`` quand la factorielle ne peut pas "
"être calculée..\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: RecursiveFactorial/task.yaml
msgid "Session 8: Factorial"
msgstr "Session 8 : Factorielle"

#. name, q1, header
#: RecursiveFactorial/task.yaml
msgid ""
"Provide the body of the following method:\n"
"\n"
".. code-block:: python\n"
"\n"
"    def factorial(x):"
msgstr ""
"Donnez le corps de la méthode suivante :\n"
"\n"
".. code-block:: python\n"
"\n"
"    def factorial(x):"

#: RecursiveFactorial/src/TestFactorial.py:25 RecursiveSum/src/TestSum.py:25
msgid "You did not use recursion in your algorithm "
msgstr "Vous n'avez pas utilisé la récursion dans votre algorithme"

#: RecursiveFactorial/src/TestFactorial.py:45
msgid "The factorial of a negative integer {} should be None and you returned {}."
msgstr ""
"La factorielle d'un entier négatif {} devrait être None et vous avez retourné "
"{}."

#. context
#: RecursiveFibonacci/task.yaml
msgid ""
"In mathematics, the `Fibonacci series <https://en.wikipedia.org/wiki/"
"Fibonacci_number>`_ are the numbers in the following sequence of integers, "
"which are characterized by the fact that every number after the first two is "
"the sum of the two preceding ones:\n"
"\n"
"Example: :math:`0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...`\n"
"\n"
"A very simple algorithm would be:\n"
"$$\\\\text{F}_0 = 0$$\n"
"$$\\\\text{F}_1 = 1$$\n"
"$$\\\\text{F}_n = \\\\text{F}_{n-1} + \\\\text{F}_{n-2}$$\n"
"\n"
"Adapt the function which you implemented in session 3 to create a recursive "
"solution to this exercise. You should also return ``None`` in the case of an "
"incongruous input.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"En mathématiques, la `suite de Fibonacci  <https://fr.wikipedia.org/wiki/"
"Suite_de_Fibonacci>`_ sont les nombres dans la séquence suivante d'entiers, qui "
"est caractérisée par le fait que chaque nombre après les deux premiers est égal "
"à la somme des deux précédents :\n"
"\n"
"Exemple: :math:`0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...`\n"
"\n"
"Un algorithme très simple serait :\n"
"$$\\\\text{F}_0 = 0$$\n"
"$$\\\\text{F}_1 = 1$$\n"
"$$\\\\text{F}_n = \\\\text{F}_{n-1} + \\\\text{F}_{n-2}$$\n"
"\n"
"Adaptez la fonction que vous avez implémenté dans la session 3 pour créer une "
"solution récursive à cet exercice. Vous devez retourné ``None`` dans le cas "
"d'une mauvaise entrée.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: RecursiveFibonacci/task.yaml
msgid "Session 8: Fibonacci"
msgstr "Session 8 : Fibonacci"

#. name, q1, header
#: RecursiveFibonacci/task.yaml
msgid ""
"Provide the body of the following method:\n"
"\n"
".. code-block:: python\n"
"\n"
"    def fibo(x):"
msgstr ""
"Donnez le corps de la méthode suivante :\n"
"\n"
".. code-block:: python\n"
"\n"
"    def fibo(x):"

#: RecursiveFibonacci/src/TestFibonacci.py:26
msgid "You did not use recursion in your algorithm."
msgstr "Vous n'avez pas utilisé la récursion dans votre algorithme."

#: RecursiveFibonacci/src/TestFibonacci.py:49
#: RecursiveFibonacci/src/TestFibonacci.py:53
msgid ""
"There can not be a number in a negative place in a sequence, you should have "
"returned None."
msgstr ""
"Il ne peut pas y avoir un nombre à une place négative dans une séquence, vous "
"auriez du retourner None."

#. context
#: RecursiveSum/task.yaml
msgid ""
"The method ``sum(list)`` returns the sum of the elements contained in "
"``list``.\n"
"\n"
"Example: the sum of :math:`[1, 2, 3]` is :math:`6`\n"
"\n"
"Note that your algorithm should be able to compute the sum even\n"
"when the list ``list`` contains malicious elements (not numbers).\n"
"\n"
"Note that this question is the same question as one that was asked in the fifth "
"session, except that we now expect you to solve it in a recursive way. The use "
"of ``while`` and ``for`` loops will be prohibited to ensure you provide a "
"recursive solution.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"La méthode ``sum(list)`` retourne la somme des éléments contenu dans la liste "
"``list``.\n"
"\n"
"Exemple: la somme de :math:`[1, 2, 3]` est :math:`6`\n"
"\n"
"Notez que votre algorithme devrait être capable de calculer la somme même "
"quand la liste ``list`` contient des éléments malicieux (pas des nombres).\n"
"\n"
"Notez aussi que cette question est la même  qu'une question demandée dans la "
"session 5 sauf que vous devez la résoudre de manière récursive.  L'utilisation "
"de boucles ``while`` et ``for`` est interdite pour s'assurer que votre solution "
"est bien récursive.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: RecursiveSum/task.yaml
msgid "Session 8: Sum"
msgstr "Session 8 : Somme"

#. name, q1, header
#: RecursiveSum/task.yaml Sum/task.yaml
msgid ""
"Provide the body of the following method:\n"
"\n"
".. code-block:: python\n"
"\n"
"    def sum(list):"
msgstr ""
"Donnez le corps de la méthode suivante :\n"
"\n"
".. code-block:: python\n"
"\n"
"    def sum(list):"

#: RecursiveSum/src/TestSum.py:32 Sum/src/TestSum.py:14
msgid "The sum of {} is {} and you returned {}."
msgstr "La somme de {} est {} et vous avez retourné {}."

#: RecursiveSum/src/TestSum.py:40 Sum/src/TestSum.py:22
msgid "The sum of {} is {} and you returned {}. Do you handle floats?"
msgstr ""
"La somme de {} est {} et vous avez retourné {}. Gérez-vous l'utilisation des "
"floats?"

#: RecursiveSum/src/TestSum.py:48
msgid "The sum list provided was {}. Did you take care of everything? "
msgstr "La liste à sommer était {}. Avez-vous bien tout pris en compte?"

#: RecursiveSum/src/TestSum.py:60 Sum/src/TestSum.py:42
msgid "When the list is empty you should return 0."
msgstr "Quand la liste est vide, vous devriez retourner 0."

#. context
#: Remainder/task.yaml
msgid ""
"Suppose the variables ``a`` and ``b`` contain a natural number.\n"
"\n"
"Write a code fragment that assigns the remainder of their division in the "
"variable ``rest``.\n"
"\n"
"To implement your solution, use only a ``while`` loop and subtractions (the "
"simple solution ``rest = a % b`` is not allowed; we want to test if you are capable "
"of implementing such an operation yourself).\n"
"\n"
"Note that you should not allow division by 0 and assign the value ``None`` to "
"``rest`` if this would occur.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Supposez que les variables ``a`` et ``b`` contiennent un nombre naturel.\n"
"\n"
"Ecrivez un fragment de code qui assigne le reste de leur division à la variable "
"``rest``.\n"
"\n"
"Pour implémenter votre solution, utilisez uniquement une boucle ``while`` et "
"des soustractions (la solution la plus simple ``rest = a % b`` n'est pas acceptée; "
"nous voulons tester si vous êtes capable d'implémenter une telle opération par "
"vous-même).\n"
"\n"
"Notez que vous ne devez pas permettre la division par 0 et vous devez assigner "
"la la valeur ``None`` à ``rest`` dans un tel cas.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Remainder/task.yaml
msgid "Session 2: Remainder of an integer division"
msgstr "Session 2 : Reste d'une division d'entiers"

#. name, q1, header
#: Remainder/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    a = ... #variable to evaluate\n"
"    b = ... #variable to evaluate\n"
"    rest = ... #store in this variable the remainder of the division a/b"
msgstr ""
".. code-block:: python\n"
"\n"
"    a = ... #variable à évaluer\n"
"    b = ... #variable à évaluer\n"
"    rest = ... #enregistrez dans cette variable le reste de la division a/b"

#: Remainder/src/TestRemainder.py:28 Remainder/src/TestRemainder.py:37
msgid "The remainder of the entire division {} / {} is {} and you returned {}."
msgstr "Le reste de la division entière {} / {} est {} et vous avez retourné {}."

#: Remainder/src/TestRemainder.py:46
msgid "The remainder of the entire division {} / {} is None and you returned {}."
msgstr ""
"Le reste de la division entière {} / {} est None et vous avez retourné {}."

#. name
#: SessTest_QCM/task.yaml
msgid "Session Test: QCM"
msgstr "Session Test : QCM"

#. name, qcm1, name
#: SessTest_QCM/task.yaml
msgid "Variable assignment"
msgstr "Assignement d'une variable"

#. name, qcm1, header
#: SessTest_QCM/task.yaml
msgid "Pick the piece of code which will print 42."
msgstr "Choisissez le code qui va afficher 42."

#. name, qcm1, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    my var1 = 7\n"
"    my var2 = 6\n"
"    print(my var1 * my var2)"
msgstr ""
".. code-block:: python\n"
"\n"
"    my var1 = 7\n"
"    my var2 = 6\n"
"    print(my var1 * my var2)"

#. name, qcm1, feedback
#: SessTest_QCM/task.yaml
msgid ""
"In the Python language, whitespace in a variable's name is not allowed.\n"
"\n"
"You can compensate with:\n"
"\n"
"-CamelCasing: myVar\n"
"\n"
"-Underscores: my_var (prefered Python naming conventions)"
msgstr ""
"Dans le langage Python,  les espaces dans un nom de variable ne sont pas "
"acceptés.\n"
"\n"
"Vous pouvez le remplacer par :\n"
"\n"
"- l'utilisation du CamelCase : myVar\n"
"\n"
"- l'utilisation des underscores : my_var (le plus souvent utilisé en Python par "
"convention)"

#. name, qcm1, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    myVar1 = 35\n"
"    myvar2 = 7\n"
"    print(myvar1 + myVar2)"
msgstr ""
".. code-block:: python\n"
"\n"
"    myVar1 = 35\n"
"    myvar2 = 7\n"
"    print(myvar1 + myVar2)"

#. name, qcm1, feedback
#: SessTest_QCM/task.yaml
msgid ""
"You should pay attention to the name of your variable since Python is case-"
"sensitive."
msgstr ""
"Vous devriez faire attention au nom de votre variable car Python est case-"
"sensitive (il fait la différence entre les majuscules et les minuscules). "

#. name, qcm1, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    myVar1 = '4'\n"
"    myvar2 = '2'\n"
"    print(myVar1 + myvar2)"
msgstr ""
".. code-block:: python\n"
"\n"
"    myVar1 = '4'\n"
"    myvar2 = '2'\n"
"    print(myVar1 + myvar2)"

#. name, qcm2, name
#. name, qcm3, name
#: SessTest_QCM/task.yaml
msgid "While loops"
msgstr "Boucles while"

#. name, qcm2, header
#: SessTest_QCM/task.yaml
msgid ""
"Which of the following code fragments calculates the sum of the first ``n`` "
"positive integers?"
msgstr ""
"Lequel des fragments de code suivants calcule la somme des ``n`` premiers "
"entiers positifs ?"

#. name, qcm2, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    i = 0\n"
"    sum = 0\n"
"    while i < n:\n"
"        sum = sum+i\n"
"        i+=1"
msgstr ""
".. code-block:: python\n"
"\n"
"    i = 0\n"
"    sum = 0\n"
"    while i < n:\n"
"        sum = sum+i\n"
"        i+=1"

#. name, qcm2, feedback
#: SessTest_QCM/task.yaml
msgid "The correct answer is not attained. Didn't you forget an iteration?"
msgstr "La bonne réponse n'est pas atteinte. Avez-vous oublié une itération ?"

#. name, qcm2, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    i = n\n"
"    sum = 0\n"
"    while i <= n:\n"
"        sum = sum+i\n"
"        i-=1"
msgstr ""
".. code-block:: python\n"
"\n"
"    i = n\n"
"    sum = 0\n"
"    while i <= n:\n"
"        sum = sum+i\n"
"        i-=1"

#. name, qcm2, feedback
#: SessTest_QCM/task.yaml
msgid "Your loop will never end. Check your condition."
msgstr "Votre boucle ne se terminera jamais. Vérifiez vos conditions."

#. name, qcm2, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"        i = 1\n"
"        sum = 0\n"
"    while i < n:\n"
"        sum = sum+i\n"
"        i+=1"
msgstr ""
".. code-block:: python\n"
"\n"
"        i = 1\n"
"        sum = 0\n"
"    while i < n:\n"
"        sum = sum+i\n"
"        i+=1"

#. name, qcm2, feedback
#: SessTest_QCM/task.yaml
msgid ""
"The indentation is an extremelly important part of coding in Python since it "
"allows to know in which block the statement is executed. Are ``i`` and ``sum`` "
"supposed to be assigned in a block before the loop?"
msgstr ""
"L'indentation est une part extrêmement importante de la programmation en Python "
"puisque ça permet de savoir dans quel bloc l'expression est exécutée. Est-ce "
"que ``i`` et ``sum`` sont supposés être assignés dans un bloc avant la boucle ?"

#. name, qcm2, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    i = 1\n"
"    sum = 0\n"
"    while i <= n:\n"
"        sum = sum+i\n"
"        i+=1"
msgstr ""
".. code-block:: python\n"
"\n"
"    i = 1\n"
"    sum = 0\n"
"    while i <= n:\n"
"        sum = sum+i\n"
"        i+=1"

#. name, qcm3, header
#: SessTest_QCM/task.yaml
msgid ""
"``While`` loops are useful when we need to repeat similar tasks multiple times. "
"In arithmetic, the factorial of a positive integer (``n``) and greater than `1` "
"is defined as the product of all integers less than or equal to ``n``. The "
"factorial of ``n`` is denoted as :math:`n!`. Thus :math:`4! = 24`. Among the "
"``while`` loops below, which one calculates correctly :math:`n!` ?"
msgstr ""
"Les boucles ``while`` sont utiles quand on a besoin de répéter une tâche "
"similaire plusieurs fois. En arithmétique, la factorielle d'un entier positif "
"(``n``)  et plus grand que `1` est défini comme le produit de tous les entiers "
"plus petits que ou égaux à ``n``. La factorielle de ``n`` est dénotée comme :"
"math:`n!`. Donc :math:`4! = 24`. Parmi les boucles ``while`` ci-dessous, "
"laquelle calcule correctement :math:`n!` ?"

#. name, qcm3, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    n = 7\n"
"    fact = n\n"
"    count = n-1\n"
"    while count > 0:\n"
"        fact = fact * count\n"
"        count+=1"
msgstr ""
".. code-block:: python\n"
"\n"
"    n = 7\n"
"    fact = n\n"
"    count = n-1\n"
"    while count > 0:\n"
"        fact = fact * count\n"
"        count+=1"

#. name, qcm3, feedback
#: SessTest_QCM/task.yaml
msgid "Will your loop stop in other case than `1`?"
msgstr "Est-ce que votre boucle s'arrête dans d'autres cas que  `1` ?"

#. name, qcm3, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    n = 7\n"
"    fact = 1\n"
"    count = 2\n"
"    while count < n:\n"
"        fact = fact * count\n"
"        count+=1"
msgstr ""
".. code-block:: python\n"
"\n"
"    n = 7\n"
"    fact = 1\n"
"    count = 2\n"
"    while count < n:\n"
"        fact = fact * count\n"
"        count+=1"

#. name, qcm3, feedback
#: SessTest_QCM/task.yaml
msgid "Pretty sure you calculated the factorial of `n-1` ."
msgstr "Vous avez très probablement calculé la factorielle de  `n-1`."

#. name, qcm3, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    n = 7\n"
"    fact = 1\n"
"    count = n\n"
"    while count >= 2:\n"
"        fact = fact * count\n"
"        count-=1"
msgstr ""
".. code-block:: python\n"
"\n"
"    n = 7\n"
"    fact = 1\n"
"    count = n\n"
"    while count >= 2:\n"
"        fact = fact * count\n"
"        count-=1"

#. name, qcm4, name
#: SessTest_QCM/task.yaml
msgid "Python syntax"
msgstr "Syntaxe python"

#. name, qcm4, header
#: SessTest_QCM/task.yaml
msgid ""
"Which of the following program fragments respects the syntax and semantics of "
"the language?"
msgstr ""
"Lequel des fragments de programme suivants respecte la syntaxe et la sémantique "
"du langage ?"

#. name, qcm4, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    >>> x = 4\n"
"    >>> y = 'test'\n"
"    >>> z = 8\n"
"    >>>     print(x)\n"
msgstr ""
".. code-block:: python\n"
"\n"
"    >>> x = 4\n"
"    >>> y = 'test'\n"
"    >>> z = 8\n"
"    >>>     print(x)\n"

#. name, qcm4, feedback
#: SessTest_QCM/task.yaml
msgid ""
"The indentation is an extremelly important part of coding in Python since it "
"allows to know in which block the statement is executed. In this case your "
"program will meet an unexpected indentation."
msgstr ""
"L'indentation est une part extrêmement importante de la programmation en Python "
"puisque ça permet de savoir dans quel bloc l'expression est exécutée. Ici, "
"votre programme va rencontrer une indentation inattendue."

#. name, qcm4, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    >>> x = 4\n"
"    >>> x = 'test'\n"
"    >>> z = 8\n"
"    >>> print(x)\n"
"    4"
msgstr ""
".. code-block:: python\n"
"\n"
"    >>> x = 4\n"
"    >>> x = 'test'\n"
"    >>> z = 8\n"
"    >>> print(x)\n"
"    4"

#. name, qcm4, feedback
#: SessTest_QCM/task.yaml
msgid ""
"Since there is no type in Python a variable can contain as well an integer as "
"text.\n"
"\n"
"test would be print with this code fragment."
msgstr ""
"Comme il n'y a pas de types en Python, une variable peut contenir autant un "
"entier qu'un texte.\n"
"\n"
"test serait affiché avec ce fragment de code."

#. name, qcm4, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    >>> x = 4\n"
"    >>> y = 'test'\n"
"    >>> z = 8\n"
"    >>> print(x)\n"
"    4"
msgstr ""
".. code-block:: python\n"
"\n"
"    >>> x = 4\n"
"    >>> y = 'test'\n"
"    >>> z = 8\n"
"    >>> print(x)\n"
"    4"

#. name, qcm5, name
#: SessTest_QCM/task.yaml
msgid "Comments in Python"
msgstr "Commentaires en Python"

#. name, qcm5, header
#: SessTest_QCM/task.yaml
msgid "Check the snippets which contain a valid comment."
msgstr "Sélectionnez l'extrait qui contient des commentaires valides."

#. name, qcm5, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    for i in range(0,5):\n"
"        print(\"#This is a comment\")"
msgstr ""
".. code-block:: python\n"
"\n"
"    for i in range(0,5):\n"
"        print(\"#This is a comment\")"

#. name, qcm5, feedback
#: SessTest_QCM/task.yaml
msgid "The comment is enclosed in a string."
msgstr "Le commentaire est inclus dans une string."

#. name, qcm5, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    for i in range(0,5):\n"
"        print(i) # This is a comment"
msgstr ""
".. code-block:: python\n"
"\n"
"    for i in range(0,5):\n"
"        print(i) # This is a comment"

#. name, qcm5, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    \"\"\" This is a comment \"\"\"\n"
"    for i in range(0,5):\n"
"        print(i)"
msgstr ""
".. code-block:: python\n"
"\n"
"    \"\"\" This is a comment \"\"\"\n"
"    for i in range(0,5):\n"
"        print(i)"

#. name, qcm5, feedback
#: SessTest_QCM/task.yaml
msgid ""
"It is correct BUT don't use triple-quotes; this is for documentation strings "
"not block comments, although it has a similar effect it is best practice to use "
"``#``"
msgstr ""
"C'est correct MAIS n'utilisez pas les triples guillemets; c'est pour la "
"documentation pas pour les simples commentaires de blocs, même si cela à les "
"mêmes effets c'est une meilleure pratique d'utiliser le ``#``"

#. name, qcm6, name
#: SessTest_QCM/task.yaml
msgid "Python naming conventions"
msgstr "Conventions de nommage en Python"

#. name, qcm6, header
#: SessTest_QCM/task.yaml
msgid ""
"Which of the following statements are respecting the Python naming conventions?"
msgstr ""
"Laquelle des expressions suivantes respecte les conventions de nommages de "
"Python ?"

#. name, qcm6, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    myVariable = 'This is lower camel case'"
msgstr ""
".. code-block:: python\n"
"\n"
"    myVariable = 'This is lower camel case'"

#. name, qcm6, feedback
#: SessTest_QCM/task.yaml
msgid ""
"Snake case is usually prefered regarding variables names.\n"
"\n"
"Although lower camel case is allowed for functions names in Python (where "
"that's already the prevailing style)."
msgstr ""
"Le snake case est souvent préféré pour les noms de variables.\n"
"\n"
"Cependant le lower camel case est permis pour les noms de fonctions en Python "
"(où c'est le style le plus répandu)."

#. name, qcm6, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    my_variable = 'This is snake case'"
msgstr ""
".. code-block:: python\n"
"\n"
"    my_variable = 'This is snake case'"

#. name, qcm6, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    MY_VARIABLE = 'This is screaming snake case'"
msgstr ""
".. code-block:: python\n"
"\n"
"    MY_VARIABLE = 'This is screaming snake case'"

#. name, qcm6, feedback
#: SessTest_QCM/task.yaml
msgid ""
"Snake case is usually prefered regarding variables names.\n"
"\n"
"Although screaming snake case is used for constant in Python."
msgstr ""
"Le snake case est généralement préféré pour les noms de variables.\n"
"\n"
"Cependant le screaming snake case est utilisé pour les constantes en Python."

#. name, qcm6, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    MyVariable = 'This is upper camel case'"
msgstr ""
".. code-block:: python\n"
"\n"
"    MyVariable = 'This is upper camel case'"

#. name, qcm6, feedback
#: SessTest_QCM/task.yaml
msgid ""
"Snake case is usually prefered regarding variables names.\n"
"\n"
"Although upper camel case is used for class names in Python."
msgstr ""
"Le snake case est généralement préféré en ce qui concerne les noms de "
"variables.\n"
"\n"
"Cependant l'upper camel case est utilisé pour les noms de classe en Python."

#. name, qcm7, name
#: SessTest_QCM/task.yaml
msgid "Exchange variables values"
msgstr "Echanger les valeurs de variables"

#. name, qcm7, header
#: SessTest_QCM/task.yaml
msgid ""
"It is often useful to be able to swap values between variables. Consider the "
"following variables:\n"
"\n"
".. code-block:: python\n"
"\n"
"    a = 42\n"
"    b = 41\n"
"\n"
"Which of following code fragments swap the values correctly?"
msgstr ""
"C'est souvent utile de pouvoir échanger les valeurs entre les variables. "
"Considérez les variables suivantes :\n"
"\n"
".. code-block:: python\n"
"\n"
"    a = 42\n"
"    b = 41\n"
"\n"
"Lequel des fragments de code suivants échange les valeurs correctement ?"

#. name, qcm7, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    b = a\n"
"    a = b"
msgstr ""
".. code-block:: python\n"
"\n"
"    b = a\n"
"    a = b"

#. name, qcm7, feedback
#: SessTest_QCM/task.yaml
msgid ""
"By doing it this way you will lose the value contained in ``b`` and the value "
"of ``a`` will be stored in the 2 variables."
msgstr ""
"En faisant comme cela, vous allez perdre la valeur contenue dans ``b`` et la "
"valeur de ``a`` sera enregistrée dans 2 variables."

#. name, qcm7, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    c = b\n"
"    b = a\n"
"    a = c"
msgstr ""
".. code-block:: python\n"
"\n"
"    c = b\n"
"    b = a\n"
"    a = c"

#. name, qcm7, feedback
#: SessTest_QCM/task.yaml
msgid ""
"This would work but it is more efficient and clear to do it with this little "
"trick:\n"
"\n"
".. code-block:: python\n"
"\n"
"    a,b = b,a"
msgstr ""
"Ceci fonctionnerait mais ce serait plus efficace et clair de le faire avec "
"cette petite astuce :\n"
"\n"
".. code-block:: python\n"
"\n"
"    a,b = b,a"

#. name, qcm7, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    a,b = b,a"
msgstr ""
".. code-block:: python\n"
"\n"
"    a,b = b,a"

#. name, qcm8, name
#: SessTest_QCM/task.yaml
msgid "Calculate min"
msgstr "Calcul de minimum"

#. name, qcm8, header
#: SessTest_QCM/task.yaml
msgid ""
"Consider a program that manipulates two variables: ``a`` and ``b`` . Among the "
"code fragments below, which one correctly stores in the variable ``min`` the "
"minimum of the contents of the variables ``a`` and ``b`` ?"
msgstr ""
"Considérez un programme qui manipule deux variables : ``a`` et ``b`` . Parmi "
"les fragments de code ci-dessous, lequel enregistre correctement dans la "
"variable ``min`` le minimum du contenu des variables ``a`` et ``b`` ? "

#. name, qcm8, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    if a > b:\n"
"        min = a\n"
"    else:\n"
"        min = b\n"
msgstr ""
".. code-block:: python\n"
"\n"
"    if a > b:\n"
"        min = a\n"
"    else:\n"
"        min = b\n"

#. name, qcm8, feedback
#: SessTest_QCM/task.yaml
msgid "The maximum is stored in min instead of the minimum with this code."
msgstr "Le maximum est enregistré dans min à la place du minimum avec ce code."

#. name, qcm8, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    if a > b:\n"
"    min = a\n"
"    else:\n"
"    min = b\n"
msgstr ""
".. code-block:: python\n"
"\n"
"    if a > b:\n"
"    min = a\n"
"    else:\n"
"    min = b\n"

#. name, qcm8, feedback
#: SessTest_QCM/task.yaml
msgid ""
"The indentation is an extremelly important part of coding in Python since it "
"allows to know in which block the statement is executed. What is executed in "
"this case if the condition is verified?"
msgstr ""
"L'indentation est une part extrêmement importante de la programmation en Python "
"puisque ça permet de savoir dans quel bloc l'expression est exécutée. Qu'est-ce "
"qui est exécuté dans ce cas si la condition est vérifiée ?"

#. name, qcm8, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    if a > b:\n"
"        min = b\n"
"    else:\n"
"        min = a"
msgstr ""
".. code-block:: python\n"
"\n"
"    if a > b:\n"
"        min = b\n"
"    else:\n"
"        min = a"

#. name, qcm9, name
#: SessTest_QCM/task.yaml
msgid "Absolute value"
msgstr "Valeur absolue"

#. name, qcm9, header
#: SessTest_QCM/task.yaml
msgid ""
"Which of these code fragments places in the variable ``abs`` the absolute value "
"of ``x`` ?"
msgstr ""
"Lequel de ces fragments de code place la valeur absolue de ``x`` dans "
"``abs`` ?"

#. name, qcm9, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    if x == 0:\n"
"        abs = x\n"
"    else:\n"
"        abs = -x"
msgstr ""
".. code-block:: python\n"
"\n"
"    if x == 0:\n"
"        abs = x\n"
"    else:\n"
"        abs = -x"

#. name, qcm9, feedback
#: SessTest_QCM/task.yaml
msgid "What happens if ``x`` is a positive integer?"
msgstr "Que se passe-t-il si ``x`` est un entier positif ?"

#. name, qcm9, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    if x > 0:\n"
"        abs = -x\n"
"    else:\n"
"        abs = x"
msgstr ""
".. code-block:: python\n"
"\n"
"    if x > 0:\n"
"        abs = -x\n"
"    else:\n"
"        abs = x"

#. name, qcm9, feedback
#: SessTest_QCM/task.yaml
msgid ""
"You should consider carefully the condition used to store `-x` in  ``abs`` ."
msgstr ""
"Vous devriez examiner attentivement la condition utilisée pour stocker  `-x` "
"dans  ``abs``."

#. name, qcm9, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    if x < 0:\n"
"        abs = -x\n"
"    else:\n"
"        abs = x"
msgstr ""
".. code-block:: python\n"
"\n"
"    if x < 0:\n"
"        abs = -x\n"
"    else:\n"
"        abs = x"

#. name, qcm10, name
#: SessTest_QCM/task.yaml
msgid "Intervals"
msgstr "Intervalles"

#. name, qcm10, header
#: SessTest_QCM/task.yaml
msgid ""
"In mathematics, we define intervals, closed, open and semi-open. The semi-open "
"interval :math:`[3,7[` includes all real numbers that are greater than or equal "
"to `3` and strictly less than 7. Which of the following code fragments display "
"``true`` on the standard output if and only if ``x`` belongs to the interval :"
"math:`[a, b[` ? We assume for this question that the value stored in the "
"variable ``a`` is strictly less than the one stored in the ``b`` variable."
msgstr ""
"En mathématiques, on définit des intervalles fermés, ouverts ou semi-ouverts. "
"Les intervalles semi-ouverts :math:`[3,7[` incluent tous les nombres réels qui "
"sont plus grands ou égaux à `3` et strictement plus petits que 7. Lequel des "
"fragments de code suivants affiche ``true`` en sortie standard si et seulement "
"si ``x`` appartient à l'intervalle :math:`[a, b[` ? Pour cette question, nous "
"supposons que la valeur stockée dans la variable ``a`` est strictement plus "
"petite que celle stockée dans la variable ``b``."

#. name, qcm10, text
#: SessTest_QCM/task.yaml
msgid ""
".. code:: python\n"
"\n"
"    if x <= a and x < b:\n"
"        print('true')"
msgstr ""
".. code:: python\n"
"\n"
"    if x <= a and x < b:\n"
"        print('true')"

#. name, qcm10, feedback
#: SessTest_QCM/task.yaml
msgid ""
"Is there any way for ``x`` to be between ``a`` and ``b`` with this condition?"
msgstr ""
"Est-il possible que ``x`` soit entre ``a`` et ``b`` avec cette condition ?"

#. name, qcm10, text
#: SessTest_QCM/task.yaml
msgid ""
".. code:: python\n"
"\n"
"    if a < x and x < b:\n"
"        print('true')"
msgstr ""
".. code:: python\n"
"\n"
"    if a < x and x < b:\n"
"        print('true')"

#. name, qcm10, feedback
#: SessTest_QCM/task.yaml
msgid "What happens if ``x == a`` ?"
msgstr "Que se passe-t-il si ``x == a`` ?"

#. name, qcm10, text
#: SessTest_QCM/task.yaml
msgid ""
".. code:: python\n"
"\n"
"    if a <= x and x < b:\n"
"        print('true')"
msgstr ""
".. code:: python\n"
"\n"
"    if a <= x and x < b:\n"
"        print('true')"

#. name, qcm11, name
#: SessTest_QCM/task.yaml
msgid "Operators usages"
msgstr "Usage des opérateurs"

#. name, qcm11, header
#: SessTest_QCM/task.yaml
msgid "Which of the following code fragments prints 14?"
msgstr "Lequel des fragments de code suivants affiche 14 ?"

#. name, qcm11, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    print(43/3)"
msgstr ""
".. code-block:: python\n"
"\n"
"    print(43/3)"

#. name, qcm11, feedback
#: SessTest_QCM/task.yaml
msgid "The result of the division is 14.333333334"
msgstr "Le résultat de la division est 14.333333334"

#. name, qcm11, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    to_print = '1'\n"
"    print(to_print + 4)"
msgstr ""
".. code-block:: python\n"
"\n"
"    to_print = '1'\n"
"    print(to_print + 4)"

#. name, qcm11, feedback
#: SessTest_QCM/task.yaml
msgid "You cannot concatenate a string and an int."
msgstr "Vous ne pouvez pas concaténer une string et un entier."

#. name, qcm11, text
#: SessTest_QCM/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    print(43//3)"
msgstr ""
".. code-block:: python\n"
"\n"
"    print(43//3)"

#. context
#: Sort/task.yaml
msgid ""
"In computer science, a sorting algorithm is an algorithm that puts the elements "
"of a list in a certain order. The most-used orders are numerical order and "
"lexicographical order. Efficient sorting is important for optimizing the use of "
"other algorithms (such as search and merge algorithms) which require input data "
"to be in sorted lists; it is also often useful for canonicalizing data and for "
"producing human-readable output. More formally, the output must satisfy two "
"conditions:\n"
"\n"
"* The output is in nondecreasing order (each element is no smaller than the "
"previous element according to the desired total order);\n"
"* The output is a permutation (reordering but with all of the original "
"elements) of the input.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"En sciences informatiques, un algorithme de tri est un algorithme qui place les "
"éléments d'une liste dans un certain ordre. Les ordres les plus utilisés sont "
"l'ordre numérique et l'ordre lexicographique. Un tri efficace est important "
"pour optimiser l'utilisation d'autres algorithmes (tels que les algorithmes de "
"recherche ou de fusion) qui ont besoin d'une liste triée en entrée ; c'est "
"aussi souvent utile pour la canonicalisation des données  et pour produire des "
"sorties lisibles par les humains. Plus formellement, la sortie doit satisfaire "
"deux conditions :\n"
"\n"
"* La sortie est en ordre  croissant (chaque élément n'est pas plus petit que "
"l'élément précédent selon l'ordre choisi);\n"
"* La sortie est une permutation (réorganisation mais avec tous les éléments "
"originaux) de l'entrée.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Sort/task.yaml
msgid "Session 5: List sorting"
msgstr "Session 5 : Tri d'une liste"

#. name, q1, header
#: Sort/task.yaml
msgid ""
".. code-block:: python\n"
"\n"
"    a_list = ... #list to sort\n"
"    sorted_list = ... #store in this variable the sorted version of the list"
msgstr ""
".. code-block:: python\n"
"\n"
"    a_list = ... #liste à trier\n"
"    sorted_list = ... #enregistrez dans cette variable la version triée de la "
"liste"

#: Sort/src/TestSort.py:14
msgid ""
"Nice try! But using the predefined 'sort' function is a bit of cheating.\n"
"\t\tTry to implement an actual algorithm for sorting the list."
msgstr ""
"Bien essayé! Mais utiliser la fonction prédéfinie 'sort', c'est un peu "
"tricher.\n"
"\t\t Essayez d'implémenter un véritable algorithme pour trier la liste."

#: Sort/src/TestSort.py:21
msgid "The sorted version of {} is {} and you returned {}."
msgstr "La version triée de {} est {} et vous avez retourné {}."

#: Sort/src/Templates/sort:6
msgid ""
"Nice try! But 'sorted' has been disabled for list objects.\n"
"\t\tPlease write an actual algorithm sorting the list."
msgstr ""
"Bien essayé! Mais 'sorted' a été désactivé pour les objets listes.\n"
"\t\tEcrivez un véritable algorithme pour trier la liste."

#. context
#: SpeedingFine/task.yaml
msgid ""
"The police is hiring you to develop a program to calculate the fine that a car "
"driver will have to pay in the event of a violation. The law stipulates that "
"the driver will have to pay 5 euros per km/h above the maximum authorized "
"speed, with a **minimum fine of 12.5€**.\n"
"\n"
"For any speeding of **more than 10 km/h** above the authorized speed, the fine "
"is **DOUBLED**!\n"
"\n"
"Your program takes as input the maximum allowed speed and the actual speed of "
"the car. It calculates the possible fine.\n"
"\n"
"*Example*:\n"
"\n"
"- If the maximum speed is 50km/h and the vehicle is traveling at 62km/h, the "
"penalty will be 12 * 5 * 2 = 120€.\n"
"\n"
"- If the maximum speed is 50km/h and the vehicle is traveling at 56km/h, the "
"penalty will be 6 * 5 = 30€.\n"
"\n"
"- If the maximum speed is 50km/h and the vehicle is traveling at 51km/h, the "
"fine will be 12.5€.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"La police vous engage pour développer un programme qui calcule les amendes "
"qu'un conducteur doit payer s'il a fait une infraction. La loi stipule qui le "
"conducteur doit payer 5 € par km/h au dessus de la limite de vitesse autorisée, "
"avec une **amende minimum de 12.5 €**.\n"
"\n"
"Pour tous les excès de vitesse de **plus de 10 km/h** au dessus de la limite, "
"l'amende est **DOUBLEE** !\n"
"\n"
"Votre programme prend en entrée la vitesse maximale autorisée et la vitesse "
"actuelle de la voiture et calcule l'amende possible.\n"
"\n"
"*Exemple*:\n"
"\n"
"- Si la vitesse maximale est de 50km/h et que le véhicule circule à du 62km/h, "
"la peine sera de 12 * 5 * 2 = 120 €.\n"
"\n"
"- Si la vitesse maximale est de 50km/h et que le véhicule circule à du 56km/h, "
"la peine sera de 6 * 5 = 30 €.\n"
"\n"
"- Si la vitesse maximale est de 50km/h et que le véhicule circule à du 51km/h, "
"la peine sera de 12.5 €.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: SpeedingFine/task.yaml
msgid "Session 3: Speeding fine"
msgstr "Session 3 : Amende pour excès de vitesse"

#. name, q1, header
#: SpeedingFine/task.yaml
msgid "Implement the function ``fine(authorized_speed, actual_speed)`` in Python."
msgstr ""
"Implémentez la fonction ``fine(authorized_speed, actual_speed)`` en Python."

#: SpeedingFine/src/TestFine.py:18 SpeedingFine/src/TestFine.py:27
#: SpeedingFine/src/TestFine.py:36 SpeedingFine/src/TestFine.py:45
msgid "The speed fine for a speed of {} instead of {} is {} and you returned {}."
msgstr ""
"L'amende pour excès de vitesse pour une vitesse de {} à la place de {} est de "
"{} et vous avez retourné {}."

#. context
#: StudentConstructor/task.yaml
msgid ""
"In this exercise, you're asked to provide a class *Student*.\n"
"\n"
"The students are supposed to have the following characteristics:\n"
"\n"
"* A first name\n"
"\n"
"* A surname\n"
"\n"
"* A birth date\n"
"\n"
"* An email address\n"
"\n"
"* A student number (different for every student and given at the creation of "
"the object, the first one should be 0 and you should use a class' variable)\n"
"\n"
"The object, when cast as a **string** should return for example:\n"
"\n"
"Student number **0**: **Hervé** **Ducobu** born the **1st of april**, can be "
"reached at **doNotReachMeForHomeworks@gmail.com**\n"
"\n"
"To do so you're invited to use the magic methods.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Dans cet exercice, il vous est demandé de donner une classe  *Student*.\n"
"\n"
"Les étudiants sont censés avoir les caractéristiques suivantes : \n"
"\n"
"* Un prénom\n"
"\n"
"* Un surnom\n"
"\n"
"* Une date de naissance\n"
"\n"
"* Une adresse mail\n"
"\n"
"* Un numéro d'identification (différent pour tous les étudiants et donné à la "
"création de l'objet, le premier commence à 0 et devrait être une variable de classe)\n"
"\n"
"L'objet, quand casté en tant que **string** devrait retourner par exemple :\n"
"\n"
"Student number **0**: **Hervé** **Ducobu** born the **1st of april**, can be "
"reached at **doNotReachMeForHomeworks@gmail.com**\n"
"\n"
"Pour cela vous êtes invités à utiliser les méthodes magiques.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: StudentConstructor/task.yaml
msgid "Session 9: Student - init"
msgstr "Session 9 : Student - init"

#. name, q1, header
#: StudentConstructor/task.yaml
msgid ""
"Implement the class ``Student`` in Python.\n"
"\n"
"We will create the object with:\n"
"\n"
"*stu = Student('firstname', 'surname', 'birthday', 'email')*"
msgstr ""
"Implémentez la classe ``Student`` en Python.\n"
"\n"
"Nous allons créer l'objet avec :\n"
"\n"
"*stu = Student('firstname', 'surname', 'birthday', 'email')*"

#: StudentConstructor/src/CorrStudent.py:19
msgid "Student number {}: {} {} born the {}, can be reached at {}"
msgstr "Student number {}: {} {} born the {}, can be reached at {}"

#: StudentConstructor/src/TestStudent.py:28
msgid ""
"With the following data: {}, {}, {}, {} for the student created, you returned "
"{} instead of {}"
msgstr ""
"Avec les données suivantes : {}, {}, {}, {} pour l'étudiant créé, vous avez "
"retourné {} à la place de {}"

#: StudentConstructor/src/TestStudent.py:39
msgid ""
"With the following data: {}, {}, {}, {} for the {}th student created, you "
"returned {} instead of {}"
msgstr ""
"Avec les données suivantes : {}, {}, {}, {} pour le {}ème étudiant créé, vous "
"avez retourné {} à la place de {}"

#. context
#: Sum/task.yaml
msgid ""
"The method ``sum(list)`` returns the sum of the elements contained in "
"``list``.\n"
"\n"
"Example: the sum of :math:`[1, 2, 3]` is :math:`6`\n"
"\n"
"Note that your algorithm should be able to compute the sum even "
"when the list ``list`` contains malicious elements (not numbers).\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"La méthode ``sum(list)`` retourne la somme des éléments contenus dans "
"``list``.\n"
"\n"
"Exemple: la somme de :math:`[1, 2, 3]` est :math:`6`\n"
"\n"
"Notez que votre algorithme devrait être capable de calculer la somme même si la "
"liste ``list`` contient des éléments malicieux (pas des nombres).\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Sum/task.yaml
msgid "Session 4: Sum"
msgstr "Session 4 : Somme"

#: Sum/src/TestSum.py:30
msgid "The sum list provided was {}. The type() method may be able to help you. "
msgstr ""
"La liste à sommer était {}. La méthode type() pourra peut-être vous aider."

#. context
#: Translator/task.yaml
msgid ""
"Your citizen band radio tinder worked quite well and you're now able to speak "
"with a lot of interesting people. Even more interesting, a wonderfull creature "
"just contacted you and achieved to send you an image through points and spaces "
"(God bless Morse code).\n"
"\n"
"You definitely want to speak with her and other future matchs but it occured to "
"you that you didn't study foreign language well enough. Fortunately you've got "
"dictionnaries in your computer (which apparently had downloaded the whole "
"internet). You know just have to code a translator!\n"
"\n"
"Note that if the word you're looking to translate isn't registered in your "
"dictionnary, you should let the word in its original language.\n"
"\n"
"*Example*:\n"
"\n"
"- \"I'm fond of Dean\" would become in french with the dictionnary ``fr``: \"je "
"suis amoureux de doyen\"\n"
"\n"
"Note that we do not excpect you to provide an exact translation but a word to "
"word one. Moreover the keys are stored in lowercase in the dictionnaries.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Votre tinder par radio a bien fonctionné et vous pouvez désormais discuter avec "
"beaucoup de gens intéressants. Encore plus intéressant, une merveilleuse "
"créature vient de vous contacter et est parvenue à vous envoyer une image à "
"travers des points et des espaces (Dieu bénisse le code Morse).\n"
"\n"
"Vous voulez vraiment lui parler ainsi qu'à vos autres futurs matchs mais vous "
"venez de réaliser que vous n'avez jamais bien étudier les langues étrangères. "
"Heureusement, vous avez des dictionnaires sur votre ordinateur (qui a "
"apparemment téléchargé l'entierté d'internet). Vous devez simplement coder un "
"traducteur!\n"
"\n"
"Notez que si un mot que vous voulez traduire n'est pas dans le dictionnaire, "
"vous devez laisser le mot dans son langage original.\n"
"\n"
"*Exemple*:\n"
"\n"
"- \"I'm fond of Dean\" deviendrait en français avec le dictionnaire ``fr``: "
"\"je suis amoureux de doyen\"\n"
"\n"
"Notez qu'on ne s'attend pas à ce que vous donniez des traductions exactes mais "
"bien une traduction mot par mot. De plus, les clés sont enregistrées en "
"minuscules dans le dictionnaire.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: Translator/task.yaml
msgid "Session 7: Apocalypse - Language translation"
msgstr "Session 7 : Apocalypse - Traduction d'un langage"

#. name, q1, header
#: Translator/task.yaml
msgid ""
"Implement the function ``translate(data, lan)`` in Python.\n"
"\n"
"With ``data`` as the string you wish to translate and dictionnaries named "
"according to ``lan`` usable to do the translations in the target language."
msgstr ""
"Implémentez la fonction ``translate(data, lan)`` en Python.\n"
"\n"
"Avec ``data`` comme la chaine de caractère que vous souhaiter traduire et les "
"dictionnaires nommés  selon ``lan`` utilisable pour faire les traductions dans "
"le langage ciblé."

#: Translator/src/TestTranslator.py:24 Translator/src/TestTranslator.py:33
msgid "The expected translation of {} in {} is {} and you returned {}."
msgstr "La traduction attendue pour {} en {} est {} et vous avez retourné {}."

#. context
#: WrongIterations/task.yaml
msgid ""
"Gregory made the following code to iterate over the elements of ``matrix``.\n"
"\n"
".. code-block:: python\n"
"\n"
"    matrix = [\n"
"        [8, 11, 4],\n"
"        [7, 12, 9],\n"
"        [0, -6, 0],\n"
"    ]\n"
"\n"
"    sum_even = 0\n"
"    for i in range(4):\n"
"        for j in range(4):\n"
"            elem = matrix[i][j]\n"
"            if elem%2 == 0:\n"
"                sum_even += matrix[i][j]\n"
"\n"
"As you can see, what he wanted was to **compute the sum of all the even values "
"in the matrix**.\n"
"However, when run, **his code crashes**.\n"
"\n"
"Find **where the mistake is** and **rewrite this code using ``while`` loops and "
"iterators** (not ``for`` loops).\n"
"\n"
"You can consider ``matrix`` is provided (you don't have to create it) and that "
"it will never contain something else than integers.\n"
"Store the sum of the even number in a variable called ``sum_even`` as in the "
"code above.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Gregory a créé le code suivant pour itérer sur les éléments de ``matrix``.\n"
"\n"
".. code-block:: python\n"
"\n"
"    matrix = [\n"
"        [8, 11, 4],\n"
"        [7, 12, 9],\n"
"        [0, -6, 0],\n"
"    ]\n"
"\n"
"    sum_even = 0\n"
"    for i in range(4):\n"
"        for j in range(4):\n"
"            elem = matrix[i][j]\n"
"            if elem%2 == 0:\n"
"                sum_even += matrix[i][j]\n"
"\n"
"Comme vous pouvez le voir, ce qu'il voulait faire était de **calculer la somme "
"de toute les valeur paires dans la matrice**.\n"
"Cependant, quand exécuté, **le code crash**.\n"
"\n"
"Trouvez **où se trouve l'erreur** et  **réécrivez le code en utilisant une "
"boucle ``while`` et des itérateurs** (pas de boucles ``for``).\n"
"\n"
"Vous pouvez considérer que ``matrix`` est fourni (donc vous ne devez pas le "
"créer) et qu'elle ne contiendra jamais autre chose que des entiers.\n"
"Enregistrez la somme des nombres pairs dans une variable nommée ``sum_even`` "
"comme dans le code ci-dessus\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: WrongIterations/task.yaml
msgid "Session 7: Wrong iterations"
msgstr "Session 7 : Mauvaises itérations"

#. name, q1, header
#: WrongIterations/task.yaml
msgid ""
"As a reminder, iterators typically have the following methods:\n"
"\n"
".. code-block:: python\n"
"\n"
"    class ExampleIterator:\n"
"        def __iter__():  # Returns the iterator itself\n"
"            ...\n"
"        def __next__():  # Returns the next element to iterate on\n"
"            ..."
msgstr ""
"Pour rapel, les itérateurs ont typiquement les méthodes suivantes :\n"
"\n"
".. code-block:: python\n"
"\n"
"    class ExampleIterator:\n"
"        def __iter__():  # retourne l'itérateur lui-même\n"
"            ...\n"
"        def __next__():  # retourne l'élément suivant sur lequel on va itérer\n"
"            ..."

#: WrongIterations/src/TestWrongIterations.py:37
msgid ""
"Well tried! But you cannot use a `for` loop in this exercise. Use `while` and "
"iterators instead."
msgstr ""
"Bien essayé! Mais vous ne pouvez pas utiliser de boucle `for`dans cet exercice. "
"Utilisez `while` et des itérateurs à la place."

#: WrongIterations/src/TestWrongIterations.py:48
msgid "Your code raised an exception ({}('{}')) while handling matrix {}."
msgstr ""
"Votre code a levé une exception ({}('{}')) lors de la manipulation de la "
"matrice  {}."

#: WrongIterations/src/TestWrongIterations.py:50
msgid ""
"With matrix {}, you computed an incorrect sum of even numbers {} instead of {}."
msgstr ""
"Avec la matrice {}, vous avez calculé une somme erronée de nombres pairs {} à "
"la place de {}."

#. context
#: ZooGame/task.yaml
msgid ""
"Imagine you want to make a **video game** about the management of a **virtual "
"zoo**.\n"
"For this exercice, you will implement short parts of the game that represent\n"
"the animals that the zoo owns, as well as the zoo.\n"
"\n"
"In other words, you are asked to **create a class** that will represent **any "
"animal**\n"
"and **several classes** that will represent **different species**.\n"
"You are asked as well to **make a class** that will represent\n"
"**the zoo itself**, containing a certain number of different animals and to "
"create your own zoo.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"
msgstr ""
"Imaginez que vous vouliez faire un **jeu vidéo** à propos du management d'un "
"**zoo virtuel**.\n"
"Pour cet exercice, vous allez implémenter de courtes parts du jeu qui "
"représente \n"
"les animaux que le zoo possède, ainsi que le zoo.\n"
"\n"
"En d'autres mots, on vous demande de **créer une classe** qui va représenter "
"**n'importe quel animal**\n"
"et **plusieurs classes** qui vont représenter **différentes espèces**.\n"
"On vous demande aussi de **faire une classe** qui représentera\n"
"**le zoo en lui-même**, contenant un certain nombre d'animaux différents et de "
"créer votre propre zoo.\n"
"\n"
".. raw:: html\n"
"\n"
"   <script defer>\n"
"\n"
"   bodyHeight = 0;\n"
"   function postSize() {\n"
"       if (document.body.scrollHeight != bodyHeight) {\n"
"           bodyHeight = document.body.scrollHeight;\n"
"           window.parent.postMessage({height: document.body.scrollHeight}, \"*\");\n"
"       }\n"
"   };\n"
"   var target = document.querySelector('body');\n"
"\n"
"   var observer = new MutationObserver(postSize);\n"
"\n"
"   var config = { attributes: true, subtree: true }\n"
"\n"
"   observer.observe(target, config);\n"
"   $(document).ready(function(){\n"
"       setTimeout(postSize, 0);\n"
"   });\n"
"   </script>"

#. name
#: ZooGame/task.yaml
msgid "Session 10: Zoo Game"
msgstr "Session 10 : Zoo Tycoon"

#. name, q1, header
#: ZooGame/task.yaml
msgid ""
"You will first implement a class ``Animal``, which should have:\n"
"\n"
"* an attribute ``name`` which is the name the player will give the animal\n"
"\n"
"* an attribute ``diurnal`` which should be ``True`` if the animal is active at "
"day time and ``False`` if it is active at night time\n"
"\n"
"* an attribute ``nb_legs`` which represents the number of legs the animal has\n"
"\n"
"* an attribute ``asleep`` which will be set to ``True`` (resp. ``False``) by "
"calling the method ``sleep()`` (resp. ``wake_up()``). If the animal tries to "
"wake up while it is not asleep or to sleep while it is already asleep, your "
"program should raise a ``RuntimeError``.\n"
"\n"
"Only the **name** of the animal needs to be passed to the **constructor**.\n"
"We decide to set ``asleep`` to ``False`` by default.\n"
"Obviously, as this class represents any animal, we don't know what value\n"
"the other attributes should take.\n"
"The most logical thing to do would be to set them to ``None``.\n"
"\n"
"You will then implement **three different subclasses** of ``Animal``\n"
"representing three different species: ``Lion``, ``Owl`` and ``Giraffe``.\n"
"The values of the different attributes of the parent class should now be set\n"
"in their constructors.\n"
"\n"
"``Lion`` will have an additional ``roar()`` **method**, which will print "
"``ROARRR!!!``.\n"
"\n"
"``Owl`` will have a ``fly()`` **method**, which won't do anything (use the "
"statement ``pass`` to do nothing).\n"
"\n"
"``Giraffe`` will have an additional **attribute** ``neck_length`` (in meters).\n"
"This information will be given to the constructor of the class.\n"
"Note that your code shouldn't accept invalid values for this attribute\n"
"(negative lengths or string values for example).\n"
"Raise a ``ValueError`` in case you get an invalid value.\n"
"\n"
"You will then implement a **last class**: ``Zoo``,\n"
"which will have a list of animals called ``animals`` as an **attribute**\n"
"and a **method** ``add_animal(animal)`` to fill this list.\n"
"Raise a ``ValueError`` if this method receives something else than an animal.\n"
"\n"
"You are finally asked to **define a function** ``create_my_zoo()`` that\n"
"will return your zoo containing a lion, an owl and two giraffes.\n"
"Those are your animals, name them as you want ;)"
msgstr ""
"Commencez par implémenter une classe ``Animal``, qui devrait avoir :\n"
"\n"
"* un attribut ``name`` qui est le nom que le joueur donnera à l'animal\n"
"\n"
"* un attribut ``diurnal`` qui doit être ``True`` si l'animal est actif pendant "
"la journée et ``False`` s'il est actif pendant la nuit\n"
"\n"
"* un attribut ``nb_legs`` qui représente le nombre de pattes qu'a un animal\n"
"\n"
"* un attribut ``asleep`` qui sera mis à ``True`` (resp. ``False``) avec l'appel "
"à la fonction ``sleep()`` (resp. ``wake_up()``). Si l'animal essaye de se "
"réveiller alors qu'il n'est pas endormi ou s'il essaye de dormir alors qu'il "
"dort déjà, votre programme devrait lever une ``RuntimeError``.\n"
"\n"
"Seul le **name** de l'animal doit être passé en argument au **constructeur**.\n"
"Nous avons décidé de mettre ``asleep`` à ``False`` par défaut.\n"
"Evidemment, comme cette classe représente n'importe quel animal, nous ne "
"connaissons pas la valeur\n"
"que les autres attributs devraient prendre.\n"
"La chose la plus logique à faire serait de les mettre à ``None``.\n"
"\n"
"Vous implémenterez ensuite **trois sous-classes différentes** d'``Animal``\n"
"réprésentant trois espèces différentes : ``Lion``, ``Owl`` et ``Giraffe``.\n"
"Les valeurs des différents attributs de la classe parent devraient maintenant "
"être définies\n"
"dans les constructeurs.\n"
"\n"
"``Lion`` aura une **méthode** additionnelle ``roar()`` , qui affichera "
"**ROARRR!!!**.\n"
"\n"
"``Owl`` aura une **méthode** ``fly()``, qui ne fera rien (utilisez "
"l'expression ``pass`` pour ne rien faire).\n"
"\n"
"``Giraffe`` aura un **attribut** additionnel ``neck_length`` (en mètres).\n"
"Cette information sera donnée au constructeur de la classe.\n"
"Notez que votre code ne devrait pas accepter de valeurs invalides pour cet "
"attribut\n"
"(les tailles négatives ou exprimées en chaines de caractères par exemple).\n"
"Levez une ``ValueError`` dans le cas où vous avez une valeur invalide.\n"
"\n"
"Vous implémenterez ensuite une **dernière classe** : ``Zoo``,\n"
"qui aura une liste de tous les animaux appelée ``animals`` comme **attribut**\n"
"et une  **méthode** ``add_animal(animal)`` pour remplir cette liste.\n"
"Levez une ``ValueError`` si cette méthode reçoit quelque chose d'autre qu'un "
"animal.\n"
"\n"
"On vous demande enfin de **définir une fonction** ``create_my_zoo()`` qui\n"
"retournera votre zoo contenant un lion, une chouette et deux girafes.\n"
"Ce sont vos animaux, appelez les comme vous voulez ;)"

#: ZooGame/src/TestZooGame.py:15
msgid "Does the class `Animal` exist?"
msgstr "Est-ce que la classe `Animal` existe ?"

#: ZooGame/src/TestZooGame.py:17 ZooGame/src/TestZooGame.py:81
msgid "You wrongly raised an exception while creating an animal: {}('{}')"
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant un "
"animal : {}('{}')"

#: ZooGame/src/TestZooGame.py:22
msgid "Does the class `Lion` exist?"
msgstr "Est-ce que la classe `Lion` existe ?"

#: ZooGame/src/TestZooGame.py:24
msgid "You wrongly raised an exception while creating a lion: {}('{}')"
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant un "
"lion : {}('{}')"

#: ZooGame/src/TestZooGame.py:29
msgid "Does the class `Owl` exist?"
msgstr "Est-ce que la classe `Owl` existe ?"

#: ZooGame/src/TestZooGame.py:31
msgid "You wrongly raised an exception while creating an owl: {}('{}')"
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant une "
"chouette : {}('{}')"

#: ZooGame/src/TestZooGame.py:36
msgid "Does the class `Giraffe` exist?"
msgstr "Est-ce que la classe `Giraffe` existe ?"

#: ZooGame/src/TestZooGame.py:38
msgid "You wrongly raised an exception while creating a giraffe: {}('{}')"
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant une "
"girafe : {}('{}')"

#: ZooGame/src/TestZooGame.py:41
msgid "Your class `Animal` does not have an attribute `name`."
msgstr "Votre classe `Animal` n'a pas d'attribut `name`."

#: ZooGame/src/TestZooGame.py:42
msgid "Your class `Animal` does not have an attribute `diurnal`."
msgstr "Votre classe `Animal` n'a pas d'attribut `diurnal`."

#: ZooGame/src/TestZooGame.py:43
msgid "Your class `Animal` does not have an attribute `nb_legs`."
msgstr "Votre classe `Animal` n'a pas d'attribut `nb_legs`."

#: ZooGame/src/TestZooGame.py:44
msgid "Your class `Animal` does not have an attribute `asleep`."
msgstr "Votre classe `Animal` n'a pas d'attribut `asleep`."

#: ZooGame/src/TestZooGame.py:47
msgid "Your class `Zoo` does not have an attribute `animals`."
msgstr "Votre classe `Zoo` n'a pas d'attribut `animals`."

#: ZooGame/src/TestZooGame.py:48
msgid "Your class `Zoo` does not have a method named `add_animal`."
msgstr "Votre classe `Zoo` n'a pas de méthode appelée `add_animal`."

#: ZooGame/src/TestZooGame.py:50
msgid "Does the class `create_my_zoo()` exists?"
msgstr "Est-ce que la méthode  `create_my_zoo()` existe ? "

#: ZooGame/src/TestZooGame.py:52
msgid "Does the class `Zoo` exist?"
msgstr "Est-ce que la classe  `Zoo` existe ? "

#: ZooGame/src/TestZooGame.py:54
msgid "You wrongly raised an exception while creating a zoo: {}('{}')"
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant un "
"zoo : {}('{}')"

#: ZooGame/src/TestZooGame.py:62
msgid ""
"The name passed to the constructor of `Animal` does not get stored in the "
"attribute `name`."
msgstr ""
"Le nom passé au constructeur d' `Animal`n'est pas enregistré dans l'attribut "
"`name`."

#: ZooGame/src/TestZooGame.py:64
msgid "The attribute `diurnal` of `Animal` is not set to `None` by default."
msgstr "L'attribut `diurnal` de `Animal` n'est pas défini à `None` par défaut."

#: ZooGame/src/TestZooGame.py:66
msgid "The attribute `nb_legs` of `Animal` is not set to `None` by default."
msgstr "L'attribut `nb_legs` de `Animal` n'est pas défini à `None` par défaut."

#: ZooGame/src/TestZooGame.py:68
msgid "The attribute `asleep` of `Animal` is not set to `False` by default."
msgstr "L'attribut `asleep` de `Animal` n'est pas défini à `False` par défaut."

#: ZooGame/src/TestZooGame.py:78
msgid ""
"The name passed to the constructor of `Animal` is not stored in the attribute "
"`name`."
msgstr ""
"Le nom passé au constructeur d'`Animal`n'est pas enregistré dans l'attribut "
"`name`."

#: ZooGame/src/TestZooGame.py:89
msgid ""
"Calling ``sleep()`` on your animals doesn't set their attribute ``asleep`` to "
"``True``"
msgstr ""
"Appeler ``sleep()`` sur vos animaux ne définit pas son ``asleep`` à ``True``"

#: ZooGame/src/TestZooGame.py:92
msgid ""
"Calling ``wake_up()`` on your animals doesn't set their attribute ``asleep`` to "
"``False``"
msgstr ""
"Appeler ``wake_up()`` sur vos animaux ne définit pas son ``asleep`` à ``False``"

#: ZooGame/src/TestZooGame.py:99
msgid ""
"You wrongly raised an exception while creating and using an animal: {}('{}')"
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant et "
"utilisant un animal  : {}('{}')"

#: ZooGame/src/TestZooGame.py:108
msgid "Your class `Lion` is not a subclass of `Animal`."
msgstr "Votre classe `Lion` n'est pas une sous-classe de `Animal`."

#: ZooGame/src/TestZooGame.py:109
msgid ""
"The name passed to the constructor of `Lion` does not get stored in the "
"attribute `name`."
msgstr ""
"Le nom passé au constructeur de `Lion` n'est pas enregistrer dans l'attribut "
"`name`."

#: ZooGame/src/TestZooGame.py:111
msgid "Lions have 4 legs."
msgstr "Les lions ont 4 pattes."

#: ZooGame/src/TestZooGame.py:112
msgid "Lions are active during day time"
msgstr "Les lions sont actifs durant la journée."

#: ZooGame/src/TestZooGame.py:113
msgid "`Lion` should be awake after its creation."
msgstr "`Lion` devrait être éveillé après sa création."

#: ZooGame/src/TestZooGame.py:114
msgid "Did you make a `roar()` method in your class `Lion`?"
msgstr "Avez-vous fait une méthode `roar()` dans votre classe `Lion`?"

#: ZooGame/src/TestZooGame.py:116
msgid "You wrongly raised an exception while creating and using a lion: {}('{}')"
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant et "
"utilisant un lion : {}('{}')"

#: ZooGame/src/TestZooGame.py:125
msgid "Your class `Owl` is not a subclass of `Animal`."
msgstr "Votre classe `Owl` n'est pas une sous-classe de `Animal`."

#: ZooGame/src/TestZooGame.py:126
msgid ""
"The name passed to the constructor of `Owl` does not get stored in the "
"attribute `name`."
msgstr ""
"Le nom passé au constructeur de `Owl` n'est pas enregistrer dans l'attribut "
"`name`."

#: ZooGame/src/TestZooGame.py:128
msgid "Owls have 2 legs."
msgstr "Les chouettes ont deux pattes."

#: ZooGame/src/TestZooGame.py:129
msgid "Owls are inactive during day time"
msgstr "Les chouettes sont inactives durant la journée."

#: ZooGame/src/TestZooGame.py:130
msgid "`Owl` should be awake after its creation."
msgstr "L'`Owl` devrait être éveillée après sa création."

#: ZooGame/src/TestZooGame.py:131
msgid "Did you put a `fly()` method in your class `Owl`?"
msgstr "Avez-vous mis une méthode `fly()` dans votre classe `Owl` ?"

#: ZooGame/src/TestZooGame.py:133
msgid "You wrongly raised an exception while creating and using an owl: {}('{}')"
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant et "
"utilisant une chouette : {}('{}')"

#: ZooGame/src/TestZooGame.py:144
msgid "Your class `Giraffe` is not a subclass of `Animal`."
msgstr "Votre classe `Giraffe` n'est pas une sous-classe d'`Animal`."

#: ZooGame/src/TestZooGame.py:145
msgid ""
"The name passed to the constructor of `Giraffe` does not get stored in the "
"attribute `name`."
msgstr ""
"Le nom passé au constructeur de `Giraffe` n'est pas enregistrer dans l'attribut "
"`name`."

#: ZooGame/src/TestZooGame.py:147
msgid "Giraffes have 4 legs."
msgstr "Les girafes ont 4 pattes."

#: ZooGame/src/TestZooGame.py:148
msgid "Giraffes are active during day time"
msgstr "Les girafes sont actives durant la journée."

#: ZooGame/src/TestZooGame.py:149
msgid "`Giraffe` should be awake after its creation."
msgstr "La `Giraffe`devrait être éveillée après sa création."

#: ZooGame/src/TestZooGame.py:150
msgid "Did you add a `neck_length` attribute to your class `Giraffe`?"
msgstr "Avez-vous ajouté un attribut `neck_length` à votre classe `Giraffe` ?"

#: ZooGame/src/TestZooGame.py:155
msgid ""
"You wrongly raised an exception while creating and using a lion and a giraffe: "
"{}('{}')"
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant et "
"utilisant un lion et une girafe : {}('{}')"

#: ZooGame/src/TestZooGame.py:170
msgid "Calling `add_animal(animal)` did not add an animal in the list `animals`."
msgstr ""
"Appeler `add_animal(animal)` n'a pas ajouté d'animal dans la liste `animals`."

#: ZooGame/src/TestZooGame.py:172
msgid "Calling `add_animal(lion)` did not add a lion in the list `animals`."
msgstr ""
"Appeler `add_animal(lion)` n'a pas ajouté de lion dans la liste `animals`."

#: ZooGame/src/TestZooGame.py:173
msgid "Calling `add_animal(owl)` did not add an owl in the list `animals`."
msgstr ""
"Appeler `add_animal(owl)` n'a pas ajouté de chouette dans la liste `animals`."

#: ZooGame/src/TestZooGame.py:174
msgid "Calling `add_animal(giraffe)` did not add a giraffe in the list `animals`."
msgstr ""
"Appeler `add_animal(giraffe)` n'a pas ajouté de girafe dans la liste `animals`."

#: ZooGame/src/TestZooGame.py:177
msgid ""
"You wrongly raised an exception while creating a zoo and adding animals: {}"
"('{}')"
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en créant un "
"zoo et ajoutant des animaux : {}('{}')"

#: ZooGame/src/TestZooGame.py:185
msgid ""
"You wrongly raised an exception while using the function `create_my_zoo()`: {}"
"('{}')"
msgstr ""
"Vous avez levé une exception alors que ce n'était pas nécessaire en utilisant "
"ula fonction `create_my_zoo()` : {}('{}')"

#: ZooGame/src/TestZooGame.py:187
msgid "Your zoo is missing animals (you need 1 lion, 1 owl and 2 giraffes)."
msgstr ""
"Des animaux manquent à votre zoo (vous avez besoin d'un lion, d'une chouette, "
"et de deux girafes)."
