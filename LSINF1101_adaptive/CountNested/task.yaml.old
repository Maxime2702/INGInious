accessible: false
author: Tanguy De Bels
categories: []
context: |-
    Ecrivez la fonction ``count(n, l)`` qui renvoit le nombre d'occurrences de ``n`` dans une liste ``l``, dont les éléments peuvent également être des listes. Utilisez une fonction récursive, qui appele la même fonction ``count(n, l)`` pour compter les occurrences de ``n`` dans chaque liste imbriquée.

    L'utilisation suivrait le fragment de code suivant avec la fonction test vue au cours.

    .. code-block:: python

        test(count(2, []) == 0)
        test(count(2, [2, 9, [2, 1, 13, 2], 8, [2, 6]]) == 4)
        test(count(7, [[9, [7, 1, 13, 2], 8], [7, 6]]) == 2)
        test(count(15, [[9, [7, 1, 13, 2], 8], [2, 6]]) == 0)
        test(count(5, [[5, [5, [1, 5], 5], 5], [5, 6]]) == 6)
        test(count("a", [["this",["a",["thing","a"],"a"],"is"], ["a","easy"]]) == 4)

    .. raw:: html

       <script defer>

       bodyHeight = 0;
       function postSize() {
           if (document.body.scrollHeight != bodyHeight) {
               bodyHeight = document.body.scrollHeight;
               window.parent.postMessage({height: document.body.scrollHeight}, "*");
           }
       };
       var target = document.querySelector('body');

       var observer = new MutationObserver(postSize);

       var config = { attributes: true, subtree: true }

       observer.observe(target, config);
       $(document).ready(function(){
           setTimeout(postSize, 0);
       });
       </script>
environment: default
evaluate: best
file: ''
groups: false
input_random: '0'
limits:
    time: '30'
    memory: '100'
    output: '2'
name: 'Session 8: Count'
network_grading: false
order: 86
problems:
    q1:
        type: code
        name: Implémentation
        language: python
        header: Implémentez la fonction ``count(n, l)`` en Python.
        default: ''
run_cmd: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
