accessible: 2018-10-19 12:45:00/
author: Tanguy De Bels
context: |-
    Écrivez une méthode dont la spécification est la suivante :

    .. code-block:: python

        def positions(p,s):
        """
        pre : p est un pattern, c'est-à-dire une chaîne de
              caractères qui peut contenir des lettres, des chiffres et le caractère '?'
              s contient des lettres et des chiffres mais pas le caractère '?'
        post : retourne une liste des occurrences du pattern p à l'intérieur
               de la chaîne de caractères s. Une occurrence est une sous-chaîne de s
               de même longueur que p qui contient les mêmes caractères que p à
               toutes les positions, '?' peut remplacer tous les caractères.
               en ignorant les majuscules et minuscules
        """

    À titre d'exemple, le code ci-dessous :

    .. code-block:: python

        print(positions("ab","CDEF"))
        print(positions("?B","CAbDEF"))
        print(positions("A?","CABDEACF"))
        print(positions("aa","CAAABDEAAF"))
        print(positions("??","CAAAB"))

    Affiche les valeurs ``[]``, ``[1]``, ``[1,5]``, ``[1,2,7]`` et ``[0,1,2,3]``.

    Pour résoudre ce problème, pensez à la découper en sous-problèmes et n'hésitez pas à utiliser une ou plusieurs fonctions supplémentaires.


    .. raw:: html

       <script defer>

       bodyHeight = 0;
       function postSize() {
           if (document.body.scrollHeight != bodyHeight) {
               bodyHeight = document.body.scrollHeight;
               window.parent.postMessage({height: document.body.scrollHeight}, "*");
           }
       };
       var target = document.querySelector('body');

       var observer = new MutationObserver(postSize);

       var config = { attributes: true, subtree: true }

       observer.observe(target, config);
       $(document).ready(function(){
           setTimeout(postSize, 0);
       });
       </script>
environment: default
evaluate: best
groups: false
input_random: '0'
limits:
    output: '2'
    memory: '100'
    time: '30'
name: 'Session 4: QBF'
network_grading: false
order: 39
problems:
    q1:
        type: code
        name: Implémentation
        header: |-
            Implémentez la méthode ``position`` en Python.

            Ajoutez également toute autre fonction nécessaire.
        language: python
        default: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
