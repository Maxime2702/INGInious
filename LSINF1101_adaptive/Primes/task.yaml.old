accessible: 2018-10-12 12:00:00/
author: Tanguy De Bels
context: |-
    Les nombres premiers (`<https://en.wikipedia.org/wiki/Prime_number>`_) sont des nombres avec les caractéristiques suivantes:

    * ce sont des nombres plus grands que 1
    * ils n'ont pas des diviseurs autres que 1 et eux-mêmes.

    Des nombres premiers sont 2, 3, 5, 7, 11, 13, ...

    Pour calculer les nombres premiers on peut utiliser le *crible d'Eratosthène* : pour chaque nombre successif, on vérifie si on peut le diviser par un des nombres premiers déjà trouvés. Si non, on peut ajouter le nombre à la liste. Ecrivez la fonction ``primes(max)`` qui retourne une liste de tous les nombres premiers jusque ``max`` (``max`` inclus si ``max`` est un nombre premier). Si ``max`` est négatif ou zéro, la liste vide doit être retournée.

    Pour limiter la complexité de la solution, decomposez votre solution en sous-problèmes comme nécessaire; utilisez des boucles ``for``.

    .. raw:: html

       <script defer>

       bodyHeight = 0;
       function postSize() {
           if (document.body.scrollHeight != bodyHeight) {
               bodyHeight = document.body.scrollHeight;
               window.parent.postMessage({height: document.body.scrollHeight}, "*");
           }
       };
       var target = document.querySelector('body');

       var observer = new MutationObserver(postSize);

       var config = { attributes: true, subtree: true }

       observer.observe(target, config);
       $(document).ready(function(){
           setTimeout(postSize, 0);
       });
       </script>
environment: default
evaluate: best
groups: false
input_random: '0'
limits:
    output: '2'
    memory: '100'
    time: '30'
name: 'Session 4: Prime numbers'
network_grading: false
order: 37
problems:
    q1:
        name: Implementation
        type: code
        header: Implement the function ``primes(max)`` in Python.
        language: python
        default: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
